// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module integralImg (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        img_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n,
        img_data_stream_0_V_read,
        img_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n,
        img_data_stream_1_V_read,
        img_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n,
        img_data_stream_2_V_read,
        sum_V_din,
        sum_V_full_n,
        sum_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [7:0] img_data_stream_0_V_dout;
input   img_data_stream_0_V_empty_n;
output   img_data_stream_0_V_read;
input  [7:0] img_data_stream_1_V_dout;
input   img_data_stream_1_V_empty_n;
output   img_data_stream_1_V_read;
input  [7:0] img_data_stream_2_V_dout;
input   img_data_stream_2_V_empty_n;
output   img_data_stream_2_V_read;
output  [31:0] sum_V_din;
input   sum_V_full_n;
output   sum_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg img_data_stream_0_V_read;
reg img_data_stream_1_V_read;
reg img_data_stream_2_V_read;
reg sum_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [9:0] buf_1_address0;
reg    buf_1_ce0;
reg    buf_1_we0;
wire   [31:0] buf_1_q0;
wire   [9:0] buf_1_address1;
reg    buf_1_ce1;
wire   [31:0] buf_1_q1;
reg   [9:0] buf_0_address0;
reg    buf_0_ce0;
reg    buf_0_we0;
wire   [31:0] buf_0_q0;
wire   [9:0] buf_0_address1;
reg    buf_0_ce1;
wire   [31:0] buf_0_q1;
reg    img_data_stream_0_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_4_i_fu_324_p2;
wire   [0:0] or_cond_i_fu_342_p2;
reg    img_data_stream_1_V_blk_n;
reg    img_data_stream_2_V_blk_n;
reg    sum_V_blk_n;
wire    ap_CS_fsm_state6;
wire   [9:0] r_V_fu_312_p2;
reg   [9:0] r_V_reg_510;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_1_i_fu_318_p2;
reg   [0:0] tmp_1_i_reg_515;
wire   [0:0] tmp_i_fu_306_p2;
wire   [9:0] c_V_fu_330_p2;
reg   [9:0] c_V_reg_523;
reg    ap_predicate_op36_read_state3;
reg    ap_predicate_op37_read_state3;
reg    ap_predicate_op38_read_state3;
reg    ap_block_state3;
reg   [7:0] tmp_3_reg_531;
reg   [7:0] tmp_5_reg_536;
reg   [7:0] tmp_reg_541;
wire   [0:0] phitmp_i_fu_347_p2;
wire   [0:0] phitmp1_i_fu_353_p2;
wire   [1:0] i_fu_371_p2;
wire    ap_CS_fsm_state4;
wire   [31:0] tmp_15_i_fu_406_p2;
wire   [0:0] exitcond_i_fu_365_p2;
reg   [30:0] tmp_1_reg_569;
reg   [0:0] r_V_3_reg_223;
wire   [31:0] tmp_13_i_fu_495_p2;
wire    ap_CS_fsm_state5;
reg    ap_block_state1;
reg   [0:0] r_V_4_reg_235;
reg   [9:0] t_V_reg_247;
reg   [9:0] t_V_1_reg_258;
reg   [31:0] pix_val_load_1_reg_270;
reg   [1:0] i_i_reg_281;
reg   [31:0] tmp_2_reg_292;
wire   [63:0] tmp_9_i_fu_432_p1;
wire   [63:0] tmp_10_i_fu_444_p1;
wire   [63:0] tmp_17_i_fu_501_p1;
wire  signed [31:0] tmp_4_fu_450_p1;
wire   [0:0] tmp_6_i_fu_336_p2;
wire   [0:0] sel_tmp_i_fu_377_p2;
wire   [0:0] sel_tmp2_i_fu_389_p2;
wire   [7:0] sel_tmp1_i_fu_383_p3;
wire   [7:0] UnifiedRetVal_i_i_fu_395_p3;
wire   [31:0] tmp_14_i_fu_402_p1;
wire   [31:0] mul_fu_416_p0;
wire   [64:0] mul_fu_416_p2;
wire   [9:0] ret_V_fu_438_p2;
wire   [31:0] buf_load_phi_i_fu_459_p3;
wire   [31:0] tmp_11_i_fu_483_p2;
wire   [31:0] buf_load_1_phi_i_fu_467_p3;
wire   [31:0] buf_load_2_phi_i_fu_475_p3;
wire   [31:0] tmp_12_i_fu_489_p2;
reg   [5:0] ap_NS_fsm;
wire   [64:0] mul_fu_416_p00;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
end

integralImg_buf_1 #(
    .DataWidth( 32 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_address0),
    .ce0(buf_1_ce0),
    .we0(buf_1_we0),
    .d0(tmp_2_reg_292),
    .q0(buf_1_q0),
    .address1(buf_1_address1),
    .ce1(buf_1_ce1),
    .q1(buf_1_q1)
);

integralImg_buf_1 #(
    .DataWidth( 32 ),
    .AddressRange( 800 ),
    .AddressWidth( 10 ))
buf_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_address0),
    .ce0(buf_0_ce0),
    .we0(buf_0_we0),
    .d0(tmp_2_reg_292),
    .q0(buf_0_q0),
    .address1(buf_0_address1),
    .ce1(buf_0_ce1),
    .q1(buf_0_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_306_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_281 <= i_fu_371_p2;
    end else if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_i_reg_281 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        pix_val_load_1_reg_270 <= tmp_15_i_fu_406_p2;
    end else if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        pix_val_load_1_reg_270 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (tmp_4_i_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_V_3_reg_223 <= phitmp_i_fu_347_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_V_3_reg_223 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (tmp_4_i_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_V_4_reg_235 <= phitmp1_i_fu_353_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        r_V_4_reg_235 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        t_V_1_reg_258 <= c_V_reg_523;
    end else if (((tmp_i_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_1_reg_258 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (tmp_4_i_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_reg_247 <= r_V_reg_510;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_247 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (or_cond_i_fu_342_p2 == 1'd1) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_2_reg_292 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_2_reg_292 <= tmp_13_i_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3))) begin
        c_V_reg_523 <= c_V_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_V_reg_510 <= r_V_fu_312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_1_i_reg_515 <= tmp_1_i_fu_318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_i_fu_365_p2 == 1'd1))) begin
        tmp_1_reg_569 <= {{mul_fu_416_p2[64:34]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op36_read_state3 == 1'b1))) begin
        tmp_3_reg_531 <= img_data_stream_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op37_read_state3 == 1'b1))) begin
        tmp_5_reg_536 <= img_data_stream_1_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op38_read_state3 == 1'b1))) begin
        tmp_reg_541 <= img_data_stream_2_V_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_306_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_0_address0 = tmp_17_i_fu_501_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_0_address0 = tmp_9_i_fu_432_p1;
    end else begin
        buf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        buf_0_ce0 = 1'b1;
    end else begin
        buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_0_ce1 = 1'b1;
    end else begin
        buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((r_V_4_reg_235 == 1'd0) & (sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        buf_0_we0 = 1'b1;
    end else begin
        buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        buf_1_address0 = tmp_17_i_fu_501_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_1_address0 = tmp_9_i_fu_432_p1;
    end else begin
        buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6) & (r_V_4_reg_235 == 1'd1))) begin
        buf_1_we0 = 1'b1;
    end else begin
        buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_0_V_blk_n = img_data_stream_0_V_empty_n;
    end else begin
        img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op36_read_state3 == 1'b1))) begin
        img_data_stream_0_V_read = 1'b1;
    end else begin
        img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_1_V_blk_n = img_data_stream_1_V_empty_n;
    end else begin
        img_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op37_read_state3 == 1'b1))) begin
        img_data_stream_1_V_read = 1'b1;
    end else begin
        img_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        img_data_stream_2_V_blk_n = img_data_stream_2_V_empty_n;
    end else begin
        img_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op38_read_state3 == 1'b1))) begin
        img_data_stream_2_V_read = 1'b1;
    end else begin
        img_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_306_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sum_V_blk_n = sum_V_full_n;
    end else begin
        sum_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        sum_V_write = 1'b1;
    end else begin
        sum_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_i_fu_306_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (tmp_4_i_fu_324_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1))) & (or_cond_i_fu_342_p2 == 1'd1) & (tmp_4_i_fu_324_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond_i_fu_365_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((sum_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign UnifiedRetVal_i_i_fu_395_p3 = ((sel_tmp2_i_fu_389_p2[0:0] === 1'b1) ? tmp_5_reg_536 : sel_tmp1_i_fu_383_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = (((img_data_stream_2_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((img_data_stream_1_V_empty_n == 1'b0) & (ap_predicate_op37_read_state3 == 1'b1)) | ((img_data_stream_0_V_empty_n == 1'b0) & (ap_predicate_op36_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_predicate_op36_read_state3 = ((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op37_read_state3 = ((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op38_read_state3 = ((or_cond_i_fu_342_p2 == 1'd0) & (tmp_4_i_fu_324_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign buf_0_address1 = tmp_10_i_fu_444_p1;

assign buf_1_address1 = tmp_10_i_fu_444_p1;

assign buf_load_1_phi_i_fu_467_p3 = ((r_V_3_reg_223[0:0] === 1'b1) ? buf_1_q1 : buf_0_q1);

assign buf_load_2_phi_i_fu_475_p3 = ((r_V_4_reg_235[0:0] === 1'b1) ? buf_1_q1 : buf_0_q1);

assign buf_load_phi_i_fu_459_p3 = ((r_V_3_reg_223[0:0] === 1'b1) ? buf_1_q0 : buf_0_q0);

assign c_V_fu_330_p2 = (t_V_1_reg_258 + 10'd1);

assign exitcond_i_fu_365_p2 = ((i_i_reg_281 == 2'd3) ? 1'b1 : 1'b0);

assign i_fu_371_p2 = (i_i_reg_281 + 2'd1);

assign mul_fu_416_p0 = mul_fu_416_p00;

assign mul_fu_416_p00 = pix_val_load_1_reg_270;

assign mul_fu_416_p2 = (mul_fu_416_p0 * $signed(65'h155555556));

assign or_cond_i_fu_342_p2 = (tmp_6_i_fu_336_p2 | tmp_1_i_reg_515);

assign phitmp1_i_fu_353_p2 = (r_V_4_reg_235 ^ 1'd1);

assign phitmp_i_fu_347_p2 = (r_V_3_reg_223 ^ 1'd1);

assign r_V_fu_312_p2 = (t_V_reg_247 + 10'd1);

assign ret_V_fu_438_p2 = ($signed(t_V_1_reg_258) + $signed(10'd1023));

assign sel_tmp1_i_fu_383_p3 = ((sel_tmp_i_fu_377_p2[0:0] === 1'b1) ? tmp_3_reg_531 : tmp_reg_541);

assign sel_tmp2_i_fu_389_p2 = ((i_i_reg_281 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_377_p2 = ((i_i_reg_281 == 2'd0) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign sum_V_din = tmp_2_reg_292;

assign tmp_10_i_fu_444_p1 = ret_V_fu_438_p2;

assign tmp_11_i_fu_483_p2 = ($signed(tmp_4_fu_450_p1) + $signed(buf_load_phi_i_fu_459_p3));

assign tmp_12_i_fu_489_p2 = (tmp_11_i_fu_483_p2 - buf_load_1_phi_i_fu_467_p3);

assign tmp_13_i_fu_495_p2 = (buf_load_2_phi_i_fu_475_p3 + tmp_12_i_fu_489_p2);

assign tmp_14_i_fu_402_p1 = UnifiedRetVal_i_i_fu_395_p3;

assign tmp_15_i_fu_406_p2 = (pix_val_load_1_reg_270 + tmp_14_i_fu_402_p1);

assign tmp_17_i_fu_501_p1 = t_V_1_reg_258;

assign tmp_1_i_fu_318_p2 = ((t_V_reg_247 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_450_p1 = $signed(tmp_1_reg_569);

assign tmp_4_i_fu_324_p2 = ((t_V_1_reg_258 == 10'd801) ? 1'b1 : 1'b0);

assign tmp_6_i_fu_336_p2 = ((t_V_1_reg_258 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_i_fu_432_p1 = t_V_1_reg_258;

assign tmp_i_fu_306_p2 = ((t_V_reg_247 == 10'd601) ? 1'b1 : 1'b0);

endmodule //integralImg
