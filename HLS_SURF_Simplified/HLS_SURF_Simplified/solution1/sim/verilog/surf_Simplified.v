// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="surf_Simplified,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.253000,HLS_SYN_LAT=76062569,HLS_SYN_TPT=76062562,HLS_SYN_MEM=68,HLS_SYN_DSP=27,HLS_SYN_FF=2931,HLS_SYN_LUT=12516,HLS_VERSION=2018_3}" *)

module surf_Simplified (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axi_threshold_AWVALID,
        s_axi_threshold_AWREADY,
        s_axi_threshold_AWADDR,
        s_axi_threshold_WVALID,
        s_axi_threshold_WREADY,
        s_axi_threshold_WDATA,
        s_axi_threshold_WSTRB,
        s_axi_threshold_ARVALID,
        s_axi_threshold_ARREADY,
        s_axi_threshold_ARADDR,
        s_axi_threshold_RVALID,
        s_axi_threshold_RREADY,
        s_axi_threshold_RDATA,
        s_axi_threshold_RRESP,
        s_axi_threshold_BVALID,
        s_axi_threshold_BREADY,
        s_axi_threshold_BRESP,
        m_axi_keyPoints_AWVALID,
        m_axi_keyPoints_AWREADY,
        m_axi_keyPoints_AWADDR,
        m_axi_keyPoints_AWID,
        m_axi_keyPoints_AWLEN,
        m_axi_keyPoints_AWSIZE,
        m_axi_keyPoints_AWBURST,
        m_axi_keyPoints_AWLOCK,
        m_axi_keyPoints_AWCACHE,
        m_axi_keyPoints_AWPROT,
        m_axi_keyPoints_AWQOS,
        m_axi_keyPoints_AWREGION,
        m_axi_keyPoints_AWUSER,
        m_axi_keyPoints_WVALID,
        m_axi_keyPoints_WREADY,
        m_axi_keyPoints_WDATA,
        m_axi_keyPoints_WSTRB,
        m_axi_keyPoints_WLAST,
        m_axi_keyPoints_WID,
        m_axi_keyPoints_WUSER,
        m_axi_keyPoints_ARVALID,
        m_axi_keyPoints_ARREADY,
        m_axi_keyPoints_ARADDR,
        m_axi_keyPoints_ARID,
        m_axi_keyPoints_ARLEN,
        m_axi_keyPoints_ARSIZE,
        m_axi_keyPoints_ARBURST,
        m_axi_keyPoints_ARLOCK,
        m_axi_keyPoints_ARCACHE,
        m_axi_keyPoints_ARPROT,
        m_axi_keyPoints_ARQOS,
        m_axi_keyPoints_ARREGION,
        m_axi_keyPoints_ARUSER,
        m_axi_keyPoints_RVALID,
        m_axi_keyPoints_RREADY,
        m_axi_keyPoints_RDATA,
        m_axi_keyPoints_RLAST,
        m_axi_keyPoints_RID,
        m_axi_keyPoints_RUSER,
        m_axi_keyPoints_RRESP,
        m_axi_keyPoints_BVALID,
        m_axi_keyPoints_BREADY,
        m_axi_keyPoints_BRESP,
        m_axi_keyPoints_BID,
        m_axi_keyPoints_BUSER,
        m_axi_pointNumber_AWVALID,
        m_axi_pointNumber_AWREADY,
        m_axi_pointNumber_AWADDR,
        m_axi_pointNumber_AWID,
        m_axi_pointNumber_AWLEN,
        m_axi_pointNumber_AWSIZE,
        m_axi_pointNumber_AWBURST,
        m_axi_pointNumber_AWLOCK,
        m_axi_pointNumber_AWCACHE,
        m_axi_pointNumber_AWPROT,
        m_axi_pointNumber_AWQOS,
        m_axi_pointNumber_AWREGION,
        m_axi_pointNumber_AWUSER,
        m_axi_pointNumber_WVALID,
        m_axi_pointNumber_WREADY,
        m_axi_pointNumber_WDATA,
        m_axi_pointNumber_WSTRB,
        m_axi_pointNumber_WLAST,
        m_axi_pointNumber_WID,
        m_axi_pointNumber_WUSER,
        m_axi_pointNumber_ARVALID,
        m_axi_pointNumber_ARREADY,
        m_axi_pointNumber_ARADDR,
        m_axi_pointNumber_ARID,
        m_axi_pointNumber_ARLEN,
        m_axi_pointNumber_ARSIZE,
        m_axi_pointNumber_ARBURST,
        m_axi_pointNumber_ARLOCK,
        m_axi_pointNumber_ARCACHE,
        m_axi_pointNumber_ARPROT,
        m_axi_pointNumber_ARQOS,
        m_axi_pointNumber_ARREGION,
        m_axi_pointNumber_ARUSER,
        m_axi_pointNumber_RVALID,
        m_axi_pointNumber_RREADY,
        m_axi_pointNumber_RDATA,
        m_axi_pointNumber_RLAST,
        m_axi_pointNumber_RID,
        m_axi_pointNumber_RUSER,
        m_axi_pointNumber_RRESP,
        m_axi_pointNumber_BVALID,
        m_axi_pointNumber_BREADY,
        m_axi_pointNumber_BRESP,
        m_axi_pointNumber_BID,
        m_axi_pointNumber_BUSER,
        video_in_TDATA,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        video_in_TVALID,
        video_in_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_S_AXI_THRESHOLD_DATA_WIDTH = 32;
parameter    C_S_AXI_THRESHOLD_ADDR_WIDTH = 5;
parameter    C_M_AXI_KEYPOINTS_ID_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_ADDR_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_DATA_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_WUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_RUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_BUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_USER_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_PROT_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_CACHE_VALUE = 3;
parameter    C_M_AXI_POINTNUMBER_ID_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_ADDR_WIDTH = 32;
parameter    C_M_AXI_POINTNUMBER_DATA_WIDTH = 32;
parameter    C_M_AXI_POINTNUMBER_AWUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_ARUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_WUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_RUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_BUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_USER_VALUE = 0;
parameter    C_M_AXI_POINTNUMBER_PROT_VALUE = 0;
parameter    C_M_AXI_POINTNUMBER_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_THRESHOLD_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KEYPOINTS_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_POINTNUMBER_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input   s_axi_threshold_AWVALID;
output   s_axi_threshold_AWREADY;
input  [C_S_AXI_THRESHOLD_ADDR_WIDTH - 1:0] s_axi_threshold_AWADDR;
input   s_axi_threshold_WVALID;
output   s_axi_threshold_WREADY;
input  [C_S_AXI_THRESHOLD_DATA_WIDTH - 1:0] s_axi_threshold_WDATA;
input  [C_S_AXI_THRESHOLD_WSTRB_WIDTH - 1:0] s_axi_threshold_WSTRB;
input   s_axi_threshold_ARVALID;
output   s_axi_threshold_ARREADY;
input  [C_S_AXI_THRESHOLD_ADDR_WIDTH - 1:0] s_axi_threshold_ARADDR;
output   s_axi_threshold_RVALID;
input   s_axi_threshold_RREADY;
output  [C_S_AXI_THRESHOLD_DATA_WIDTH - 1:0] s_axi_threshold_RDATA;
output  [1:0] s_axi_threshold_RRESP;
output   s_axi_threshold_BVALID;
input   s_axi_threshold_BREADY;
output  [1:0] s_axi_threshold_BRESP;
output   m_axi_keyPoints_AWVALID;
input   m_axi_keyPoints_AWREADY;
output  [C_M_AXI_KEYPOINTS_ADDR_WIDTH - 1:0] m_axi_keyPoints_AWADDR;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_AWID;
output  [7:0] m_axi_keyPoints_AWLEN;
output  [2:0] m_axi_keyPoints_AWSIZE;
output  [1:0] m_axi_keyPoints_AWBURST;
output  [1:0] m_axi_keyPoints_AWLOCK;
output  [3:0] m_axi_keyPoints_AWCACHE;
output  [2:0] m_axi_keyPoints_AWPROT;
output  [3:0] m_axi_keyPoints_AWQOS;
output  [3:0] m_axi_keyPoints_AWREGION;
output  [C_M_AXI_KEYPOINTS_AWUSER_WIDTH - 1:0] m_axi_keyPoints_AWUSER;
output   m_axi_keyPoints_WVALID;
input   m_axi_keyPoints_WREADY;
output  [C_M_AXI_KEYPOINTS_DATA_WIDTH - 1:0] m_axi_keyPoints_WDATA;
output  [C_M_AXI_KEYPOINTS_WSTRB_WIDTH - 1:0] m_axi_keyPoints_WSTRB;
output   m_axi_keyPoints_WLAST;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_WID;
output  [C_M_AXI_KEYPOINTS_WUSER_WIDTH - 1:0] m_axi_keyPoints_WUSER;
output   m_axi_keyPoints_ARVALID;
input   m_axi_keyPoints_ARREADY;
output  [C_M_AXI_KEYPOINTS_ADDR_WIDTH - 1:0] m_axi_keyPoints_ARADDR;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_ARID;
output  [7:0] m_axi_keyPoints_ARLEN;
output  [2:0] m_axi_keyPoints_ARSIZE;
output  [1:0] m_axi_keyPoints_ARBURST;
output  [1:0] m_axi_keyPoints_ARLOCK;
output  [3:0] m_axi_keyPoints_ARCACHE;
output  [2:0] m_axi_keyPoints_ARPROT;
output  [3:0] m_axi_keyPoints_ARQOS;
output  [3:0] m_axi_keyPoints_ARREGION;
output  [C_M_AXI_KEYPOINTS_ARUSER_WIDTH - 1:0] m_axi_keyPoints_ARUSER;
input   m_axi_keyPoints_RVALID;
output   m_axi_keyPoints_RREADY;
input  [C_M_AXI_KEYPOINTS_DATA_WIDTH - 1:0] m_axi_keyPoints_RDATA;
input   m_axi_keyPoints_RLAST;
input  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_RID;
input  [C_M_AXI_KEYPOINTS_RUSER_WIDTH - 1:0] m_axi_keyPoints_RUSER;
input  [1:0] m_axi_keyPoints_RRESP;
input   m_axi_keyPoints_BVALID;
output   m_axi_keyPoints_BREADY;
input  [1:0] m_axi_keyPoints_BRESP;
input  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_BID;
input  [C_M_AXI_KEYPOINTS_BUSER_WIDTH - 1:0] m_axi_keyPoints_BUSER;
output   m_axi_pointNumber_AWVALID;
input   m_axi_pointNumber_AWREADY;
output  [C_M_AXI_POINTNUMBER_ADDR_WIDTH - 1:0] m_axi_pointNumber_AWADDR;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_AWID;
output  [7:0] m_axi_pointNumber_AWLEN;
output  [2:0] m_axi_pointNumber_AWSIZE;
output  [1:0] m_axi_pointNumber_AWBURST;
output  [1:0] m_axi_pointNumber_AWLOCK;
output  [3:0] m_axi_pointNumber_AWCACHE;
output  [2:0] m_axi_pointNumber_AWPROT;
output  [3:0] m_axi_pointNumber_AWQOS;
output  [3:0] m_axi_pointNumber_AWREGION;
output  [C_M_AXI_POINTNUMBER_AWUSER_WIDTH - 1:0] m_axi_pointNumber_AWUSER;
output   m_axi_pointNumber_WVALID;
input   m_axi_pointNumber_WREADY;
output  [C_M_AXI_POINTNUMBER_DATA_WIDTH - 1:0] m_axi_pointNumber_WDATA;
output  [C_M_AXI_POINTNUMBER_WSTRB_WIDTH - 1:0] m_axi_pointNumber_WSTRB;
output   m_axi_pointNumber_WLAST;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_WID;
output  [C_M_AXI_POINTNUMBER_WUSER_WIDTH - 1:0] m_axi_pointNumber_WUSER;
output   m_axi_pointNumber_ARVALID;
input   m_axi_pointNumber_ARREADY;
output  [C_M_AXI_POINTNUMBER_ADDR_WIDTH - 1:0] m_axi_pointNumber_ARADDR;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_ARID;
output  [7:0] m_axi_pointNumber_ARLEN;
output  [2:0] m_axi_pointNumber_ARSIZE;
output  [1:0] m_axi_pointNumber_ARBURST;
output  [1:0] m_axi_pointNumber_ARLOCK;
output  [3:0] m_axi_pointNumber_ARCACHE;
output  [2:0] m_axi_pointNumber_ARPROT;
output  [3:0] m_axi_pointNumber_ARQOS;
output  [3:0] m_axi_pointNumber_ARREGION;
output  [C_M_AXI_POINTNUMBER_ARUSER_WIDTH - 1:0] m_axi_pointNumber_ARUSER;
input   m_axi_pointNumber_RVALID;
output   m_axi_pointNumber_RREADY;
input  [C_M_AXI_POINTNUMBER_DATA_WIDTH - 1:0] m_axi_pointNumber_RDATA;
input   m_axi_pointNumber_RLAST;
input  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_RID;
input  [C_M_AXI_POINTNUMBER_RUSER_WIDTH - 1:0] m_axi_pointNumber_RUSER;
input  [1:0] m_axi_pointNumber_RRESP;
input   m_axi_pointNumber_BVALID;
output   m_axi_pointNumber_BREADY;
input  [1:0] m_axi_pointNumber_BRESP;
input  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_BID;
input  [C_M_AXI_POINTNUMBER_BUSER_WIDTH - 1:0] m_axi_pointNumber_BUSER;
input  [23:0] video_in_TDATA;
input  [2:0] video_in_TKEEP;
input  [2:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
input   video_in_TVALID;
output   video_in_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] keyPoints_V;
wire   [31:0] kpn;
wire   [31:0] threshold;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_video_in_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    integralImg_U0_ap_start;
wire    integralImg_U0_ap_done;
wire    integralImg_U0_ap_continue;
wire    integralImg_U0_ap_idle;
wire    integralImg_U0_ap_ready;
wire    integralImg_U0_start_out;
wire    integralImg_U0_start_write;
wire    integralImg_U0_img_data_stream_0_V_read;
wire    integralImg_U0_img_data_stream_1_V_read;
wire    integralImg_U0_img_data_stream_2_V_read;
wire   [31:0] integralImg_U0_sum_V_din;
wire    integralImg_U0_sum_V_write;
wire    HessianDetector_U0_sum_V_read;
wire    HessianDetector_U0_ap_start;
wire    HessianDetector_U0_ap_done;
wire    HessianDetector_U0_ap_ready;
wire    HessianDetector_U0_ap_idle;
wire    HessianDetector_U0_ap_continue;
wire    ap_sync_continue;
wire    img_data_stream_0_V_full_n;
wire   [7:0] img_data_stream_0_V_dout;
wire    img_data_stream_0_V_empty_n;
wire    img_data_stream_1_V_full_n;
wire   [7:0] img_data_stream_1_V_dout;
wire    img_data_stream_1_V_empty_n;
wire    img_data_stream_2_V_full_n;
wire   [7:0] img_data_stream_2_V_dout;
wire    img_data_stream_2_V_empty_n;
wire    sum_V_full_n;
wire   [31:0] sum_V_dout;
wire    sum_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_integralImg_U0_din;
wire    start_for_integralImg_U0_full_n;
wire   [0:0] start_for_integralImg_U0_dout;
wire    start_for_integralImg_U0_empty_n;
wire   [0:0] start_for_HessianDetector_U0_din;
wire    start_for_HessianDetector_U0_full_n;
wire   [0:0] start_for_HessianDetector_U0_dout;
wire    start_for_HessianDetector_U0_empty_n;
wire    HessianDetector_U0_start_full_n;
wire    HessianDetector_U0_start_write;

surf_Simplified_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
surf_Simplified_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .keyPoints_V(keyPoints_V),
    .kpn(kpn)
);

surf_Simplified_threshold_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_THRESHOLD_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_THRESHOLD_DATA_WIDTH ))
surf_Simplified_threshold_s_axi_U(
    .AWVALID(s_axi_threshold_AWVALID),
    .AWREADY(s_axi_threshold_AWREADY),
    .AWADDR(s_axi_threshold_AWADDR),
    .WVALID(s_axi_threshold_WVALID),
    .WREADY(s_axi_threshold_WREADY),
    .WDATA(s_axi_threshold_WDATA),
    .WSTRB(s_axi_threshold_WSTRB),
    .ARVALID(s_axi_threshold_ARVALID),
    .ARREADY(s_axi_threshold_ARREADY),
    .ARADDR(s_axi_threshold_ARADDR),
    .RVALID(s_axi_threshold_RVALID),
    .RREADY(s_axi_threshold_RREADY),
    .RDATA(s_axi_threshold_RDATA),
    .RRESP(s_axi_threshold_RRESP),
    .BVALID(s_axi_threshold_BVALID),
    .BREADY(s_axi_threshold_BREADY),
    .BRESP(s_axi_threshold_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .threshold(threshold)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_integralImg_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .video_in_TDATA(video_in_TDATA),
    .video_in_TVALID(video_in_TVALID),
    .video_in_TREADY(AXIvideo2Mat_U0_video_in_TREADY),
    .video_in_TKEEP(video_in_TKEEP),
    .video_in_TSTRB(video_in_TSTRB),
    .video_in_TUSER(video_in_TUSER),
    .video_in_TLAST(video_in_TLAST),
    .video_in_TID(video_in_TID),
    .video_in_TDEST(video_in_TDEST),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write)
);

integralImg integralImg_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(integralImg_U0_ap_start),
    .start_full_n(start_for_HessianDetector_U0_full_n),
    .ap_done(integralImg_U0_ap_done),
    .ap_continue(integralImg_U0_ap_continue),
    .ap_idle(integralImg_U0_ap_idle),
    .ap_ready(integralImg_U0_ap_ready),
    .start_out(integralImg_U0_start_out),
    .start_write(integralImg_U0_start_write),
    .img_data_stream_0_V_dout(img_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(integralImg_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(integralImg_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(integralImg_U0_img_data_stream_2_V_read),
    .sum_V_din(integralImg_U0_sum_V_din),
    .sum_V_full_n(sum_V_full_n),
    .sum_V_write(integralImg_U0_sum_V_write)
);

HessianDetector HessianDetector_U0(
    .sum_V_dout(sum_V_dout),
    .sum_V_empty_n(sum_V_empty_n),
    .sum_V_read(HessianDetector_U0_sum_V_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(HessianDetector_U0_ap_start),
    .ap_done(HessianDetector_U0_ap_done),
    .ap_ready(HessianDetector_U0_ap_ready),
    .ap_idle(HessianDetector_U0_ap_idle),
    .ap_continue(HessianDetector_U0_ap_continue)
);

fifo_w8_d2_A img_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(img_data_stream_0_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(img_data_stream_0_V_dout),
    .if_empty_n(img_data_stream_0_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A img_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(img_data_stream_1_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(img_data_stream_1_V_dout),
    .if_empty_n(img_data_stream_1_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A img_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(img_data_stream_2_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(img_data_stream_2_V_dout),
    .if_empty_n(img_data_stream_2_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_2_V_read)
);

fifo_w32_d2_A sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(integralImg_U0_sum_V_din),
    .if_full_n(sum_V_full_n),
    .if_write(integralImg_U0_sum_V_write),
    .if_dout(sum_V_dout),
    .if_empty_n(sum_V_empty_n),
    .if_read(HessianDetector_U0_sum_V_read)
);

start_for_integraudo start_for_integraudo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_integralImg_U0_din),
    .if_full_n(start_for_integralImg_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_integralImg_U0_dout),
    .if_empty_n(start_for_integralImg_U0_empty_n),
    .if_read(integralImg_U0_ap_ready)
);

start_for_Hessianvdy start_for_Hessianvdy_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_HessianDetector_U0_din),
    .if_full_n(start_for_HessianDetector_U0_full_n),
    .if_write(integralImg_U0_start_write),
    .if_dout(start_for_HessianDetector_U0_dout),
    .if_empty_n(start_for_HessianDetector_U0_empty_n),
    .if_read(HessianDetector_U0_ap_ready)
);

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ap_start;

assign HessianDetector_U0_ap_continue = 1'b1;

assign HessianDetector_U0_ap_start = start_for_HessianDetector_U0_empty_n;

assign HessianDetector_U0_start_full_n = 1'b1;

assign HessianDetector_U0_start_write = 1'b0;

assign ap_done = HessianDetector_U0_ap_done;

assign ap_idle = (integralImg_U0_ap_idle & HessianDetector_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = AXIvideo2Mat_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = HessianDetector_U0_ap_done;

assign ap_sync_ready = AXIvideo2Mat_U0_ap_ready;

assign integralImg_U0_ap_continue = 1'b1;

assign integralImg_U0_ap_start = start_for_integralImg_U0_empty_n;

assign m_axi_keyPoints_ARADDR = 32'd0;

assign m_axi_keyPoints_ARBURST = 2'd0;

assign m_axi_keyPoints_ARCACHE = 4'd0;

assign m_axi_keyPoints_ARID = 1'd0;

assign m_axi_keyPoints_ARLEN = 8'd0;

assign m_axi_keyPoints_ARLOCK = 2'd0;

assign m_axi_keyPoints_ARPROT = 3'd0;

assign m_axi_keyPoints_ARQOS = 4'd0;

assign m_axi_keyPoints_ARREGION = 4'd0;

assign m_axi_keyPoints_ARSIZE = 3'd0;

assign m_axi_keyPoints_ARUSER = 1'd0;

assign m_axi_keyPoints_ARVALID = 1'b0;

assign m_axi_keyPoints_AWADDR = 32'd0;

assign m_axi_keyPoints_AWBURST = 2'd0;

assign m_axi_keyPoints_AWCACHE = 4'd0;

assign m_axi_keyPoints_AWID = 1'd0;

assign m_axi_keyPoints_AWLEN = 8'd0;

assign m_axi_keyPoints_AWLOCK = 2'd0;

assign m_axi_keyPoints_AWPROT = 3'd0;

assign m_axi_keyPoints_AWQOS = 4'd0;

assign m_axi_keyPoints_AWREGION = 4'd0;

assign m_axi_keyPoints_AWSIZE = 3'd0;

assign m_axi_keyPoints_AWUSER = 1'd0;

assign m_axi_keyPoints_AWVALID = 1'b0;

assign m_axi_keyPoints_BREADY = 1'b0;

assign m_axi_keyPoints_RREADY = 1'b0;

assign m_axi_keyPoints_WDATA = 32'd0;

assign m_axi_keyPoints_WID = 1'd0;

assign m_axi_keyPoints_WLAST = 1'b0;

assign m_axi_keyPoints_WSTRB = 4'd0;

assign m_axi_keyPoints_WUSER = 1'd0;

assign m_axi_keyPoints_WVALID = 1'b0;

assign m_axi_pointNumber_ARADDR = 32'd0;

assign m_axi_pointNumber_ARBURST = 2'd0;

assign m_axi_pointNumber_ARCACHE = 4'd0;

assign m_axi_pointNumber_ARID = 1'd0;

assign m_axi_pointNumber_ARLEN = 8'd0;

assign m_axi_pointNumber_ARLOCK = 2'd0;

assign m_axi_pointNumber_ARPROT = 3'd0;

assign m_axi_pointNumber_ARQOS = 4'd0;

assign m_axi_pointNumber_ARREGION = 4'd0;

assign m_axi_pointNumber_ARSIZE = 3'd0;

assign m_axi_pointNumber_ARUSER = 1'd0;

assign m_axi_pointNumber_ARVALID = 1'b0;

assign m_axi_pointNumber_AWADDR = 32'd0;

assign m_axi_pointNumber_AWBURST = 2'd0;

assign m_axi_pointNumber_AWCACHE = 4'd0;

assign m_axi_pointNumber_AWID = 1'd0;

assign m_axi_pointNumber_AWLEN = 8'd0;

assign m_axi_pointNumber_AWLOCK = 2'd0;

assign m_axi_pointNumber_AWPROT = 3'd0;

assign m_axi_pointNumber_AWQOS = 4'd0;

assign m_axi_pointNumber_AWREGION = 4'd0;

assign m_axi_pointNumber_AWSIZE = 3'd0;

assign m_axi_pointNumber_AWUSER = 1'd0;

assign m_axi_pointNumber_AWVALID = 1'b0;

assign m_axi_pointNumber_BREADY = 1'b0;

assign m_axi_pointNumber_RREADY = 1'b0;

assign m_axi_pointNumber_WDATA = 32'd0;

assign m_axi_pointNumber_WID = 1'd0;

assign m_axi_pointNumber_WLAST = 1'b0;

assign m_axi_pointNumber_WSTRB = 4'd0;

assign m_axi_pointNumber_WUSER = 1'd0;

assign m_axi_pointNumber_WVALID = 1'b0;

assign start_for_HessianDetector_U0_din = 1'b1;

assign start_for_integralImg_U0_din = 1'b1;

assign video_in_TREADY = AXIvideo2Mat_U0_video_in_TREADY;

endmodule //surf_Simplified
