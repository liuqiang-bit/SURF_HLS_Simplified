// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="surf_Simplified,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=76062569,HLS_SYN_TPT=76062562,HLS_SYN_MEM=88,HLS_SYN_DSP=12,HLS_SYN_FF=4943,HLS_SYN_LUT=15165,HLS_VERSION=2018_3}" *)

module surf_Simplified (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axi_threshold_AWVALID,
        s_axi_threshold_AWREADY,
        s_axi_threshold_AWADDR,
        s_axi_threshold_WVALID,
        s_axi_threshold_WREADY,
        s_axi_threshold_WDATA,
        s_axi_threshold_WSTRB,
        s_axi_threshold_ARVALID,
        s_axi_threshold_ARREADY,
        s_axi_threshold_ARADDR,
        s_axi_threshold_RVALID,
        s_axi_threshold_RREADY,
        s_axi_threshold_RDATA,
        s_axi_threshold_RRESP,
        s_axi_threshold_BVALID,
        s_axi_threshold_BREADY,
        s_axi_threshold_BRESP,
        m_axi_keyPoints_AWVALID,
        m_axi_keyPoints_AWREADY,
        m_axi_keyPoints_AWADDR,
        m_axi_keyPoints_AWID,
        m_axi_keyPoints_AWLEN,
        m_axi_keyPoints_AWSIZE,
        m_axi_keyPoints_AWBURST,
        m_axi_keyPoints_AWLOCK,
        m_axi_keyPoints_AWCACHE,
        m_axi_keyPoints_AWPROT,
        m_axi_keyPoints_AWQOS,
        m_axi_keyPoints_AWREGION,
        m_axi_keyPoints_AWUSER,
        m_axi_keyPoints_WVALID,
        m_axi_keyPoints_WREADY,
        m_axi_keyPoints_WDATA,
        m_axi_keyPoints_WSTRB,
        m_axi_keyPoints_WLAST,
        m_axi_keyPoints_WID,
        m_axi_keyPoints_WUSER,
        m_axi_keyPoints_ARVALID,
        m_axi_keyPoints_ARREADY,
        m_axi_keyPoints_ARADDR,
        m_axi_keyPoints_ARID,
        m_axi_keyPoints_ARLEN,
        m_axi_keyPoints_ARSIZE,
        m_axi_keyPoints_ARBURST,
        m_axi_keyPoints_ARLOCK,
        m_axi_keyPoints_ARCACHE,
        m_axi_keyPoints_ARPROT,
        m_axi_keyPoints_ARQOS,
        m_axi_keyPoints_ARREGION,
        m_axi_keyPoints_ARUSER,
        m_axi_keyPoints_RVALID,
        m_axi_keyPoints_RREADY,
        m_axi_keyPoints_RDATA,
        m_axi_keyPoints_RLAST,
        m_axi_keyPoints_RID,
        m_axi_keyPoints_RUSER,
        m_axi_keyPoints_RRESP,
        m_axi_keyPoints_BVALID,
        m_axi_keyPoints_BREADY,
        m_axi_keyPoints_BRESP,
        m_axi_keyPoints_BID,
        m_axi_keyPoints_BUSER,
        m_axi_pointNumber_AWVALID,
        m_axi_pointNumber_AWREADY,
        m_axi_pointNumber_AWADDR,
        m_axi_pointNumber_AWID,
        m_axi_pointNumber_AWLEN,
        m_axi_pointNumber_AWSIZE,
        m_axi_pointNumber_AWBURST,
        m_axi_pointNumber_AWLOCK,
        m_axi_pointNumber_AWCACHE,
        m_axi_pointNumber_AWPROT,
        m_axi_pointNumber_AWQOS,
        m_axi_pointNumber_AWREGION,
        m_axi_pointNumber_AWUSER,
        m_axi_pointNumber_WVALID,
        m_axi_pointNumber_WREADY,
        m_axi_pointNumber_WDATA,
        m_axi_pointNumber_WSTRB,
        m_axi_pointNumber_WLAST,
        m_axi_pointNumber_WID,
        m_axi_pointNumber_WUSER,
        m_axi_pointNumber_ARVALID,
        m_axi_pointNumber_ARREADY,
        m_axi_pointNumber_ARADDR,
        m_axi_pointNumber_ARID,
        m_axi_pointNumber_ARLEN,
        m_axi_pointNumber_ARSIZE,
        m_axi_pointNumber_ARBURST,
        m_axi_pointNumber_ARLOCK,
        m_axi_pointNumber_ARCACHE,
        m_axi_pointNumber_ARPROT,
        m_axi_pointNumber_ARQOS,
        m_axi_pointNumber_ARREGION,
        m_axi_pointNumber_ARUSER,
        m_axi_pointNumber_RVALID,
        m_axi_pointNumber_RREADY,
        m_axi_pointNumber_RDATA,
        m_axi_pointNumber_RLAST,
        m_axi_pointNumber_RID,
        m_axi_pointNumber_RUSER,
        m_axi_pointNumber_RRESP,
        m_axi_pointNumber_BVALID,
        m_axi_pointNumber_BREADY,
        m_axi_pointNumber_BRESP,
        m_axi_pointNumber_BID,
        m_axi_pointNumber_BUSER,
        video_in_TDATA,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        video_in_TVALID,
        video_in_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_S_AXI_THRESHOLD_DATA_WIDTH = 32;
parameter    C_S_AXI_THRESHOLD_ADDR_WIDTH = 5;
parameter    C_M_AXI_KEYPOINTS_ID_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_ADDR_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_DATA_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_WUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_RUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_BUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_USER_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_PROT_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_ID_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_ADDR_WIDTH = 32;
parameter    C_M_AXI_POINTNUMBER_DATA_WIDTH = 32;
parameter    C_M_AXI_POINTNUMBER_AWUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_ARUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_WUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_RUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_BUSER_WIDTH = 1;
parameter    C_M_AXI_POINTNUMBER_USER_VALUE = 0;
parameter    C_M_AXI_POINTNUMBER_PROT_VALUE = 0;
parameter    C_M_AXI_POINTNUMBER_CACHE_VALUE = 3;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_THRESHOLD_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KEYPOINTS_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_POINTNUMBER_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input   s_axi_threshold_AWVALID;
output   s_axi_threshold_AWREADY;
input  [C_S_AXI_THRESHOLD_ADDR_WIDTH - 1:0] s_axi_threshold_AWADDR;
input   s_axi_threshold_WVALID;
output   s_axi_threshold_WREADY;
input  [C_S_AXI_THRESHOLD_DATA_WIDTH - 1:0] s_axi_threshold_WDATA;
input  [C_S_AXI_THRESHOLD_WSTRB_WIDTH - 1:0] s_axi_threshold_WSTRB;
input   s_axi_threshold_ARVALID;
output   s_axi_threshold_ARREADY;
input  [C_S_AXI_THRESHOLD_ADDR_WIDTH - 1:0] s_axi_threshold_ARADDR;
output   s_axi_threshold_RVALID;
input   s_axi_threshold_RREADY;
output  [C_S_AXI_THRESHOLD_DATA_WIDTH - 1:0] s_axi_threshold_RDATA;
output  [1:0] s_axi_threshold_RRESP;
output   s_axi_threshold_BVALID;
input   s_axi_threshold_BREADY;
output  [1:0] s_axi_threshold_BRESP;
output   m_axi_keyPoints_AWVALID;
input   m_axi_keyPoints_AWREADY;
output  [C_M_AXI_KEYPOINTS_ADDR_WIDTH - 1:0] m_axi_keyPoints_AWADDR;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_AWID;
output  [7:0] m_axi_keyPoints_AWLEN;
output  [2:0] m_axi_keyPoints_AWSIZE;
output  [1:0] m_axi_keyPoints_AWBURST;
output  [1:0] m_axi_keyPoints_AWLOCK;
output  [3:0] m_axi_keyPoints_AWCACHE;
output  [2:0] m_axi_keyPoints_AWPROT;
output  [3:0] m_axi_keyPoints_AWQOS;
output  [3:0] m_axi_keyPoints_AWREGION;
output  [C_M_AXI_KEYPOINTS_AWUSER_WIDTH - 1:0] m_axi_keyPoints_AWUSER;
output   m_axi_keyPoints_WVALID;
input   m_axi_keyPoints_WREADY;
output  [C_M_AXI_KEYPOINTS_DATA_WIDTH - 1:0] m_axi_keyPoints_WDATA;
output  [C_M_AXI_KEYPOINTS_WSTRB_WIDTH - 1:0] m_axi_keyPoints_WSTRB;
output   m_axi_keyPoints_WLAST;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_WID;
output  [C_M_AXI_KEYPOINTS_WUSER_WIDTH - 1:0] m_axi_keyPoints_WUSER;
output   m_axi_keyPoints_ARVALID;
input   m_axi_keyPoints_ARREADY;
output  [C_M_AXI_KEYPOINTS_ADDR_WIDTH - 1:0] m_axi_keyPoints_ARADDR;
output  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_ARID;
output  [7:0] m_axi_keyPoints_ARLEN;
output  [2:0] m_axi_keyPoints_ARSIZE;
output  [1:0] m_axi_keyPoints_ARBURST;
output  [1:0] m_axi_keyPoints_ARLOCK;
output  [3:0] m_axi_keyPoints_ARCACHE;
output  [2:0] m_axi_keyPoints_ARPROT;
output  [3:0] m_axi_keyPoints_ARQOS;
output  [3:0] m_axi_keyPoints_ARREGION;
output  [C_M_AXI_KEYPOINTS_ARUSER_WIDTH - 1:0] m_axi_keyPoints_ARUSER;
input   m_axi_keyPoints_RVALID;
output   m_axi_keyPoints_RREADY;
input  [C_M_AXI_KEYPOINTS_DATA_WIDTH - 1:0] m_axi_keyPoints_RDATA;
input   m_axi_keyPoints_RLAST;
input  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_RID;
input  [C_M_AXI_KEYPOINTS_RUSER_WIDTH - 1:0] m_axi_keyPoints_RUSER;
input  [1:0] m_axi_keyPoints_RRESP;
input   m_axi_keyPoints_BVALID;
output   m_axi_keyPoints_BREADY;
input  [1:0] m_axi_keyPoints_BRESP;
input  [C_M_AXI_KEYPOINTS_ID_WIDTH - 1:0] m_axi_keyPoints_BID;
input  [C_M_AXI_KEYPOINTS_BUSER_WIDTH - 1:0] m_axi_keyPoints_BUSER;
output   m_axi_pointNumber_AWVALID;
input   m_axi_pointNumber_AWREADY;
output  [C_M_AXI_POINTNUMBER_ADDR_WIDTH - 1:0] m_axi_pointNumber_AWADDR;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_AWID;
output  [7:0] m_axi_pointNumber_AWLEN;
output  [2:0] m_axi_pointNumber_AWSIZE;
output  [1:0] m_axi_pointNumber_AWBURST;
output  [1:0] m_axi_pointNumber_AWLOCK;
output  [3:0] m_axi_pointNumber_AWCACHE;
output  [2:0] m_axi_pointNumber_AWPROT;
output  [3:0] m_axi_pointNumber_AWQOS;
output  [3:0] m_axi_pointNumber_AWREGION;
output  [C_M_AXI_POINTNUMBER_AWUSER_WIDTH - 1:0] m_axi_pointNumber_AWUSER;
output   m_axi_pointNumber_WVALID;
input   m_axi_pointNumber_WREADY;
output  [C_M_AXI_POINTNUMBER_DATA_WIDTH - 1:0] m_axi_pointNumber_WDATA;
output  [C_M_AXI_POINTNUMBER_WSTRB_WIDTH - 1:0] m_axi_pointNumber_WSTRB;
output   m_axi_pointNumber_WLAST;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_WID;
output  [C_M_AXI_POINTNUMBER_WUSER_WIDTH - 1:0] m_axi_pointNumber_WUSER;
output   m_axi_pointNumber_ARVALID;
input   m_axi_pointNumber_ARREADY;
output  [C_M_AXI_POINTNUMBER_ADDR_WIDTH - 1:0] m_axi_pointNumber_ARADDR;
output  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_ARID;
output  [7:0] m_axi_pointNumber_ARLEN;
output  [2:0] m_axi_pointNumber_ARSIZE;
output  [1:0] m_axi_pointNumber_ARBURST;
output  [1:0] m_axi_pointNumber_ARLOCK;
output  [3:0] m_axi_pointNumber_ARCACHE;
output  [2:0] m_axi_pointNumber_ARPROT;
output  [3:0] m_axi_pointNumber_ARQOS;
output  [3:0] m_axi_pointNumber_ARREGION;
output  [C_M_AXI_POINTNUMBER_ARUSER_WIDTH - 1:0] m_axi_pointNumber_ARUSER;
input   m_axi_pointNumber_RVALID;
output   m_axi_pointNumber_RREADY;
input  [C_M_AXI_POINTNUMBER_DATA_WIDTH - 1:0] m_axi_pointNumber_RDATA;
input   m_axi_pointNumber_RLAST;
input  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_RID;
input  [C_M_AXI_POINTNUMBER_RUSER_WIDTH - 1:0] m_axi_pointNumber_RUSER;
input  [1:0] m_axi_pointNumber_RRESP;
input   m_axi_pointNumber_BVALID;
output   m_axi_pointNumber_BREADY;
input  [1:0] m_axi_pointNumber_BRESP;
input  [C_M_AXI_POINTNUMBER_ID_WIDTH - 1:0] m_axi_pointNumber_BID;
input  [C_M_AXI_POINTNUMBER_BUSER_WIDTH - 1:0] m_axi_pointNumber_BUSER;
input  [23:0] video_in_TDATA;
input  [2:0] video_in_TKEEP;
input  [2:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
input   video_in_TVALID;
output   video_in_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] keyPoints_V;
wire   [31:0] kpn;
wire   [31:0] threshold;
wire    keyPoints_AWREADY;
wire    keyPoints_WREADY;
wire    keyPoints_ARREADY;
wire    keyPoints_RVALID;
wire   [31:0] keyPoints_RDATA;
wire    keyPoints_RLAST;
wire   [0:0] keyPoints_RID;
wire   [0:0] keyPoints_RUSER;
wire   [1:0] keyPoints_RRESP;
wire    keyPoints_BVALID;
wire   [1:0] keyPoints_BRESP;
wire   [0:0] keyPoints_BID;
wire   [0:0] keyPoints_BUSER;
wire    pointNumber_AWREADY;
wire    pointNumber_WREADY;
wire    pointNumber_ARREADY;
wire    pointNumber_RVALID;
wire   [31:0] pointNumber_RDATA;
wire    pointNumber_RLAST;
wire   [0:0] pointNumber_RID;
wire   [0:0] pointNumber_RUSER;
wire   [1:0] pointNumber_RRESP;
wire    pointNumber_BVALID;
wire   [1:0] pointNumber_BRESP;
wire   [0:0] pointNumber_BID;
wire   [0:0] pointNumber_BUSER;
wire    surf_Simplified_entr_U0_ap_start;
wire    surf_Simplified_entr_U0_ap_done;
wire    surf_Simplified_entr_U0_ap_continue;
wire    surf_Simplified_entr_U0_ap_idle;
wire    surf_Simplified_entr_U0_ap_ready;
wire    surf_Simplified_entr_U0_start_out;
wire    surf_Simplified_entr_U0_start_write;
wire   [31:0] surf_Simplified_entr_U0_keyPoints_V_out_din;
wire    surf_Simplified_entr_U0_keyPoints_V_out_write;
wire   [31:0] surf_Simplified_entr_U0_kpn_out_din;
wire    surf_Simplified_entr_U0_kpn_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_video_in_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    integralImg_U0_ap_start;
wire    integralImg_U0_ap_done;
wire    integralImg_U0_ap_continue;
wire    integralImg_U0_ap_idle;
wire    integralImg_U0_ap_ready;
wire    integralImg_U0_img_data_stream_0_V_read;
wire    integralImg_U0_img_data_stream_1_V_read;
wire    integralImg_U0_img_data_stream_2_V_read;
wire   [31:0] integralImg_U0_sum_V_din;
wire    integralImg_U0_sum_V_write;
wire    Block_codeRepl47_pro_U0_ap_start;
wire    Block_codeRepl47_pro_U0_ap_done;
wire    Block_codeRepl47_pro_U0_ap_continue;
wire    Block_codeRepl47_pro_U0_ap_idle;
wire    Block_codeRepl47_pro_U0_ap_ready;
wire   [31:0] Block_codeRepl47_pro_U0_this_assign_1_out_out_din;
wire    Block_codeRepl47_pro_U0_this_assign_1_out_out_write;
wire    HessianDetector_U0_m_axi_keyPoints_V_AWVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_AWADDR;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_AWID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_AWLEN;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_AWSIZE;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_AWBURST;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_AWLOCK;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWCACHE;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_AWPROT;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWQOS;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWREGION;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_AWUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_WVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_WDATA;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_WSTRB;
wire    HessianDetector_U0_m_axi_keyPoints_V_WLAST;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_WID;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_WUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_ARVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_ARADDR;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_ARID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_ARLEN;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_ARSIZE;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_ARBURST;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_ARLOCK;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARCACHE;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_ARPROT;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARQOS;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARREGION;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_ARUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_RREADY;
wire    HessianDetector_U0_m_axi_keyPoints_V_BREADY;
wire    HessianDetector_U0_keyPoints_V_offset_read;
wire    HessianDetector_U0_m_axi_pointNumber_AWVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_AWADDR;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_AWID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_AWLEN;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_AWSIZE;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_AWBURST;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_AWLOCK;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWCACHE;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_AWPROT;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWQOS;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWREGION;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_AWUSER;
wire    HessianDetector_U0_m_axi_pointNumber_WVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_WDATA;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_WSTRB;
wire    HessianDetector_U0_m_axi_pointNumber_WLAST;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_WID;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_WUSER;
wire    HessianDetector_U0_m_axi_pointNumber_ARVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_ARADDR;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_ARID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_ARLEN;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_ARSIZE;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_ARBURST;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_ARLOCK;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARCACHE;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_ARPROT;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARQOS;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARREGION;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_ARUSER;
wire    HessianDetector_U0_m_axi_pointNumber_RREADY;
wire    HessianDetector_U0_m_axi_pointNumber_BREADY;
wire    HessianDetector_U0_pointNumber_offset_read;
wire    HessianDetector_U0_this_assign_1_loc_read;
wire    HessianDetector_U0_sum_V_read;
wire    HessianDetector_U0_ap_start;
wire    HessianDetector_U0_ap_done;
wire    HessianDetector_U0_ap_ready;
wire    HessianDetector_U0_ap_idle;
wire    HessianDetector_U0_ap_continue;
wire    ap_sync_continue;
wire    keyPoints_V_c_full_n;
wire   [31:0] keyPoints_V_c_dout;
wire    keyPoints_V_c_empty_n;
wire    kpn_c_full_n;
wire   [31:0] kpn_c_dout;
wire    kpn_c_empty_n;
wire    img_data_stream_0_V_full_n;
wire   [7:0] img_data_stream_0_V_dout;
wire    img_data_stream_0_V_empty_n;
wire    img_data_stream_1_V_full_n;
wire   [7:0] img_data_stream_1_V_dout;
wire    img_data_stream_1_V_empty_n;
wire    img_data_stream_2_V_full_n;
wire   [7:0] img_data_stream_2_V_dout;
wire    img_data_stream_2_V_empty_n;
wire    sum_V_full_n;
wire   [31:0] sum_V_dout;
wire    sum_V_empty_n;
wire    this_assign_1_loc_c_full_n;
wire   [31:0] this_assign_1_loc_c_dout;
wire    this_assign_1_loc_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_surf_Simplified_entr_U0_ap_ready;
wire    ap_sync_surf_Simplified_entr_U0_ap_ready;
reg   [1:0] surf_Simplified_entr_U0_ap_ready_count;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready;
wire    ap_sync_Block_codeRepl47_pro_U0_ap_ready;
reg   [1:0] Block_codeRepl47_pro_U0_ap_ready_count;
wire   [0:0] start_for_HessianDetector_U0_din;
wire    start_for_HessianDetector_U0_full_n;
wire   [0:0] start_for_HessianDetector_U0_dout;
wire    start_for_HessianDetector_U0_empty_n;
wire   [0:0] start_for_integralImg_U0_din;
wire    start_for_integralImg_U0_full_n;
wire   [0:0] start_for_integralImg_U0_dout;
wire    start_for_integralImg_U0_empty_n;
wire    integralImg_U0_start_full_n;
wire    integralImg_U0_start_write;
wire    Block_codeRepl47_pro_U0_start_full_n;
wire    Block_codeRepl47_pro_U0_start_write;
wire    HessianDetector_U0_start_full_n;
wire    HessianDetector_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_surf_Simplified_entr_U0_ap_ready = 1'b0;
#0 surf_Simplified_entr_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready = 1'b0;
#0 Block_codeRepl47_pro_U0_ap_ready_count = 2'd0;
end

surf_Simplified_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
surf_Simplified_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .keyPoints_V(keyPoints_V),
    .kpn(kpn)
);

surf_Simplified_threshold_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_THRESHOLD_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_THRESHOLD_DATA_WIDTH ))
surf_Simplified_threshold_s_axi_U(
    .AWVALID(s_axi_threshold_AWVALID),
    .AWREADY(s_axi_threshold_AWREADY),
    .AWADDR(s_axi_threshold_AWADDR),
    .WVALID(s_axi_threshold_WVALID),
    .WREADY(s_axi_threshold_WREADY),
    .WDATA(s_axi_threshold_WDATA),
    .WSTRB(s_axi_threshold_WSTRB),
    .ARVALID(s_axi_threshold_ARVALID),
    .ARREADY(s_axi_threshold_ARREADY),
    .ARADDR(s_axi_threshold_ARADDR),
    .RVALID(s_axi_threshold_RVALID),
    .RREADY(s_axi_threshold_RREADY),
    .RDATA(s_axi_threshold_RDATA),
    .RRESP(s_axi_threshold_RRESP),
    .BVALID(s_axi_threshold_BVALID),
    .BREADY(s_axi_threshold_BREADY),
    .BRESP(s_axi_threshold_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .threshold(threshold)
);

surf_Simplified_keyPoints_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KEYPOINTS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KEYPOINTS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KEYPOINTS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KEYPOINTS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KEYPOINTS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KEYPOINTS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KEYPOINTS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KEYPOINTS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_KEYPOINTS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KEYPOINTS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KEYPOINTS_CACHE_VALUE ))
surf_Simplified_keyPoints_m_axi_U(
    .AWVALID(m_axi_keyPoints_AWVALID),
    .AWREADY(m_axi_keyPoints_AWREADY),
    .AWADDR(m_axi_keyPoints_AWADDR),
    .AWID(m_axi_keyPoints_AWID),
    .AWLEN(m_axi_keyPoints_AWLEN),
    .AWSIZE(m_axi_keyPoints_AWSIZE),
    .AWBURST(m_axi_keyPoints_AWBURST),
    .AWLOCK(m_axi_keyPoints_AWLOCK),
    .AWCACHE(m_axi_keyPoints_AWCACHE),
    .AWPROT(m_axi_keyPoints_AWPROT),
    .AWQOS(m_axi_keyPoints_AWQOS),
    .AWREGION(m_axi_keyPoints_AWREGION),
    .AWUSER(m_axi_keyPoints_AWUSER),
    .WVALID(m_axi_keyPoints_WVALID),
    .WREADY(m_axi_keyPoints_WREADY),
    .WDATA(m_axi_keyPoints_WDATA),
    .WSTRB(m_axi_keyPoints_WSTRB),
    .WLAST(m_axi_keyPoints_WLAST),
    .WID(m_axi_keyPoints_WID),
    .WUSER(m_axi_keyPoints_WUSER),
    .ARVALID(m_axi_keyPoints_ARVALID),
    .ARREADY(m_axi_keyPoints_ARREADY),
    .ARADDR(m_axi_keyPoints_ARADDR),
    .ARID(m_axi_keyPoints_ARID),
    .ARLEN(m_axi_keyPoints_ARLEN),
    .ARSIZE(m_axi_keyPoints_ARSIZE),
    .ARBURST(m_axi_keyPoints_ARBURST),
    .ARLOCK(m_axi_keyPoints_ARLOCK),
    .ARCACHE(m_axi_keyPoints_ARCACHE),
    .ARPROT(m_axi_keyPoints_ARPROT),
    .ARQOS(m_axi_keyPoints_ARQOS),
    .ARREGION(m_axi_keyPoints_ARREGION),
    .ARUSER(m_axi_keyPoints_ARUSER),
    .RVALID(m_axi_keyPoints_RVALID),
    .RREADY(m_axi_keyPoints_RREADY),
    .RDATA(m_axi_keyPoints_RDATA),
    .RLAST(m_axi_keyPoints_RLAST),
    .RID(m_axi_keyPoints_RID),
    .RUSER(m_axi_keyPoints_RUSER),
    .RRESP(m_axi_keyPoints_RRESP),
    .BVALID(m_axi_keyPoints_BVALID),
    .BREADY(m_axi_keyPoints_BREADY),
    .BRESP(m_axi_keyPoints_BRESP),
    .BID(m_axi_keyPoints_BID),
    .BUSER(m_axi_keyPoints_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(keyPoints_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(keyPoints_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(keyPoints_RDATA),
    .I_RID(keyPoints_RID),
    .I_RUSER(keyPoints_RUSER),
    .I_RRESP(keyPoints_RRESP),
    .I_RLAST(keyPoints_RLAST),
    .I_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID),
    .I_AWREADY(keyPoints_AWREADY),
    .I_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR),
    .I_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID),
    .I_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN),
    .I_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE),
    .I_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK),
    .I_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE),
    .I_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS),
    .I_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT),
    .I_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER),
    .I_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST),
    .I_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION),
    .I_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID),
    .I_WREADY(keyPoints_WREADY),
    .I_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA),
    .I_WID(HessianDetector_U0_m_axi_keyPoints_V_WID),
    .I_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER),
    .I_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST),
    .I_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB),
    .I_BVALID(keyPoints_BVALID),
    .I_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY),
    .I_BRESP(keyPoints_BRESP),
    .I_BID(keyPoints_BID),
    .I_BUSER(keyPoints_BUSER)
);

surf_Simplified_pointNumber_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_POINTNUMBER_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_POINTNUMBER_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_POINTNUMBER_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_POINTNUMBER_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_POINTNUMBER_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_POINTNUMBER_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_POINTNUMBER_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_POINTNUMBER_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_POINTNUMBER_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_POINTNUMBER_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_POINTNUMBER_CACHE_VALUE ))
surf_Simplified_pointNumber_m_axi_U(
    .AWVALID(m_axi_pointNumber_AWVALID),
    .AWREADY(m_axi_pointNumber_AWREADY),
    .AWADDR(m_axi_pointNumber_AWADDR),
    .AWID(m_axi_pointNumber_AWID),
    .AWLEN(m_axi_pointNumber_AWLEN),
    .AWSIZE(m_axi_pointNumber_AWSIZE),
    .AWBURST(m_axi_pointNumber_AWBURST),
    .AWLOCK(m_axi_pointNumber_AWLOCK),
    .AWCACHE(m_axi_pointNumber_AWCACHE),
    .AWPROT(m_axi_pointNumber_AWPROT),
    .AWQOS(m_axi_pointNumber_AWQOS),
    .AWREGION(m_axi_pointNumber_AWREGION),
    .AWUSER(m_axi_pointNumber_AWUSER),
    .WVALID(m_axi_pointNumber_WVALID),
    .WREADY(m_axi_pointNumber_WREADY),
    .WDATA(m_axi_pointNumber_WDATA),
    .WSTRB(m_axi_pointNumber_WSTRB),
    .WLAST(m_axi_pointNumber_WLAST),
    .WID(m_axi_pointNumber_WID),
    .WUSER(m_axi_pointNumber_WUSER),
    .ARVALID(m_axi_pointNumber_ARVALID),
    .ARREADY(m_axi_pointNumber_ARREADY),
    .ARADDR(m_axi_pointNumber_ARADDR),
    .ARID(m_axi_pointNumber_ARID),
    .ARLEN(m_axi_pointNumber_ARLEN),
    .ARSIZE(m_axi_pointNumber_ARSIZE),
    .ARBURST(m_axi_pointNumber_ARBURST),
    .ARLOCK(m_axi_pointNumber_ARLOCK),
    .ARCACHE(m_axi_pointNumber_ARCACHE),
    .ARPROT(m_axi_pointNumber_ARPROT),
    .ARQOS(m_axi_pointNumber_ARQOS),
    .ARREGION(m_axi_pointNumber_ARREGION),
    .ARUSER(m_axi_pointNumber_ARUSER),
    .RVALID(m_axi_pointNumber_RVALID),
    .RREADY(m_axi_pointNumber_RREADY),
    .RDATA(m_axi_pointNumber_RDATA),
    .RLAST(m_axi_pointNumber_RLAST),
    .RID(m_axi_pointNumber_RID),
    .RUSER(m_axi_pointNumber_RUSER),
    .RRESP(m_axi_pointNumber_RRESP),
    .BVALID(m_axi_pointNumber_BVALID),
    .BREADY(m_axi_pointNumber_BREADY),
    .BRESP(m_axi_pointNumber_BRESP),
    .BID(m_axi_pointNumber_BID),
    .BUSER(m_axi_pointNumber_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(pointNumber_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(pointNumber_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(pointNumber_RDATA),
    .I_RID(pointNumber_RID),
    .I_RUSER(pointNumber_RUSER),
    .I_RRESP(pointNumber_RRESP),
    .I_RLAST(pointNumber_RLAST),
    .I_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID),
    .I_AWREADY(pointNumber_AWREADY),
    .I_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR),
    .I_AWID(HessianDetector_U0_m_axi_pointNumber_AWID),
    .I_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN),
    .I_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE),
    .I_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK),
    .I_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE),
    .I_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS),
    .I_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT),
    .I_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER),
    .I_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST),
    .I_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION),
    .I_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID),
    .I_WREADY(pointNumber_WREADY),
    .I_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA),
    .I_WID(HessianDetector_U0_m_axi_pointNumber_WID),
    .I_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER),
    .I_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST),
    .I_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB),
    .I_BVALID(pointNumber_BVALID),
    .I_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY),
    .I_BRESP(pointNumber_BRESP),
    .I_BID(pointNumber_BID),
    .I_BUSER(pointNumber_BUSER)
);

surf_Simplified_entr surf_Simplified_entr_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(surf_Simplified_entr_U0_ap_start),
    .start_full_n(start_for_HessianDetector_U0_full_n),
    .ap_done(surf_Simplified_entr_U0_ap_done),
    .ap_continue(surf_Simplified_entr_U0_ap_continue),
    .ap_idle(surf_Simplified_entr_U0_ap_idle),
    .ap_ready(surf_Simplified_entr_U0_ap_ready),
    .start_out(surf_Simplified_entr_U0_start_out),
    .start_write(surf_Simplified_entr_U0_start_write),
    .keyPoints_V(keyPoints_V),
    .kpn(kpn),
    .keyPoints_V_out_din(surf_Simplified_entr_U0_keyPoints_V_out_din),
    .keyPoints_V_out_full_n(keyPoints_V_c_full_n),
    .keyPoints_V_out_write(surf_Simplified_entr_U0_keyPoints_V_out_write),
    .kpn_out_din(surf_Simplified_entr_U0_kpn_out_din),
    .kpn_out_full_n(kpn_c_full_n),
    .kpn_out_write(surf_Simplified_entr_U0_kpn_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_integralImg_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .video_in_TDATA(video_in_TDATA),
    .video_in_TVALID(video_in_TVALID),
    .video_in_TREADY(AXIvideo2Mat_U0_video_in_TREADY),
    .video_in_TKEEP(video_in_TKEEP),
    .video_in_TSTRB(video_in_TSTRB),
    .video_in_TUSER(video_in_TUSER),
    .video_in_TLAST(video_in_TLAST),
    .video_in_TID(video_in_TID),
    .video_in_TDEST(video_in_TDEST),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_data_stream_0_V_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_data_stream_1_V_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_data_stream_2_V_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write)
);

integralImg integralImg_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(integralImg_U0_ap_start),
    .ap_done(integralImg_U0_ap_done),
    .ap_continue(integralImg_U0_ap_continue),
    .ap_idle(integralImg_U0_ap_idle),
    .ap_ready(integralImg_U0_ap_ready),
    .img_data_stream_0_V_dout(img_data_stream_0_V_dout),
    .img_data_stream_0_V_empty_n(img_data_stream_0_V_empty_n),
    .img_data_stream_0_V_read(integralImg_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img_data_stream_1_V_dout),
    .img_data_stream_1_V_empty_n(img_data_stream_1_V_empty_n),
    .img_data_stream_1_V_read(integralImg_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img_data_stream_2_V_dout),
    .img_data_stream_2_V_empty_n(img_data_stream_2_V_empty_n),
    .img_data_stream_2_V_read(integralImg_U0_img_data_stream_2_V_read),
    .sum_V_din(integralImg_U0_sum_V_din),
    .sum_V_full_n(sum_V_full_n),
    .sum_V_write(integralImg_U0_sum_V_write)
);

Block_codeRepl47_pro Block_codeRepl47_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_codeRepl47_pro_U0_ap_start),
    .ap_done(Block_codeRepl47_pro_U0_ap_done),
    .ap_continue(Block_codeRepl47_pro_U0_ap_continue),
    .ap_idle(Block_codeRepl47_pro_U0_ap_idle),
    .ap_ready(Block_codeRepl47_pro_U0_ap_ready),
    .threshold(threshold),
    .this_assign_1_out_out_din(Block_codeRepl47_pro_U0_this_assign_1_out_out_din),
    .this_assign_1_out_out_full_n(this_assign_1_loc_c_full_n),
    .this_assign_1_out_out_write(Block_codeRepl47_pro_U0_this_assign_1_out_out_write)
);

HessianDetector HessianDetector_U0(
    .m_axi_keyPoints_V_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID),
    .m_axi_keyPoints_V_AWREADY(keyPoints_AWREADY),
    .m_axi_keyPoints_V_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR),
    .m_axi_keyPoints_V_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID),
    .m_axi_keyPoints_V_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN),
    .m_axi_keyPoints_V_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE),
    .m_axi_keyPoints_V_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST),
    .m_axi_keyPoints_V_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK),
    .m_axi_keyPoints_V_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE),
    .m_axi_keyPoints_V_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT),
    .m_axi_keyPoints_V_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS),
    .m_axi_keyPoints_V_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION),
    .m_axi_keyPoints_V_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER),
    .m_axi_keyPoints_V_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID),
    .m_axi_keyPoints_V_WREADY(keyPoints_WREADY),
    .m_axi_keyPoints_V_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA),
    .m_axi_keyPoints_V_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB),
    .m_axi_keyPoints_V_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST),
    .m_axi_keyPoints_V_WID(HessianDetector_U0_m_axi_keyPoints_V_WID),
    .m_axi_keyPoints_V_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER),
    .m_axi_keyPoints_V_ARVALID(HessianDetector_U0_m_axi_keyPoints_V_ARVALID),
    .m_axi_keyPoints_V_ARREADY(1'b0),
    .m_axi_keyPoints_V_ARADDR(HessianDetector_U0_m_axi_keyPoints_V_ARADDR),
    .m_axi_keyPoints_V_ARID(HessianDetector_U0_m_axi_keyPoints_V_ARID),
    .m_axi_keyPoints_V_ARLEN(HessianDetector_U0_m_axi_keyPoints_V_ARLEN),
    .m_axi_keyPoints_V_ARSIZE(HessianDetector_U0_m_axi_keyPoints_V_ARSIZE),
    .m_axi_keyPoints_V_ARBURST(HessianDetector_U0_m_axi_keyPoints_V_ARBURST),
    .m_axi_keyPoints_V_ARLOCK(HessianDetector_U0_m_axi_keyPoints_V_ARLOCK),
    .m_axi_keyPoints_V_ARCACHE(HessianDetector_U0_m_axi_keyPoints_V_ARCACHE),
    .m_axi_keyPoints_V_ARPROT(HessianDetector_U0_m_axi_keyPoints_V_ARPROT),
    .m_axi_keyPoints_V_ARQOS(HessianDetector_U0_m_axi_keyPoints_V_ARQOS),
    .m_axi_keyPoints_V_ARREGION(HessianDetector_U0_m_axi_keyPoints_V_ARREGION),
    .m_axi_keyPoints_V_ARUSER(HessianDetector_U0_m_axi_keyPoints_V_ARUSER),
    .m_axi_keyPoints_V_RVALID(1'b0),
    .m_axi_keyPoints_V_RREADY(HessianDetector_U0_m_axi_keyPoints_V_RREADY),
    .m_axi_keyPoints_V_RDATA(32'd0),
    .m_axi_keyPoints_V_RLAST(1'b0),
    .m_axi_keyPoints_V_RID(1'd0),
    .m_axi_keyPoints_V_RUSER(1'd0),
    .m_axi_keyPoints_V_RRESP(2'd0),
    .m_axi_keyPoints_V_BVALID(keyPoints_BVALID),
    .m_axi_keyPoints_V_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY),
    .m_axi_keyPoints_V_BRESP(keyPoints_BRESP),
    .m_axi_keyPoints_V_BID(keyPoints_BID),
    .m_axi_keyPoints_V_BUSER(keyPoints_BUSER),
    .keyPoints_V_offset_dout(keyPoints_V_c_dout),
    .keyPoints_V_offset_empty_n(keyPoints_V_c_empty_n),
    .keyPoints_V_offset_read(HessianDetector_U0_keyPoints_V_offset_read),
    .m_axi_pointNumber_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID),
    .m_axi_pointNumber_AWREADY(pointNumber_AWREADY),
    .m_axi_pointNumber_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR),
    .m_axi_pointNumber_AWID(HessianDetector_U0_m_axi_pointNumber_AWID),
    .m_axi_pointNumber_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN),
    .m_axi_pointNumber_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE),
    .m_axi_pointNumber_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST),
    .m_axi_pointNumber_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK),
    .m_axi_pointNumber_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE),
    .m_axi_pointNumber_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT),
    .m_axi_pointNumber_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS),
    .m_axi_pointNumber_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION),
    .m_axi_pointNumber_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER),
    .m_axi_pointNumber_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID),
    .m_axi_pointNumber_WREADY(pointNumber_WREADY),
    .m_axi_pointNumber_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA),
    .m_axi_pointNumber_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB),
    .m_axi_pointNumber_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST),
    .m_axi_pointNumber_WID(HessianDetector_U0_m_axi_pointNumber_WID),
    .m_axi_pointNumber_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER),
    .m_axi_pointNumber_ARVALID(HessianDetector_U0_m_axi_pointNumber_ARVALID),
    .m_axi_pointNumber_ARREADY(1'b0),
    .m_axi_pointNumber_ARADDR(HessianDetector_U0_m_axi_pointNumber_ARADDR),
    .m_axi_pointNumber_ARID(HessianDetector_U0_m_axi_pointNumber_ARID),
    .m_axi_pointNumber_ARLEN(HessianDetector_U0_m_axi_pointNumber_ARLEN),
    .m_axi_pointNumber_ARSIZE(HessianDetector_U0_m_axi_pointNumber_ARSIZE),
    .m_axi_pointNumber_ARBURST(HessianDetector_U0_m_axi_pointNumber_ARBURST),
    .m_axi_pointNumber_ARLOCK(HessianDetector_U0_m_axi_pointNumber_ARLOCK),
    .m_axi_pointNumber_ARCACHE(HessianDetector_U0_m_axi_pointNumber_ARCACHE),
    .m_axi_pointNumber_ARPROT(HessianDetector_U0_m_axi_pointNumber_ARPROT),
    .m_axi_pointNumber_ARQOS(HessianDetector_U0_m_axi_pointNumber_ARQOS),
    .m_axi_pointNumber_ARREGION(HessianDetector_U0_m_axi_pointNumber_ARREGION),
    .m_axi_pointNumber_ARUSER(HessianDetector_U0_m_axi_pointNumber_ARUSER),
    .m_axi_pointNumber_RVALID(1'b0),
    .m_axi_pointNumber_RREADY(HessianDetector_U0_m_axi_pointNumber_RREADY),
    .m_axi_pointNumber_RDATA(32'd0),
    .m_axi_pointNumber_RLAST(1'b0),
    .m_axi_pointNumber_RID(1'd0),
    .m_axi_pointNumber_RUSER(1'd0),
    .m_axi_pointNumber_RRESP(2'd0),
    .m_axi_pointNumber_BVALID(pointNumber_BVALID),
    .m_axi_pointNumber_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY),
    .m_axi_pointNumber_BRESP(pointNumber_BRESP),
    .m_axi_pointNumber_BID(pointNumber_BID),
    .m_axi_pointNumber_BUSER(pointNumber_BUSER),
    .pointNumber_offset_dout(kpn_c_dout),
    .pointNumber_offset_empty_n(kpn_c_empty_n),
    .pointNumber_offset_read(HessianDetector_U0_pointNumber_offset_read),
    .this_assign_1_loc_dout(this_assign_1_loc_c_dout),
    .this_assign_1_loc_empty_n(this_assign_1_loc_c_empty_n),
    .this_assign_1_loc_read(HessianDetector_U0_this_assign_1_loc_read),
    .sum_V_dout(sum_V_dout),
    .sum_V_empty_n(sum_V_empty_n),
    .sum_V_read(HessianDetector_U0_sum_V_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(HessianDetector_U0_ap_start),
    .ap_done(HessianDetector_U0_ap_done),
    .ap_ready(HessianDetector_U0_ap_ready),
    .ap_idle(HessianDetector_U0_ap_idle),
    .ap_continue(HessianDetector_U0_ap_continue)
);

fifo_w32_d3_A keyPoints_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(surf_Simplified_entr_U0_keyPoints_V_out_din),
    .if_full_n(keyPoints_V_c_full_n),
    .if_write(surf_Simplified_entr_U0_keyPoints_V_out_write),
    .if_dout(keyPoints_V_c_dout),
    .if_empty_n(keyPoints_V_c_empty_n),
    .if_read(HessianDetector_U0_keyPoints_V_offset_read)
);

fifo_w32_d3_A kpn_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(surf_Simplified_entr_U0_kpn_out_din),
    .if_full_n(kpn_c_full_n),
    .if_write(surf_Simplified_entr_U0_kpn_out_write),
    .if_dout(kpn_c_dout),
    .if_empty_n(kpn_c_empty_n),
    .if_read(HessianDetector_U0_pointNumber_offset_read)
);

fifo_w8_d2_A img_data_stream_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(img_data_stream_0_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(img_data_stream_0_V_dout),
    .if_empty_n(img_data_stream_0_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A img_data_stream_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(img_data_stream_1_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(img_data_stream_1_V_dout),
    .if_empty_n(img_data_stream_1_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A img_data_stream_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(img_data_stream_2_V_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(img_data_stream_2_V_dout),
    .if_empty_n(img_data_stream_2_V_empty_n),
    .if_read(integralImg_U0_img_data_stream_2_V_read)
);

fifo_w32_d2_A_x sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(integralImg_U0_sum_V_din),
    .if_full_n(sum_V_full_n),
    .if_write(integralImg_U0_sum_V_write),
    .if_dout(sum_V_dout),
    .if_empty_n(sum_V_empty_n),
    .if_read(HessianDetector_U0_sum_V_read)
);

fifo_w32_d3_A this_assign_1_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl47_pro_U0_this_assign_1_out_out_din),
    .if_full_n(this_assign_1_loc_c_full_n),
    .if_write(Block_codeRepl47_pro_U0_this_assign_1_out_out_write),
    .if_dout(this_assign_1_loc_c_dout),
    .if_empty_n(this_assign_1_loc_c_empty_n),
    .if_read(HessianDetector_U0_this_assign_1_loc_read)
);

start_for_HessianxdS start_for_HessianxdS_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_HessianDetector_U0_din),
    .if_full_n(start_for_HessianDetector_U0_full_n),
    .if_write(surf_Simplified_entr_U0_start_write),
    .if_dout(start_for_HessianDetector_U0_dout),
    .if_empty_n(start_for_HessianDetector_U0_empty_n),
    .if_read(HessianDetector_U0_ap_ready)
);

start_for_integrayd2 start_for_integrayd2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_integralImg_U0_din),
    .if_full_n(start_for_integralImg_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_integralImg_U0_dout),
    .if_empty_n(start_for_integralImg_U0_empty_n),
    .if_read(integralImg_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready <= ap_sync_Block_codeRepl47_pro_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_surf_Simplified_entr_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_surf_Simplified_entr_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_surf_Simplified_entr_U0_ap_ready <= ap_sync_surf_Simplified_entr_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_codeRepl47_pro_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_codeRepl47_pro_U0_ap_ready_count <= (Block_codeRepl47_pro_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_codeRepl47_pro_U0_ap_ready))) begin
        Block_codeRepl47_pro_U0_ap_ready_count <= (Block_codeRepl47_pro_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (surf_Simplified_entr_U0_ap_ready == 1'b0))) begin
        surf_Simplified_entr_U0_ap_ready_count <= (surf_Simplified_entr_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (surf_Simplified_entr_U0_ap_ready == 1'b1))) begin
        surf_Simplified_entr_U0_ap_ready_count <= (surf_Simplified_entr_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_codeRepl47_pro_U0_ap_continue = 1'b1;

assign Block_codeRepl47_pro_U0_ap_start = ((ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_codeRepl47_pro_U0_start_full_n = 1'b1;

assign Block_codeRepl47_pro_U0_start_write = 1'b0;

assign HessianDetector_U0_ap_continue = 1'b1;

assign HessianDetector_U0_ap_start = start_for_HessianDetector_U0_empty_n;

assign HessianDetector_U0_start_full_n = 1'b1;

assign HessianDetector_U0_start_write = 1'b0;

assign ap_done = HessianDetector_U0_ap_done;

assign ap_idle = (surf_Simplified_entr_U0_ap_idle & integralImg_U0_ap_idle & HessianDetector_U0_ap_idle & Block_codeRepl47_pro_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_Block_codeRepl47_pro_U0_ap_ready = (ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready | Block_codeRepl47_pro_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = HessianDetector_U0_ap_done;

assign ap_sync_ready = (ap_sync_surf_Simplified_entr_U0_ap_ready & ap_sync_Block_codeRepl47_pro_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign ap_sync_surf_Simplified_entr_U0_ap_ready = (surf_Simplified_entr_U0_ap_ready | ap_sync_reg_surf_Simplified_entr_U0_ap_ready);

assign integralImg_U0_ap_continue = 1'b1;

assign integralImg_U0_ap_start = start_for_integralImg_U0_empty_n;

assign integralImg_U0_start_full_n = 1'b1;

assign integralImg_U0_start_write = 1'b0;

assign start_for_HessianDetector_U0_din = 1'b1;

assign start_for_integralImg_U0_din = 1'b1;

assign surf_Simplified_entr_U0_ap_continue = 1'b1;

assign surf_Simplified_entr_U0_ap_start = ((ap_sync_reg_surf_Simplified_entr_U0_ap_ready ^ 1'b1) & ap_start);

assign video_in_TREADY = AXIvideo2Mat_U0_video_in_TREADY;

endmodule //surf_Simplified
