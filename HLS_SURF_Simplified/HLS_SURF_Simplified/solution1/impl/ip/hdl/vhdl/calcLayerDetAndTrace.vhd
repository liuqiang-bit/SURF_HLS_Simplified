-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcLayerDetAndTrace is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    det0_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    det0_V_V_full_n : IN STD_LOGIC;
    det0_V_V_write : OUT STD_LOGIC;
    det1_V_V3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    det1_V_V3_full_n : IN STD_LOGIC;
    det1_V_V3_write : OUT STD_LOGIC;
    det2_V_V6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    det2_V_V6_full_n : IN STD_LOGIC;
    det2_V_V6_write : OUT STD_LOGIC;
    this_assign_1_reload_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    this_assign_1_reload_empty_n : IN STD_LOGIC;
    this_assign_1_reload_read : OUT STD_LOGIC;
    this_assign_1_reload_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    this_assign_1_reload_out_full_n : IN STD_LOGIC;
    this_assign_1_reload_out_write : OUT STD_LOGIC;
    keyPoints_V_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    keyPoints_V_offset_empty_n : IN STD_LOGIC;
    keyPoints_V_offset_read : OUT STD_LOGIC;
    pointNumber_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    pointNumber_offset_empty_n : IN STD_LOGIC;
    pointNumber_offset_read : OUT STD_LOGIC;
    keyPoints_V_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    keyPoints_V_offset_out_full_n : IN STD_LOGIC;
    keyPoints_V_offset_out_write : OUT STD_LOGIC;
    pointNumber_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    pointNumber_offset_out_full_n : IN STD_LOGIC;
    pointNumber_offset_out_write : OUT STD_LOGIC;
    sum_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_V_empty_n : IN STD_LOGIC;
    sum_V_read : OUT STD_LOGIC );
end;


architecture behav of calcLayerDetAndTrace is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv10_259 : STD_LOGIC_VECTOR (9 downto 0) := "1001011001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_16 : STD_LOGIC_VECTOR (9 downto 0) := "0000010110";
    constant ap_const_lv32_A8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101000";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv8_AF : STD_LOGIC_VECTOR (7 downto 0) := "10101111";
    constant ap_const_lv176_lc_1 : STD_LOGIC_VECTOR (175 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv10_321 : STD_LOGIC_VECTOR (9 downto 0) := "1100100001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv43_39A : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000001110011010";
    constant ap_const_lv27_7FFFFFF : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111111111111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv16_321 : STD_LOGIC_VECTOR (15 downto 0) := "0000001100100001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal MSB_V : STD_LOGIC_VECTOR (175 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal sumBuf_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal sumBuf_ce0 : STD_LOGIC;
    signal sumBuf_we0 : STD_LOGIC;
    signal sumBuf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sumBuf_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sumBuf_ce1 : STD_LOGIC;
    signal sumBuf_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sizes_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sizes_ce0 : STD_LOGIC;
    signal sizes_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Dx_V_0_ce0 : STD_LOGIC;
    signal Dx_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dx_V_1_ce0 : STD_LOGIC;
    signal Dx_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dx_V_2_ce0 : STD_LOGIC;
    signal Dx_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dx_V_3_ce0 : STD_LOGIC;
    signal Dx_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dx_V_4_ce0 : STD_LOGIC;
    signal Dx_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dy_V_0_ce0 : STD_LOGIC;
    signal Dy_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dy_V_1_ce0 : STD_LOGIC;
    signal Dy_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dy_V_2_ce0 : STD_LOGIC;
    signal Dy_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dy_V_3_ce0 : STD_LOGIC;
    signal Dy_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dy_V_4_ce0 : STD_LOGIC;
    signal Dy_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Dxy_V_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Dxy_V_2_ce0 : STD_LOGIC;
    signal Dxy_V_2_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal Dxy_V_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Dxy_V_3_ce0 : STD_LOGIC;
    signal Dxy_V_3_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal Dxy_V_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Dxy_V_0_ce0 : STD_LOGIC;
    signal Dxy_V_0_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Dxy_V_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Dxy_V_1_ce0 : STD_LOGIC;
    signal Dxy_V_1_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Dxy_V_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Dxy_V_4_ce0 : STD_LOGIC;
    signal Dxy_V_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal det0_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal or_cond_i_i_i_i_i_i_s_reg_1505 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_i_i_i_i_i_i_i_reg_431 : STD_LOGIC_VECTOR (1 downto 0);
    signal det1_V_V3_blk_n : STD_LOGIC;
    signal det2_V_V6_blk_n : STD_LOGIC;
    signal this_assign_1_reload_blk_n : STD_LOGIC;
    signal this_assign_1_reload_out_blk_n : STD_LOGIC;
    signal keyPoints_V_offset_blk_n : STD_LOGIC;
    signal pointNumber_offset_blk_n : STD_LOGIC;
    signal keyPoints_V_offset_out_blk_n : STD_LOGIC;
    signal pointNumber_offset_out_blk_n : STD_LOGIC;
    signal sum_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal exitcond2_i_i_i_i_i_s_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_506_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_reg_1449 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal rIndex_1_fu_524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal rIndex_1_reg_1454 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_i_i_i_i_i_s_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_i_i_fu_1421_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_i_i_i_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal val_assign_cast_i_i_fu_752_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal val_assign_cast_i_i_reg_1467 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_cast_i_i_i_i_i_i_i_fu_756_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_cast_i_i_i_i_i_i_i_reg_1472 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal c_fu_766_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_reg_1480 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_fu_792_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_reg_1488 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_i_i_i_i_i_i_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cOffset_fu_815_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal cOffset_reg_1498 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal or_cond_i_i_i_i_i_i_s_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rOffset_fu_839_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal rOffset_reg_1514 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_i_i_i2_i_i_s_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_calcHaarPattern_x_y_fu_466_ap_ready : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_ap_done : STD_LOGIC;
    signal tmp_27_i_i_i_i1_i_i_s_reg_1526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_60_cast_i_i_i_fu_853_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_60_cast_i_i_i_reg_1531 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_cast1_i_i_i_fu_857_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_i_cast1_i_i_i_reg_1536 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_i_cast_i_i_i_fu_869_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_1_i_cast_i_i_i_reg_1542 : STD_LOGIC_VECTOR (22 downto 0);
    signal kn_fu_879_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal kn_reg_1551 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond_i_i_i_i_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_6_fu_907_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_6_reg_1581 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_59_reg_1586 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_64_fu_969_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_64_reg_1591 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_65_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_1596 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_991_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_reg_1603 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_82_reg_1609 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_1051_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_87_reg_1614 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_88_fu_1067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_reg_1619 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_1073_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_90_reg_1626 : STD_LOGIC_VECTOR (7 downto 0);
    signal Dxy_V_4_load_reg_1632 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_81_fu_1163_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_reg_1637 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_104_fu_1253_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_104_reg_1642 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_i_i_i_fu_1427_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_i_i_i_reg_1647 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal tmp_70_i_i_i_fu_1301_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_70_i_i_i_fu_1301_p2 : signal is "no";
    signal tmp_70_i_i_i_reg_1663 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_71_i_i_i_fu_1306_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_71_i_i_i_fu_1306_p2 : signal is "no";
    signal tmp_71_i_i_i_reg_1668 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_20_i_i_i_i_fu_1319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_i_i_i_i_reg_1683 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_fu_1330_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_reg_1688 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal r_V_i_i_i_i_fu_1339_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_i_i_i_i_reg_1693 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal d_V_fu_1344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal r_V_8_fu_1355_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_8_reg_1703 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal r_V_9_fu_1368_p2 : STD_LOGIC_VECTOR (72 downto 0);
    signal r_V_9_reg_1708 : STD_LOGIC_VECTOR (72 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_ap_start : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_ap_idle : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_sumBuf_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_sumBuf_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_sumBuf_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_sumBuf_ce1 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_0_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_0_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_1_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_2_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_3_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_3_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_4_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0 : STD_LOGIC;
    signal grp_calcHaarPattern_x_y_fu_466_box_4_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rIndex_i_i_i_i_i_i_i_reg_397 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal val_assign_i_i_i_reg_408 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_i_i_i_i_i_i_i_reg_420 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_predicate_op330_write_state19 : BOOLEAN;
    signal ap_predicate_op332_write_state19 : BOOLEAN;
    signal ap_predicate_op334_write_state19 : BOOLEAN;
    signal ap_block_state19 : BOOLEAN;
    signal p_Val2_11_reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal kn_i_i_i_i_reg_455 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_calcHaarPattern_x_y_fu_466_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_58_cast_i_i_i_fu_781_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_i_i_i_i_i_i_i_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_cast_i_i_i_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_65_cast_i_i_i_fu_1274_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_66_cast_i_i_i_fu_1296_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_70_cast_i_i_i_fu_1311_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_71_cast_i_i_i_fu_1315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_12_fu_1412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_fu_546_p5 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_i_i_i_i_i_i_i_38_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_196 : STD_LOGIC_VECTOR (175 downto 0);
    signal ret_V_fu_584_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal p_Result_2_fu_729_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_i_i_i_i_i_i_i_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rIndex_fu_518_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_574_p1 : STD_LOGIC_VECTOR (167 downto 0);
    signal r_V_8_i_i_i_fu_564_p4 : STD_LOGIC_VECTOR (167 downto 0);
    signal tmp_55_i_i_i_fu_578_p2 : STD_LOGIC_VECTOR (167 downto 0);
    signal tmp_fu_496_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_i_i_i_fu_597_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Hi_assign_i_i_i_fu_605_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_621_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_627_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_fu_643_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_635_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_651_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_4_fu_611_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_42_fu_657_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_45_fu_669_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_46_fu_675_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_43_fu_661_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_44_fu_665_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_48_fu_693_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_49_fu_699_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal p_demorgan_fu_705_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_50_fu_711_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_47_fu_685_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_51_fu_717_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_52_fu_723_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal val_assign_i_i_i_i_s_fu_744_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_i_i_i_i_cast_s_fu_772_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_i_i_i_fu_776_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_58_i_i_i_fu_776_p2 : signal is "no";
    signal sizes_load_cast2_i_i_fu_807_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sizes_load_cast2_i_i_1_fu_811_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_i_i_i_i_i_i_i_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_i_i_i_i_i_i_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sizes_load_cast3_i_i_fu_803_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_59_i_i_i_fu_845_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_i_cast_i_i_i_fu_860_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1_i_i_i_i_fu_863_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_cast_i_i_i_39_fu_885_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_61_i_i_i_fu_889_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_6_fu_907_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_923_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_i_cast_i_i_i_fu_933_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_5_i_i_i_i_fu_937_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_62_i_i_i_fu_942_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_7_i_cast_i_i_i_fu_950_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal Hi_assign_1_i_i_i_fu_954_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_8_i_i_i_i_fu_964_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_63_i_i_i_fu_973_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal Lo_assign_1_i_i_i_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_1_cast_i_i_fu_960_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_1005_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_i_cast_i_i_i_fu_1015_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_14_i_i_i_i_fu_1019_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_67_i_i_i_fu_1024_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_16_i_cast_i_i_i_fu_1032_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal Hi_assign_2_i_i_i_fu_1036_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_17_i_i_i_i_fu_1046_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_68_i_i_i_fu_1055_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal Lo_assign_2_i_i_i_fu_1063_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_cast_i_i_fu_1042_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1077_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_1094_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_fu_1105_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_fu_1084_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_70_fu_1099_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_1110_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_74_fu_1124_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_75_fu_1131_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_1117_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_76_fu_1137_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_77_fu_1141_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_78_fu_1145_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_79_fu_1151_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal p_Result_s_fu_1157_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_89_fu_1167_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_1184_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_94_fu_1195_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_91_fu_1174_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_93_fu_1189_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_95_fu_1200_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_97_fu_1214_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_98_fu_1221_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_96_fu_1207_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_99_fu_1227_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_100_fu_1231_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_101_fu_1235_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_102_fu_1241_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal p_Result_1_fu_1247_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_60_fu_1257_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_1260_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_1263_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_i_i_i_fu_1269_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_65_i_i_i_fu_1269_p2 : signal is "no";
    signal tmp_83_fu_1279_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_84_fu_1282_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_fu_1285_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_i_i_i_fu_1291_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_66_i_i_i_fu_1291_p2 : signal is "no";
    signal tmp_69_i_i_i_fu_1432_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_i_i_i_i_fu_1325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_i_i_i_i_fu_1339_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_fu_1355_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_8_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1368_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_fu_1368_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal lhs_V_fu_1374_p3 : STD_LOGIC_VECTOR (73 downto 0);
    signal rhs_V_1_cast_i_i_i_i_fu_1381_p1 : STD_LOGIC_VECTOR (73 downto 0);
    signal ret_V_1_fu_1384_p2 : STD_LOGIC_VECTOR (73 downto 0);
    signal tmp_58_fu_1400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_cast_i_i_i_i_s_fu_1408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_fu_1390_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_i_i_i_fu_1421_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_57_i_i_i_fu_1421_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_i_i_i_fu_1427_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_i_i_i_fu_1432_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);

    component calcHaarPattern_x_y IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sumBuf_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        sumBuf_ce0 : OUT STD_LOGIC;
        sumBuf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sumBuf_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        sumBuf_ce1 : OUT STD_LOGIC;
        sumBuf_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        box_0_V_ce0 : OUT STD_LOGIC;
        box_0_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        box_1_V_ce0 : OUT STD_LOGIC;
        box_1_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        box_2_V_ce0 : OUT STD_LOGIC;
        box_2_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        box_3_V_ce0 : OUT STD_LOGIC;
        box_3_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_4_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        box_4_V_ce0 : OUT STD_LOGIC;
        box_4_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        box_V_offset : IN STD_LOGIC_VECTOR (1 downto 0);
        sumBufIndex_V : IN STD_LOGIC_VECTOR (175 downto 0);
        rOffset : IN STD_LOGIC_VECTOR (5 downto 0);
        cOffset : IN STD_LOGIC_VECTOR (10 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surf_Simplified_mtde IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component surf_Simplified_mbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component calcLayerDetAndTrcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTrdEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component calcLayerDetAndTreOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTrfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTrg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTrhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTribs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component calcLayerDetAndTrocq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component calcLayerDetAndTrpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component calcLayerDetAndTrqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component calcLayerDetAndTrrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component calcLayerDetAndTrsc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sumBuf_U : component calcLayerDetAndTrcud
    generic map (
        DataWidth => 32,
        AddressRange => 17622,
        AddressWidth => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sumBuf_address0,
        ce0 => sumBuf_ce0,
        we0 => sumBuf_we0,
        d0 => sum_V_dout,
        q0 => sumBuf_q0,
        address1 => sumBuf_address1,
        ce1 => sumBuf_ce1,
        q1 => sumBuf_q1);

    sizes_U : component calcLayerDetAndTrdEe
    generic map (
        DataWidth => 5,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sizes_address0,
        ce0 => sizes_ce0,
        q0 => sizes_q0);

    Dx_V_0_U : component calcLayerDetAndTreOg
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_0_V_address0,
        ce0 => Dx_V_0_ce0,
        q0 => Dx_V_0_q0);

    Dx_V_1_U : component calcLayerDetAndTrfYi
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_1_V_address0,
        ce0 => Dx_V_1_ce0,
        q0 => Dx_V_1_q0);

    Dx_V_2_U : component calcLayerDetAndTrg8j
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_2_V_address0,
        ce0 => Dx_V_2_ce0,
        q0 => Dx_V_2_q0);

    Dx_V_3_U : component calcLayerDetAndTrhbi
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_3_V_address0,
        ce0 => Dx_V_3_ce0,
        q0 => Dx_V_3_q0);

    Dx_V_4_U : component calcLayerDetAndTribs
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_4_V_address0,
        ce0 => Dx_V_4_ce0,
        q0 => Dx_V_4_q0);

    Dy_V_0_U : component calcLayerDetAndTrfYi
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_0_V_address0,
        ce0 => Dy_V_0_ce0,
        q0 => Dy_V_0_q0);

    Dy_V_1_U : component calcLayerDetAndTreOg
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_1_V_address0,
        ce0 => Dy_V_1_ce0,
        q0 => Dy_V_1_q0);

    Dy_V_2_U : component calcLayerDetAndTrhbi
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_2_V_address0,
        ce0 => Dy_V_2_ce0,
        q0 => Dy_V_2_q0);

    Dy_V_3_U : component calcLayerDetAndTrg8j
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_3_V_address0,
        ce0 => Dy_V_3_ce0,
        q0 => Dy_V_3_q0);

    Dy_V_4_U : component calcLayerDetAndTribs
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_calcHaarPattern_x_y_fu_466_box_4_V_address0,
        ce0 => Dy_V_4_ce0,
        q0 => Dy_V_4_q0);

    Dxy_V_2_U : component calcLayerDetAndTrocq
    generic map (
        DataWidth => 15,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Dxy_V_2_address0,
        ce0 => Dxy_V_2_ce0,
        q0 => Dxy_V_2_q0);

    Dxy_V_3_U : component calcLayerDetAndTrpcA
    generic map (
        DataWidth => 15,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Dxy_V_3_address0,
        ce0 => Dxy_V_3_ce0,
        q0 => Dxy_V_3_q0);

    Dxy_V_0_U : component calcLayerDetAndTrqcK
    generic map (
        DataWidth => 14,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Dxy_V_0_address0,
        ce0 => Dxy_V_0_ce0,
        q0 => Dxy_V_0_q0);

    Dxy_V_1_U : component calcLayerDetAndTrrcU
    generic map (
        DataWidth => 14,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Dxy_V_1_address0,
        ce0 => Dxy_V_1_ce0,
        q0 => Dxy_V_1_q0);

    Dxy_V_4_U : component calcLayerDetAndTrsc4
    generic map (
        DataWidth => 8,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Dxy_V_4_address0,
        ce0 => Dxy_V_4_ce0,
        q0 => Dxy_V_4_q0);

    grp_calcHaarPattern_x_y_fu_466 : component calcHaarPattern_x_y
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_calcHaarPattern_x_y_fu_466_ap_start,
        ap_done => grp_calcHaarPattern_x_y_fu_466_ap_done,
        ap_idle => grp_calcHaarPattern_x_y_fu_466_ap_idle,
        ap_ready => grp_calcHaarPattern_x_y_fu_466_ap_ready,
        sumBuf_address0 => grp_calcHaarPattern_x_y_fu_466_sumBuf_address0,
        sumBuf_ce0 => grp_calcHaarPattern_x_y_fu_466_sumBuf_ce0,
        sumBuf_q0 => sumBuf_q0,
        sumBuf_address1 => grp_calcHaarPattern_x_y_fu_466_sumBuf_address1,
        sumBuf_ce1 => grp_calcHaarPattern_x_y_fu_466_sumBuf_ce1,
        sumBuf_q1 => sumBuf_q1,
        box_0_V_address0 => grp_calcHaarPattern_x_y_fu_466_box_0_V_address0,
        box_0_V_ce0 => grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0,
        box_0_V_q0 => grp_calcHaarPattern_x_y_fu_466_box_0_V_q0,
        box_1_V_address0 => grp_calcHaarPattern_x_y_fu_466_box_1_V_address0,
        box_1_V_ce0 => grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0,
        box_1_V_q0 => grp_calcHaarPattern_x_y_fu_466_box_1_V_q0,
        box_2_V_address0 => grp_calcHaarPattern_x_y_fu_466_box_2_V_address0,
        box_2_V_ce0 => grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0,
        box_2_V_q0 => grp_calcHaarPattern_x_y_fu_466_box_2_V_q0,
        box_3_V_address0 => grp_calcHaarPattern_x_y_fu_466_box_3_V_address0,
        box_3_V_ce0 => grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0,
        box_3_V_q0 => grp_calcHaarPattern_x_y_fu_466_box_3_V_q0,
        box_4_V_address0 => grp_calcHaarPattern_x_y_fu_466_box_4_V_address0,
        box_4_V_ce0 => grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0,
        box_4_V_q0 => grp_calcHaarPattern_x_y_fu_466_box_4_V_q0,
        box_V_offset => k_i_i_i_i_i_i_i_reg_431,
        sumBufIndex_V => p_Val2_s_fu_196,
        rOffset => rOffset_reg_1514,
        cOffset => cOffset_reg_1498,
        ap_return => grp_calcHaarPattern_x_y_fu_466_ap_return);

    surf_Simplified_mtde_U35 : component surf_Simplified_mtde
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_57_i_i_i_fu_1421_p0,
        din1 => tmp_57_i_i_i_fu_1421_p1,
        dout => tmp_57_i_i_i_fu_1421_p2);

    surf_Simplified_mbkb_U36 : component surf_Simplified_mbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_81_reg_1637,
        din1 => tmp_64_i_i_i_fu_1427_p1,
        dout => tmp_64_i_i_i_fu_1427_p2);

    surf_Simplified_mbkb_U37 : component surf_Simplified_mbkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 16)
    port map (
        din0 => tmp_104_reg_1642,
        din1 => tmp_69_i_i_i_fu_1432_p1,
        dout => tmp_69_i_i_i_fu_1432_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_calcHaarPattern_x_y_fu_466_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_calcHaarPattern_x_y_fu_466_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((or_cond_i_i_i_i_i_i_s_fu_833_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                    grp_calcHaarPattern_x_y_fu_466_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_calcHaarPattern_x_y_fu_466_ap_ready = ap_const_logic_1)) then 
                    grp_calcHaarPattern_x_y_fu_466_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_i_i_i_i_i_i_i_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_i_i_i_fu_786_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                c_i_i_i_i_i_i_i_reg_420 <= c_reg_1480;
            elsif (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                c_i_i_i_i_i_i_i_reg_420 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    k_i_i_i_i_i_i_i_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                k_i_i_i_i_i_i_i_reg_431 <= k_reg_1488;
            elsif ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                k_i_i_i_i_i_i_i_reg_431 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    kn_i_i_i_i_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                kn_i_i_i_i_reg_455 <= kn_reg_1551;
            elsif (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                kn_i_i_i_i_reg_455 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_Val2_11_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_Val2_11_reg_443 <= d_V_fu_1344_p2;
            elsif (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                p_Val2_11_reg_443 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                if ((tmp_i_i_i_i_i_i_i_38_fu_532_p2 = ap_const_lv1_1)) then 
                    p_Val2_s_fu_196 <= p_Result_2_fu_729_p2;
                elsif ((tmp_i_i_i_i_i_i_i_38_fu_532_p2 = ap_const_lv1_0)) then 
                    p_Val2_s_fu_196 <= ret_V_fu_584_p3;
                end if;
            end if; 
        end if;
    end process;

    rIndex_i_i_i_i_i_i_i_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                rIndex_i_i_i_i_i_i_i_reg_397 <= rIndex_1_reg_1454;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                rIndex_i_i_i_i_i_i_i_reg_397 <= ap_const_lv32_FFFFFFFF;
            end if; 
        end if;
    end process;

    val_assign_i_i_i_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                val_assign_i_i_i_reg_408 <= r_reg_1449;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                val_assign_i_i_i_reg_408 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                Dxy_V_4_load_reg_1632 <= Dxy_V_4_q0;
                tmp_59_reg_1586 <= Dxy_V_2_q0(14 downto 10);
                tmp_64_reg_1591 <= tmp_64_fu_969_p1;
                tmp_65_reg_1596 <= tmp_65_fu_985_p2;
                    tmp_67_reg_1603(7 downto 3) <= tmp_67_fu_991_p1(7 downto 3);
                tmp_82_reg_1609 <= Dxy_V_0_q0(13 downto 10);
                tmp_87_reg_1614 <= tmp_87_fu_1051_p1;
                tmp_88_reg_1619 <= tmp_88_fu_1067_p2;
                    tmp_90_reg_1626(7 downto 3) <= tmp_90_fu_1073_p1(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_i_i_i_i_i_i_38_fu_532_p2 = ap_const_lv1_0) and (exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                MSB_V <= p_Result_3_fu_546_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                cOffset_reg_1498 <= cOffset_fu_815_p2;
                or_cond_i_i_i_i_i_i_s_reg_1505 <= or_cond_i_i_i_i_i_i_s_fu_833_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    c_cast_i_i_i_i_i_i_i_reg_1472(9 downto 0) <= c_cast_i_i_i_i_i_i_i_fu_756_p1(9 downto 0);
                c_reg_1480 <= c_fu_766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                k_reg_1488 <= k_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                kn_reg_1551 <= kn_fu_879_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                rIndex_1_reg_1454 <= rIndex_1_fu_524_p3;
                tmp_57_i_i_i_reg_1462 <= tmp_57_i_i_i_fu_1421_p2;
                    val_assign_cast_i_i_reg_1467(4 downto 0) <= val_assign_cast_i_i_fu_752_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_i_i_i_i_i_i_s_fu_833_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                rOffset_reg_1514 <= rOffset_fu_839_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_i_i_i_fu_873_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    r_V_6_reg_1581(42 downto 1) <= r_V_6_fu_907_p2(42 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                r_V_8_reg_1703 <= r_V_8_fu_1355_p2;
                    r_V_9_reg_1708(72 downto 1) <= r_V_9_fu_1368_p2(72 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                r_V_i_i_i_i_reg_1693 <= r_V_i_i_i_i_fu_1339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                r_reg_1449 <= r_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_104_reg_1642 <= tmp_104_fu_1253_p1;
                tmp_81_reg_1637 <= tmp_81_fu_1163_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                tmp_1_i_cast_i_i_i_reg_1542 <= tmp_1_i_cast_i_i_i_fu_869_p1;
                tmp_27_i_i_i_i1_i_i_s_reg_1526 <= grp_calcHaarPattern_x_y_fu_466_ap_return;
                    tmp_60_cast_i_i_i_reg_1531(3 downto 2) <= tmp_60_cast_i_i_i_fu_853_p1(3 downto 2);
                tmp_i_cast1_i_i_i_reg_1536 <= tmp_i_cast1_i_i_i_fu_857_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_20_i_i_i_i_reg_1683 <= tmp_20_i_i_i_i_fu_1319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_26_i_i_i_i2_i_i_s_reg_1521 <= grp_calcHaarPattern_x_y_fu_466_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                tmp_64_i_i_i_reg_1647 <= tmp_64_i_i_i_fu_1427_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                tmp_70_i_i_i_reg_1663 <= tmp_70_i_i_i_fu_1301_p2;
                tmp_71_i_i_i_reg_1668 <= tmp_71_i_i_i_fu_1306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                tmp_V_reg_1688 <= tmp_V_fu_1330_p2;
            end if;
        end if;
    end process;
    val_assign_cast_i_i_reg_1467(5) <= '0';
    c_cast_i_i_i_i_i_i_i_reg_1472(10) <= '0';
    tmp_60_cast_i_i_i_reg_1531(1 downto 0) <= "00";
    tmp_60_cast_i_i_i_reg_1531(4) <= '0';
    r_V_6_reg_1581(0) <= '0';
    tmp_67_reg_1603(2 downto 0) <= "111";
    tmp_90_reg_1626(2 downto 0) <= "111";
    r_V_9_reg_1708(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, det0_V_V_full_n, det1_V_V3_full_n, det2_V_V6_full_n, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n, sum_V_empty_n, ap_CS_fsm_state19, ap_CS_fsm_state3, exitcond2_i_i_i_i_i_s_fu_760_p2, ap_CS_fsm_state2, exitcond1_i_i_i_i_i_s_fu_500_p2, ap_CS_fsm_state4, exitcond_i_i_i_i_i_i_fu_786_p2, ap_CS_fsm_state5, or_cond_i_i_i_i_i_i_s_fu_833_p2, ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state9, exitcond_i_i_i_i_fu_873_p2, ap_predicate_op330_write_state19, ap_predicate_op332_write_state19, ap_predicate_op334_write_state19)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond_i_i_i_i_i_i_fu_786_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((or_cond_i_i_i_i_i_i_s_fu_833_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_calcHaarPattern_x_y_fu_466_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((exitcond_i_i_i_i_fu_873_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if ((not((((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    Dx_V_0_ce0_assign_proc : process(ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Dx_V_0_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0;
        else 
            Dx_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dx_V_1_ce0_assign_proc : process(ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Dx_V_1_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0;
        else 
            Dx_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dx_V_2_ce0_assign_proc : process(ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Dx_V_2_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0;
        else 
            Dx_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dx_V_3_ce0_assign_proc : process(ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Dx_V_3_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0;
        else 
            Dx_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dx_V_4_ce0_assign_proc : process(ap_CS_fsm_state6, grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            Dx_V_4_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0;
        else 
            Dx_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Dxy_V_0_address0 <= tmp_61_cast_i_i_i_fu_894_p1(4 - 1 downto 0);

    Dxy_V_0_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Dxy_V_0_ce0 <= ap_const_logic_1;
        else 
            Dxy_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Dxy_V_1_address0 <= tmp_61_cast_i_i_i_fu_894_p1(4 - 1 downto 0);

    Dxy_V_1_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Dxy_V_1_ce0 <= ap_const_logic_1;
        else 
            Dxy_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Dxy_V_2_address0 <= tmp_61_cast_i_i_i_fu_894_p1(4 - 1 downto 0);

    Dxy_V_2_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Dxy_V_2_ce0 <= ap_const_logic_1;
        else 
            Dxy_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Dxy_V_3_address0 <= tmp_61_cast_i_i_i_fu_894_p1(4 - 1 downto 0);

    Dxy_V_3_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Dxy_V_3_ce0 <= ap_const_logic_1;
        else 
            Dxy_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Dxy_V_4_address0 <= tmp_61_cast_i_i_i_fu_894_p1(4 - 1 downto 0);

    Dxy_V_4_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Dxy_V_4_ce0 <= ap_const_logic_1;
        else 
            Dxy_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dy_V_0_ce0_assign_proc : process(ap_CS_fsm_state8, grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Dy_V_0_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_0_V_ce0;
        else 
            Dy_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dy_V_1_ce0_assign_proc : process(ap_CS_fsm_state8, grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Dy_V_1_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_1_V_ce0;
        else 
            Dy_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dy_V_2_ce0_assign_proc : process(ap_CS_fsm_state8, grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Dy_V_2_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_2_V_ce0;
        else 
            Dy_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dy_V_3_ce0_assign_proc : process(ap_CS_fsm_state8, grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Dy_V_3_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_3_V_ce0;
        else 
            Dy_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Dy_V_4_ce0_assign_proc : process(ap_CS_fsm_state8, grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            Dy_V_4_ce0 <= grp_calcHaarPattern_x_y_fu_466_box_4_V_ce0;
        else 
            Dy_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        Hi_assign_1_cast_i_i_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Hi_assign_1_i_i_i_fu_954_p2),32));

    Hi_assign_1_i_i_i_fu_954_p2 <= std_logic_vector(signed(tmp_7_i_cast_i_i_i_fu_950_p1) + signed(ap_const_lv27_7FFFFFF));
        Hi_assign_2_cast_i_i_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(Hi_assign_2_i_i_i_fu_1036_p2),32));

    Hi_assign_2_i_i_i_fu_1036_p2 <= std_logic_vector(signed(tmp_16_i_cast_i_i_i_fu_1032_p1) + signed(ap_const_lv27_7FFFFFF));
    Hi_assign_i_i_i_fu_605_p2 <= (ap_const_lv8_7 or Lo_assign_i_i_i_fu_597_p3);
        Lo_assign_1_i_i_i_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_63_i_i_i_fu_973_p3),32));

        Lo_assign_2_i_i_i_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_68_i_i_i_fu_1055_p3),32));

    Lo_assign_i_i_i_fu_597_p3 <= (tmp_fu_496_p1 & ap_const_lv3_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state19_assign_proc : process(det0_V_V_full_n, det1_V_V3_full_n, det2_V_V6_full_n, ap_predicate_op330_write_state19, ap_predicate_op332_write_state19, ap_predicate_op334_write_state19)
    begin
                ap_block_state19 <= (((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(sum_V_empty_n, exitcond2_i_i_i_i_i_s_fu_760_p2)
    begin
                ap_block_state3 <= ((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, exitcond1_i_i_i_i_i_s_fu_500_p2)
    begin
        if (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op330_write_state19_assign_proc : process(or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
                ap_predicate_op330_write_state19 <= ((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_2) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1));
    end process;


    ap_predicate_op332_write_state19_assign_proc : process(or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
                ap_predicate_op332_write_state19 <= ((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_1) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1));
    end process;


    ap_predicate_op334_write_state19_assign_proc : process(or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
                ap_predicate_op334_write_state19 <= ((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_0) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    cOffset_fu_815_p2 <= std_logic_vector(unsigned(c_cast_i_i_i_i_i_i_i_reg_1472) - unsigned(sizes_load_cast2_i_i_fu_807_p1));
    c_cast_i_i_i_i_i_i_i_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i_i_i_i_i_i_i_reg_420),11));
    c_fu_766_p2 <= std_logic_vector(unsigned(c_i_i_i_i_i_i_i_reg_420) + unsigned(ap_const_lv10_1));
    d_V_fu_1344_p2 <= std_logic_vector(signed(p_Val2_11_reg_443) + signed(r_V_i_i_i_i_reg_1693));

    det0_V_V_blk_n_assign_proc : process(det0_V_V_full_n, ap_CS_fsm_state19, or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
        if (((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_0) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det0_V_V_blk_n <= det0_V_V_full_n;
        else 
            det0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    det0_V_V_din <= p_Val2_12_fu_1412_p2;

    det0_V_V_write_assign_proc : process(det0_V_V_full_n, det1_V_V3_full_n, det2_V_V6_full_n, ap_CS_fsm_state19, ap_predicate_op330_write_state19, ap_predicate_op332_write_state19, ap_predicate_op334_write_state19)
    begin
        if ((not((((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)))) and (ap_predicate_op334_write_state19 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det0_V_V_write <= ap_const_logic_1;
        else 
            det0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    det1_V_V3_blk_n_assign_proc : process(det1_V_V3_full_n, ap_CS_fsm_state19, or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
        if (((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_1) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det1_V_V3_blk_n <= det1_V_V3_full_n;
        else 
            det1_V_V3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    det1_V_V3_din <= p_Val2_12_fu_1412_p2;

    det1_V_V3_write_assign_proc : process(det0_V_V_full_n, det1_V_V3_full_n, det2_V_V6_full_n, ap_CS_fsm_state19, ap_predicate_op330_write_state19, ap_predicate_op332_write_state19, ap_predicate_op334_write_state19)
    begin
        if ((not((((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)))) and (ap_predicate_op332_write_state19 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det1_V_V3_write <= ap_const_logic_1;
        else 
            det1_V_V3_write <= ap_const_logic_0;
        end if; 
    end process;


    det2_V_V6_blk_n_assign_proc : process(det2_V_V6_full_n, ap_CS_fsm_state19, or_cond_i_i_i_i_i_i_s_reg_1505, k_i_i_i_i_i_i_i_reg_431)
    begin
        if (((k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_2) and (or_cond_i_i_i_i_i_i_s_reg_1505 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det2_V_V6_blk_n <= det2_V_V6_full_n;
        else 
            det2_V_V6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    det2_V_V6_din <= p_Val2_12_fu_1412_p2;

    det2_V_V6_write_assign_proc : process(det0_V_V_full_n, det1_V_V3_full_n, det2_V_V6_full_n, ap_CS_fsm_state19, ap_predicate_op330_write_state19, ap_predicate_op332_write_state19, ap_predicate_op334_write_state19)
    begin
        if ((not((((ap_predicate_op334_write_state19 = ap_const_boolean_1) and (det0_V_V_full_n = ap_const_logic_0)) or ((ap_predicate_op332_write_state19 = ap_const_boolean_1) and (det1_V_V3_full_n = ap_const_logic_0)) or ((ap_predicate_op330_write_state19 = ap_const_boolean_1) and (det2_V_V6_full_n = ap_const_logic_0)))) and (ap_predicate_op330_write_state19 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            det2_V_V6_write <= ap_const_logic_1;
        else 
            det2_V_V6_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_i_i_i_i_i_s_fu_500_p2 <= "1" when (val_assign_i_i_i_reg_408 = ap_const_lv10_259) else "0";
    exitcond2_i_i_i_i_i_s_fu_760_p2 <= "1" when (c_i_i_i_i_i_i_i_reg_420 = ap_const_lv10_321) else "0";
    exitcond_i_i_i_i_fu_873_p2 <= "1" when (kn_i_i_i_i_reg_455 = ap_const_lv3_4) else "0";
    exitcond_i_i_i_i_i_i_fu_786_p2 <= "1" when (k_i_i_i_i_i_i_i_reg_431 = ap_const_lv2_3) else "0";
    grp_calcHaarPattern_x_y_fu_466_ap_start <= grp_calcHaarPattern_x_y_fu_466_ap_start_reg;

    grp_calcHaarPattern_x_y_fu_466_box_0_V_q0_assign_proc : process(Dx_V_0_q0, Dy_V_0_q0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_calcHaarPattern_x_y_fu_466_box_0_V_q0 <= Dy_V_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_calcHaarPattern_x_y_fu_466_box_0_V_q0 <= Dx_V_0_q0;
        else 
            grp_calcHaarPattern_x_y_fu_466_box_0_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_calcHaarPattern_x_y_fu_466_box_1_V_q0_assign_proc : process(Dx_V_1_q0, Dy_V_1_q0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_calcHaarPattern_x_y_fu_466_box_1_V_q0 <= Dy_V_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_calcHaarPattern_x_y_fu_466_box_1_V_q0 <= Dx_V_1_q0;
        else 
            grp_calcHaarPattern_x_y_fu_466_box_1_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_calcHaarPattern_x_y_fu_466_box_2_V_q0_assign_proc : process(Dx_V_2_q0, Dy_V_2_q0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_calcHaarPattern_x_y_fu_466_box_2_V_q0 <= Dy_V_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_calcHaarPattern_x_y_fu_466_box_2_V_q0 <= Dx_V_2_q0;
        else 
            grp_calcHaarPattern_x_y_fu_466_box_2_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_calcHaarPattern_x_y_fu_466_box_3_V_q0_assign_proc : process(Dx_V_3_q0, Dy_V_3_q0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_calcHaarPattern_x_y_fu_466_box_3_V_q0 <= Dy_V_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_calcHaarPattern_x_y_fu_466_box_3_V_q0 <= Dx_V_3_q0;
        else 
            grp_calcHaarPattern_x_y_fu_466_box_3_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_calcHaarPattern_x_y_fu_466_box_4_V_q0_assign_proc : process(Dx_V_4_q0, Dy_V_4_q0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_calcHaarPattern_x_y_fu_466_box_4_V_q0 <= Dy_V_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_calcHaarPattern_x_y_fu_466_box_4_V_q0 <= Dx_V_4_q0;
        else 
            grp_calcHaarPattern_x_y_fu_466_box_4_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond1_i_i_i_i_i_s_fu_500_p2)
    begin
        if (((exitcond1_i_i_i_i_i_s_fu_500_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    k_fu_792_p2 <= std_logic_vector(unsigned(k_i_i_i_i_i_i_i_reg_431) + unsigned(ap_const_lv2_1));

    keyPoints_V_offset_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, keyPoints_V_offset_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keyPoints_V_offset_blk_n <= keyPoints_V_offset_empty_n;
        else 
            keyPoints_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    keyPoints_V_offset_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, keyPoints_V_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keyPoints_V_offset_out_blk_n <= keyPoints_V_offset_out_full_n;
        else 
            keyPoints_V_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    keyPoints_V_offset_out_din <= keyPoints_V_offset_dout;

    keyPoints_V_offset_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keyPoints_V_offset_out_write <= ap_const_logic_1;
        else 
            keyPoints_V_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;


    keyPoints_V_offset_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            keyPoints_V_offset_read <= ap_const_logic_1;
        else 
            keyPoints_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    kn_fu_879_p2 <= std_logic_vector(unsigned(kn_i_i_i_i_reg_455) + unsigned(ap_const_lv3_1));
    lhs_V_fu_1374_p3 <= (r_V_8_reg_1703 & ap_const_lv10_0);
    or_cond_i_i_i_i_i_i_s_fu_833_p2 <= (tmp_25_i_i_i_i_i_i_i_fu_827_p2 and tmp_22_i_i_i_i_i_i_i_fu_821_p2);
    p_Result_1_fu_1247_p2 <= (tmp_102_fu_1241_p2 and tmp_101_fu_1235_p2);
    p_Result_2_fu_729_p2 <= (tmp_52_fu_723_p2 or tmp_51_fu_717_p2);
    p_Result_3_fu_546_p5 <= (tmp_54_fu_538_p1 & MSB_V(167 downto 0));
    p_Result_s_fu_1157_p2 <= (tmp_79_fu_1151_p2 and tmp_78_fu_1145_p2);
    p_Val2_12_fu_1412_p2 <= std_logic_vector(unsigned(tmp_35_cast_i_i_i_i_s_fu_1408_p1) + unsigned(p_Val2_5_fu_1390_p4));
    p_Val2_5_fu_1390_p4 <= ret_V_1_fu_1384_p2(51 downto 20);
    p_demorgan_fu_705_p2 <= (tmp_49_fu_699_p2 and tmp_48_fu_693_p2);

    pointNumber_offset_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, pointNumber_offset_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pointNumber_offset_blk_n <= pointNumber_offset_empty_n;
        else 
            pointNumber_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    pointNumber_offset_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pointNumber_offset_out_blk_n <= pointNumber_offset_out_full_n;
        else 
            pointNumber_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pointNumber_offset_out_din <= pointNumber_offset_dout;

    pointNumber_offset_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pointNumber_offset_out_write <= ap_const_logic_1;
        else 
            pointNumber_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;


    pointNumber_offset_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            pointNumber_offset_read <= ap_const_logic_1;
        else 
            pointNumber_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    rIndex_1_fu_524_p3 <= 
        rIndex_fu_518_p2 when (tmp_i_i_i_i_i_i_i_fu_512_p2(0) = '1') else 
        ap_const_lv32_0;
    rIndex_fu_518_p2 <= std_logic_vector(unsigned(rIndex_i_i_i_i_i_i_i_reg_397) + unsigned(ap_const_lv32_1));
    rOffset_fu_839_p2 <= std_logic_vector(unsigned(val_assign_cast_i_i_reg_1467) - unsigned(sizes_load_cast3_i_i_fu_803_p1));
    r_V_6_fu_907_p0 <= p_Val2_11_reg_443;
    r_V_6_fu_907_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_fu_907_p0) * signed('0' &ap_const_lv43_39A))), 43));
    r_V_8_fu_1355_p0 <= tmp_27_i_i_i_i1_i_i_s_reg_1526;
    r_V_8_fu_1355_p1 <= tmp_26_i_i_i_i2_i_i_s_reg_1521;
    r_V_8_fu_1355_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_fu_1355_p0) * signed(r_V_8_fu_1355_p1))), 64));
    r_V_8_i_i_i_fu_564_p4 <= p_Val2_s_fu_196(175 downto 8);
    r_V_9_fu_1368_p0 <= p_Val2_11_reg_443;
    r_V_9_fu_1368_p1 <= r_V_6_reg_1581;
    r_V_9_fu_1368_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_9_fu_1368_p0) * signed(r_V_9_fu_1368_p1))), 73));
    r_V_i_i_i_i_fu_1339_p1 <= Dxy_V_4_load_reg_1632;
    r_V_i_i_i_i_fu_1339_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_V_reg_1688) * signed(r_V_i_i_i_i_fu_1339_p1))), 32));
    r_fu_506_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(val_assign_i_i_i_reg_408));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_1384_p2 <= std_logic_vector(unsigned(lhs_V_fu_1374_p3) - unsigned(rhs_V_1_cast_i_i_i_i_fu_1381_p1));
    ret_V_fu_584_p3 <= (tmp_54_fu_538_p1 & tmp_55_i_i_i_fu_578_p2);
        rhs_V_1_cast_i_i_i_i_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_9_reg_1708),74));

    sizes_address0 <= tmp_21_i_i_i_i_i_i_i_fu_798_p1(2 - 1 downto 0);

    sizes_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            sizes_ce0 <= ap_const_logic_1;
        else 
            sizes_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sizes_load_cast2_i_i_1_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sizes_q0),10));
    sizes_load_cast2_i_i_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sizes_q0),11));
    sizes_load_cast3_i_i_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sizes_q0),6));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_calcHaarPattern_x_y_fu_466_sumBuf_address0, tmp_58_cast_i_i_i_fu_781_p1, tmp_65_cast_i_i_i_fu_1274_p1, tmp_71_cast_i_i_i_fu_1315_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            sumBuf_address0 <= tmp_71_cast_i_i_i_fu_1315_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            sumBuf_address0 <= tmp_65_cast_i_i_i_fu_1274_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            sumBuf_address0 <= tmp_58_cast_i_i_i_fu_781_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sumBuf_address0 <= grp_calcHaarPattern_x_y_fu_466_sumBuf_address0;
        else 
            sumBuf_address0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    sumBuf_address1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_calcHaarPattern_x_y_fu_466_sumBuf_address1, tmp_66_cast_i_i_i_fu_1296_p1, tmp_70_cast_i_i_i_fu_1311_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            sumBuf_address1 <= tmp_70_cast_i_i_i_fu_1311_p1(15 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            sumBuf_address1 <= tmp_66_cast_i_i_i_fu_1296_p1(15 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sumBuf_address1 <= grp_calcHaarPattern_x_y_fu_466_sumBuf_address1;
        else 
            sumBuf_address1 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    sumBuf_ce0_assign_proc : process(sum_V_empty_n, ap_CS_fsm_state3, exitcond2_i_i_i_i_i_s_fu_760_p2, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_calcHaarPattern_x_y_fu_466_sumBuf_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            sumBuf_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sumBuf_ce0 <= grp_calcHaarPattern_x_y_fu_466_sumBuf_ce0;
        else 
            sumBuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state13, ap_CS_fsm_state14, grp_calcHaarPattern_x_y_fu_466_sumBuf_ce1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            sumBuf_ce1 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sumBuf_ce1 <= grp_calcHaarPattern_x_y_fu_466_sumBuf_ce1;
        else 
            sumBuf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_we0_assign_proc : process(sum_V_empty_n, ap_CS_fsm_state3, exitcond2_i_i_i_i_i_s_fu_760_p2)
    begin
        if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sumBuf_we0 <= ap_const_logic_1;
        else 
            sumBuf_we0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_V_blk_n_assign_proc : process(sum_V_empty_n, ap_CS_fsm_state3, exitcond2_i_i_i_i_i_s_fu_760_p2)
    begin
        if (((exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sum_V_blk_n <= sum_V_empty_n;
        else 
            sum_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sum_V_read_assign_proc : process(sum_V_empty_n, ap_CS_fsm_state3, exitcond2_i_i_i_i_i_s_fu_760_p2)
    begin
        if ((not(((sum_V_empty_n = ap_const_logic_0) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0))) and (exitcond2_i_i_i_i_i_s_fu_760_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            sum_V_read <= ap_const_logic_1;
        else 
            sum_V_read <= ap_const_logic_0;
        end if; 
    end process;


    this_assign_1_reload_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            this_assign_1_reload_blk_n <= this_assign_1_reload_empty_n;
        else 
            this_assign_1_reload_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    this_assign_1_reload_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            this_assign_1_reload_out_blk_n <= this_assign_1_reload_out_full_n;
        else 
            this_assign_1_reload_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    this_assign_1_reload_out_din <= this_assign_1_reload_dout;

    this_assign_1_reload_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            this_assign_1_reload_out_write <= ap_const_logic_1;
        else 
            this_assign_1_reload_out_write <= ap_const_logic_0;
        end if; 
    end process;


    this_assign_1_reload_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, this_assign_1_reload_empty_n, this_assign_1_reload_out_full_n, keyPoints_V_offset_empty_n, pointNumber_offset_empty_n, keyPoints_V_offset_out_full_n, pointNumber_offset_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (pointNumber_offset_out_full_n = ap_const_logic_0) or (keyPoints_V_offset_out_full_n = ap_const_logic_0) or (pointNumber_offset_empty_n = ap_const_logic_0) or (keyPoints_V_offset_empty_n = ap_const_logic_0) or (this_assign_1_reload_out_full_n = ap_const_logic_0) or (this_assign_1_reload_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            this_assign_1_reload_read <= ap_const_logic_1;
        else 
            this_assign_1_reload_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_100_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_fu_1221_p2),176));
    tmp_101_fu_1235_p2 <= std_logic_vector(shift_right(unsigned(tmp_96_fu_1207_p3),to_integer(unsigned('0' & tmp_99_fu_1227_p1(31-1 downto 0)))));
    tmp_102_fu_1241_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_100_fu_1231_p1(31-1 downto 0)))));
    tmp_104_fu_1253_p1 <= p_Result_1_fu_1247_p2(16 - 1 downto 0);
    tmp_13_i_cast_i_i_i_fu_1015_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_1005_p4),23));
    tmp_14_i_i_i_i_fu_1019_p2 <= std_logic_vector(unsigned(tmp_13_i_cast_i_i_i_fu_1015_p1) + unsigned(tmp_1_i_cast_i_i_i_reg_1542));
        tmp_16_i_cast_i_i_i_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_67_i_i_i_fu_1024_p3),27));

    tmp_17_i_i_i_i_fu_1046_p2 <= std_logic_vector(signed(tmp_i_cast1_i_i_i_reg_1536) + signed(tmp_13_i_cast_i_i_i_fu_1015_p1));
    tmp_19_i_i_i_i_cast_s_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_i_i_i_i_i_i_i_reg_420),16));
        tmp_1_i_cast_i_i_i_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_i_i_i_i_fu_863_p2),23));

    tmp_1_i_i_i_i_fu_863_p2 <= std_logic_vector(signed(tmp_i_cast_i_i_i_fu_860_p1) + signed(ap_const_lv7_1));
    tmp_20_i_i_i_i_fu_1319_p2 <= std_logic_vector(unsigned(sumBuf_q0) - unsigned(sumBuf_q1));
    tmp_21_i_i_i_i_fu_1325_p2 <= std_logic_vector(unsigned(tmp_20_i_i_i_i_reg_1683) - unsigned(sumBuf_q1));
    tmp_21_i_i_i_i_i_i_i_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_i_i_i_i_i_i_i_reg_431),64));
    tmp_22_i_i_i_i_i_i_i_fu_821_p2 <= "1" when (unsigned(val_assign_i_i_i_reg_408) > unsigned(sizes_load_cast2_i_i_1_fu_811_p1)) else "0";
    tmp_25_i_i_i_i_i_i_i_fu_827_p2 <= "1" when (signed(cOffset_fu_815_p2) > signed(ap_const_lv11_0)) else "0";
    tmp_35_cast_i_i_i_i_s_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1400_p3),32));
    tmp_36_fu_615_p2 <= "1" when (unsigned(Lo_assign_i_i_i_fu_597_p3) > unsigned(Hi_assign_i_i_i_fu_605_p2)) else "0";
    tmp_37_fu_621_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(Lo_assign_i_i_i_fu_597_p3));
    tmp_38_fu_627_p3 <= 
        Lo_assign_i_i_i_fu_597_p3 when (tmp_36_fu_615_p2(0) = '1') else 
        Hi_assign_i_i_i_fu_605_p2;
    tmp_39_fu_635_p3 <= 
        Hi_assign_i_i_i_fu_605_p2 when (tmp_36_fu_615_p2(0) = '1') else 
        Lo_assign_i_i_i_fu_597_p3;
    tmp_40_fu_643_p3 <= 
        tmp_37_fu_621_p2 when (tmp_36_fu_615_p2(0) = '1') else 
        Lo_assign_i_i_i_fu_597_p3;
    tmp_41_fu_651_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_38_fu_627_p3));
    tmp_42_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_643_p3),176));
    tmp_43_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_fu_635_p3),176));
    tmp_44_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_651_p2),176));
    tmp_45_fu_669_p2 <= std_logic_vector(shift_left(unsigned(tmp_V_4_fu_611_p1),to_integer(unsigned('0' & tmp_42_fu_657_p1(31-1 downto 0)))));
    
    tmp_46_fu_675_p4_proc : process(tmp_45_fu_669_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_46_fu_675_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := tmp_45_fu_669_p2;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_46_fu_675_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_46_fu_675_p4_i) := tmp_45_fu_669_p2(176-1-tmp_46_fu_675_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_46_fu_675_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_47_fu_685_p3 <= 
        tmp_46_fu_675_p4 when (tmp_36_fu_615_p2(0) = '1') else 
        tmp_45_fu_669_p2;
    tmp_48_fu_693_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_43_fu_661_p1(31-1 downto 0)))));
    tmp_49_fu_699_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_44_fu_665_p1(31-1 downto 0)))));
    tmp_4_i_cast_i_i_i_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_923_p4),23));
    tmp_50_fu_711_p2 <= (p_demorgan_fu_705_p2 xor ap_const_lv176_lc_1);
    tmp_51_fu_717_p2 <= (tmp_50_fu_711_p2 and p_Val2_s_fu_196);
    tmp_52_fu_723_p2 <= (tmp_47_fu_685_p3 and p_demorgan_fu_705_p2);
    tmp_54_fu_538_p1 <= p_Val2_s_fu_196(8 - 1 downto 0);
    tmp_55_fu_574_p1 <= MSB_V(168 - 1 downto 0);
    tmp_55_i_i_i_fu_578_p2 <= (tmp_55_fu_574_p1 or r_V_8_i_i_i_fu_564_p4);
    tmp_57_i_i_i_fu_1421_p0 <= ap_const_lv16_321(11 - 1 downto 0);
    tmp_57_i_i_i_fu_1421_p1 <= rIndex_1_fu_524_p3(16 - 1 downto 0);
        tmp_58_cast_i_i_i_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_58_i_i_i_fu_776_p2),64));

    tmp_58_fu_1400_p3 <= ret_V_1_fu_1384_p2(19 downto 19);
    tmp_58_i_i_i_fu_776_p2 <= std_logic_vector(signed(tmp_57_i_i_i_reg_1462) + signed(tmp_19_i_i_i_i_cast_s_fu_772_p1));
    tmp_59_i_i_i_fu_845_p3 <= (k_i_i_i_i_i_i_i_reg_431 & ap_const_lv2_0);
    tmp_5_i_i_i_i_fu_937_p2 <= std_logic_vector(unsigned(tmp_4_i_cast_i_i_i_fu_933_p1) + unsigned(tmp_1_i_cast_i_i_i_reg_1542));
    tmp_60_cast_i_i_i_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_i_i_i_fu_845_p3),5));
    tmp_60_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cOffset_reg_1498),16));
    tmp_61_cast_i_i_i_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_i_i_i_fu_889_p2),64));
    tmp_61_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_reg_1586),16));
    tmp_61_i_i_i_fu_889_p2 <= std_logic_vector(unsigned(tmp_60_cast_i_i_i_reg_1531) + unsigned(tmp_i_cast_i_i_i_39_fu_885_p1));
    tmp_62_fu_1263_p2 <= std_logic_vector(unsigned(tmp_60_fu_1257_p1) + unsigned(tmp_61_fu_1260_p1));
    tmp_62_i_i_i_fu_942_p3 <= (tmp_5_i_i_i_i_fu_937_p2 & ap_const_lv3_0);
    tmp_63_fu_923_p4 <= Dxy_V_3_q0(14 downto 10);
    tmp_63_i_i_i_fu_973_p3 <= (tmp_8_i_i_i_i_fu_964_p2 & ap_const_lv3_0);
    tmp_64_fu_969_p1 <= tmp_8_i_i_i_i_fu_964_p2(5 - 1 downto 0);
    tmp_64_i_i_i_fu_1427_p1 <= ap_const_lv16_321(11 - 1 downto 0);
    tmp_65_cast_i_i_i_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_i_i_i_fu_1269_p2),64));
    tmp_65_fu_985_p2 <= "1" when (unsigned(Lo_assign_1_i_i_i_fu_981_p1) > unsigned(Hi_assign_1_cast_i_i_fu_960_p1)) else "0";
    tmp_65_i_i_i_fu_1269_p2 <= std_logic_vector(signed(tmp_64_i_i_i_reg_1647) + signed(tmp_62_fu_1263_p2));
    tmp_66_cast_i_i_i_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_i_i_i_fu_1291_p2),64));
    tmp_66_fu_1077_p3 <= (tmp_64_reg_1591 & ap_const_lv3_0);
    tmp_66_i_i_i_fu_1291_p2 <= std_logic_vector(signed(tmp_64_i_i_i_reg_1647) + signed(tmp_85_fu_1285_p2));
    tmp_67_fu_991_p1 <= Hi_assign_1_i_i_i_fu_954_p2(8 - 1 downto 0);
    tmp_67_i_i_i_fu_1024_p3 <= (tmp_14_i_i_i_i_fu_1019_p2 & ap_const_lv3_0);
    
    tmp_68_fu_1084_p4_proc : process(p_Val2_s_fu_196)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_68_fu_1084_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_196;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_68_fu_1084_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_68_fu_1084_p4_i) := p_Val2_s_fu_196(176-1-tmp_68_fu_1084_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_68_fu_1084_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_68_i_i_i_fu_1055_p3 <= (tmp_17_i_i_i_i_fu_1046_p2 & ap_const_lv3_0);
    tmp_69_fu_1094_p2 <= std_logic_vector(unsigned(tmp_66_fu_1077_p3) - unsigned(tmp_67_reg_1603));
    tmp_69_i_i_i_fu_1432_p1 <= ap_const_lv16_321(11 - 1 downto 0);
    tmp_70_cast_i_i_i_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_i_i_i_reg_1663),64));
    tmp_70_fu_1099_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_66_fu_1077_p3));
    tmp_70_i_i_i_fu_1301_p2 <= std_logic_vector(signed(tmp_69_i_i_i_fu_1432_p2) + signed(tmp_62_fu_1263_p2));
    tmp_71_cast_i_i_i_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_i_i_i_reg_1668),64));
    tmp_71_fu_1105_p2 <= std_logic_vector(unsigned(tmp_67_reg_1603) - unsigned(tmp_66_fu_1077_p3));
    tmp_71_i_i_i_fu_1306_p2 <= std_logic_vector(signed(tmp_69_i_i_i_fu_1432_p2) + signed(tmp_85_fu_1285_p2));
    tmp_72_fu_1110_p3 <= 
        tmp_69_fu_1094_p2 when (tmp_65_reg_1596(0) = '1') else 
        tmp_71_fu_1105_p2;
    tmp_73_fu_1117_p3 <= 
        tmp_68_fu_1084_p4 when (tmp_65_reg_1596(0) = '1') else 
        p_Val2_s_fu_196;
    tmp_74_fu_1124_p3 <= 
        tmp_70_fu_1099_p2 when (tmp_65_reg_1596(0) = '1') else 
        tmp_66_fu_1077_p3;
    tmp_75_fu_1131_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_72_fu_1110_p3));
    tmp_76_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_1124_p3),176));
    tmp_77_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_75_fu_1131_p2),176));
    tmp_78_fu_1145_p2 <= std_logic_vector(shift_right(unsigned(tmp_73_fu_1117_p3),to_integer(unsigned('0' & tmp_76_fu_1137_p1(31-1 downto 0)))));
    tmp_79_fu_1151_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_77_fu_1141_p1(31-1 downto 0)))));
        tmp_7_i_cast_i_i_i_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_62_i_i_i_fu_942_p3),27));

    tmp_81_fu_1163_p1 <= p_Result_s_fu_1157_p2(16 - 1 downto 0);
    tmp_83_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cOffset_reg_1498),16));
    tmp_84_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_reg_1609),16));
    tmp_85_fu_1285_p2 <= std_logic_vector(unsigned(tmp_83_fu_1279_p1) + unsigned(tmp_84_fu_1282_p1));
    tmp_86_fu_1005_p4 <= Dxy_V_1_q0(13 downto 10);
    tmp_87_fu_1051_p1 <= tmp_17_i_i_i_i_fu_1046_p2(5 - 1 downto 0);
    tmp_88_fu_1067_p2 <= "1" when (unsigned(Lo_assign_2_i_i_i_fu_1063_p1) > unsigned(Hi_assign_2_cast_i_i_fu_1042_p1)) else "0";
    tmp_89_fu_1167_p3 <= (tmp_87_reg_1614 & ap_const_lv3_0);
    tmp_8_i_i_i_i_fu_964_p2 <= std_logic_vector(signed(tmp_i_cast1_i_i_i_reg_1536) + signed(tmp_4_i_cast_i_i_i_fu_933_p1));
    tmp_90_fu_1073_p1 <= Hi_assign_2_i_i_i_fu_1036_p2(8 - 1 downto 0);
    
    tmp_91_fu_1174_p4_proc : process(p_Val2_s_fu_196)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_91_fu_1174_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_196;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_91_fu_1174_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_91_fu_1174_p4_i) := p_Val2_s_fu_196(176-1-tmp_91_fu_1174_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_91_fu_1174_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_92_fu_1184_p2 <= std_logic_vector(unsigned(tmp_89_fu_1167_p3) - unsigned(tmp_90_reg_1626));
    tmp_93_fu_1189_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_89_fu_1167_p3));
    tmp_94_fu_1195_p2 <= std_logic_vector(unsigned(tmp_90_reg_1626) - unsigned(tmp_89_fu_1167_p3));
    tmp_95_fu_1200_p3 <= 
        tmp_92_fu_1184_p2 when (tmp_88_reg_1619(0) = '1') else 
        tmp_94_fu_1195_p2;
    tmp_96_fu_1207_p3 <= 
        tmp_91_fu_1174_p4 when (tmp_88_reg_1619(0) = '1') else 
        p_Val2_s_fu_196;
    tmp_97_fu_1214_p3 <= 
        tmp_93_fu_1189_p2 when (tmp_88_reg_1619(0) = '1') else 
        tmp_89_fu_1167_p3;
    tmp_98_fu_1221_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_95_fu_1200_p3));
    tmp_99_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_97_fu_1214_p3),176));
    tmp_V_4_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_i_i_i_reg_408),176));
    tmp_V_fu_1330_p2 <= std_logic_vector(unsigned(tmp_21_i_i_i_i_fu_1325_p2) + unsigned(sumBuf_q0));
    tmp_fu_496_p1 <= val_assign_i_i_i_reg_408(5 - 1 downto 0);
        tmp_i_cast1_i_i_i_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rOffset_reg_1514),23));

    tmp_i_cast_i_i_i_39_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kn_i_i_i_i_reg_455),5));
        tmp_i_cast_i_i_i_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rOffset_reg_1514),7));

    tmp_i_i_i_i_i_i_i_38_fu_532_p2 <= "1" when (unsigned(val_assign_i_i_i_reg_408) < unsigned(ap_const_lv10_16)) else "0";
    tmp_i_i_i_i_i_i_i_fu_512_p2 <= "1" when (signed(rIndex_i_i_i_i_i_i_i_reg_397) < signed(ap_const_lv32_15)) else "0";
    val_assign_cast_i_i_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_i_i_i_i_s_fu_744_p3),6));
    val_assign_i_i_i_i_s_fu_744_p3 <= 
        tmp_fu_496_p1 when (tmp_i_i_i_i_i_i_i_38_fu_532_p2(0) = '1') else 
        ap_const_lv5_15;
end behav;
