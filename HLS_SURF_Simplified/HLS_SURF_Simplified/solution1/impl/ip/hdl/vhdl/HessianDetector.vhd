-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity HessianDetector is
port (
    m_axi_keyPoints_V_AWVALID : OUT STD_LOGIC;
    m_axi_keyPoints_V_AWREADY : IN STD_LOGIC;
    m_axi_keyPoints_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_keyPoints_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_keyPoints_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_WVALID : OUT STD_LOGIC;
    m_axi_keyPoints_V_WREADY : IN STD_LOGIC;
    m_axi_keyPoints_V_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_WLAST : OUT STD_LOGIC;
    m_axi_keyPoints_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_ARVALID : OUT STD_LOGIC;
    m_axi_keyPoints_V_ARREADY : IN STD_LOGIC;
    m_axi_keyPoints_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_keyPoints_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_keyPoints_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_keyPoints_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_RVALID : IN STD_LOGIC;
    m_axi_keyPoints_V_RREADY : OUT STD_LOGIC;
    m_axi_keyPoints_V_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_keyPoints_V_RLAST : IN STD_LOGIC;
    m_axi_keyPoints_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_BVALID : IN STD_LOGIC;
    m_axi_keyPoints_V_BREADY : OUT STD_LOGIC;
    m_axi_keyPoints_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_keyPoints_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_keyPoints_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    keyPoints_V_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    keyPoints_V_offset_empty_n : IN STD_LOGIC;
    keyPoints_V_offset_read : OUT STD_LOGIC;
    m_axi_pointNumber_AWVALID : OUT STD_LOGIC;
    m_axi_pointNumber_AWREADY : IN STD_LOGIC;
    m_axi_pointNumber_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pointNumber_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pointNumber_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_WVALID : OUT STD_LOGIC;
    m_axi_pointNumber_WREADY : IN STD_LOGIC;
    m_axi_pointNumber_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_WLAST : OUT STD_LOGIC;
    m_axi_pointNumber_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_ARVALID : OUT STD_LOGIC;
    m_axi_pointNumber_ARREADY : IN STD_LOGIC;
    m_axi_pointNumber_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pointNumber_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_pointNumber_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_pointNumber_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_RVALID : IN STD_LOGIC;
    m_axi_pointNumber_RREADY : OUT STD_LOGIC;
    m_axi_pointNumber_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_pointNumber_RLAST : IN STD_LOGIC;
    m_axi_pointNumber_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_BVALID : IN STD_LOGIC;
    m_axi_pointNumber_BREADY : OUT STD_LOGIC;
    m_axi_pointNumber_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_pointNumber_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_pointNumber_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    pointNumber_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    pointNumber_offset_empty_n : IN STD_LOGIC;
    pointNumber_offset_read : OUT STD_LOGIC;
    this_assign_1_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    this_assign_1_loc_empty_n : IN STD_LOGIC;
    this_assign_1_loc_read : OUT STD_LOGIC;
    sum_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sum_V_empty_n : IN STD_LOGIC;
    sum_V_read : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of HessianDetector is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal calcLayerDetAndTrace_U0_ap_start : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_ap_done : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_ap_continue : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_ap_idle : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_ap_ready : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_start_out : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_start_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_det0_V_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_det0_V_V_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_det1_V_V3_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_det1_V_V3_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_det2_V_V6_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_det2_V_V6_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_this_assign_1_reload_read : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_this_assign_1_reload_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_this_assign_1_reload_out_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_keyPoints_V_offset_read : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_pointNumber_offset_read : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_keyPoints_V_offset_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_keyPoints_V_offset_out_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_pointNumber_offset_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal calcLayerDetAndTrace_U0_pointNumber_offset_out_write : STD_LOGIC;
    signal calcLayerDetAndTrace_U0_sum_V_read : STD_LOGIC;
    signal findCharacteristicPo_U0_ap_start : STD_LOGIC;
    signal findCharacteristicPo_U0_ap_done : STD_LOGIC;
    signal findCharacteristicPo_U0_ap_continue : STD_LOGIC;
    signal findCharacteristicPo_U0_ap_idle : STD_LOGIC;
    signal findCharacteristicPo_U0_ap_ready : STD_LOGIC;
    signal findCharacteristicPo_U0_det0_V_V_read : STD_LOGIC;
    signal findCharacteristicPo_U0_det1_V_V3_read : STD_LOGIC;
    signal findCharacteristicPo_U0_det2_V_V6_read : STD_LOGIC;
    signal findCharacteristicPo_U0_hessianThreshold_V_read : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WLAST : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_RREADY : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_keyPoints_V_BREADY : STD_LOGIC;
    signal findCharacteristicPo_U0_keyPoints_V_offset_read : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_WVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_WLAST : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARVALID : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal findCharacteristicPo_U0_m_axi_pointNumber_RREADY : STD_LOGIC;
    signal findCharacteristicPo_U0_m_axi_pointNumber_BREADY : STD_LOGIC;
    signal findCharacteristicPo_U0_pointNumber_offset_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal dets_0_V_V_full_n : STD_LOGIC;
    signal dets_0_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dets_0_V_V_empty_n : STD_LOGIC;
    signal dets_1_V_V_full_n : STD_LOGIC;
    signal dets_1_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dets_1_V_V_empty_n : STD_LOGIC;
    signal dets_2_V_V_full_n : STD_LOGIC;
    signal dets_2_V_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal dets_2_V_V_empty_n : STD_LOGIC;
    signal this_assign_1_reload_full_n : STD_LOGIC;
    signal this_assign_1_reload_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal this_assign_1_reload_empty_n : STD_LOGIC;
    signal keyPoints_V_offset_c_full_n : STD_LOGIC;
    signal keyPoints_V_offset_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal keyPoints_V_offset_c_empty_n : STD_LOGIC;
    signal pointNumber_offset_c_full_n : STD_LOGIC;
    signal pointNumber_offset_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pointNumber_offset_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_findCharacteristicPo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findCharacteristicPo_U0_full_n : STD_LOGIC;
    signal start_for_findCharacteristicPo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findCharacteristicPo_U0_empty_n : STD_LOGIC;
    signal findCharacteristicPo_U0_start_full_n : STD_LOGIC;
    signal findCharacteristicPo_U0_start_write : STD_LOGIC;

    component calcLayerDetAndTrace IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        det0_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        det0_V_V_full_n : IN STD_LOGIC;
        det0_V_V_write : OUT STD_LOGIC;
        det1_V_V3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        det1_V_V3_full_n : IN STD_LOGIC;
        det1_V_V3_write : OUT STD_LOGIC;
        det2_V_V6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        det2_V_V6_full_n : IN STD_LOGIC;
        det2_V_V6_write : OUT STD_LOGIC;
        this_assign_1_reload_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        this_assign_1_reload_empty_n : IN STD_LOGIC;
        this_assign_1_reload_read : OUT STD_LOGIC;
        this_assign_1_reload_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        this_assign_1_reload_out_full_n : IN STD_LOGIC;
        this_assign_1_reload_out_write : OUT STD_LOGIC;
        keyPoints_V_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        keyPoints_V_offset_empty_n : IN STD_LOGIC;
        keyPoints_V_offset_read : OUT STD_LOGIC;
        pointNumber_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pointNumber_offset_empty_n : IN STD_LOGIC;
        pointNumber_offset_read : OUT STD_LOGIC;
        keyPoints_V_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        keyPoints_V_offset_out_full_n : IN STD_LOGIC;
        keyPoints_V_offset_out_write : OUT STD_LOGIC;
        pointNumber_offset_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pointNumber_offset_out_full_n : IN STD_LOGIC;
        pointNumber_offset_out_write : OUT STD_LOGIC;
        sum_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        sum_V_empty_n : IN STD_LOGIC;
        sum_V_read : OUT STD_LOGIC );
    end component;


    component findCharacteristicPo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        det0_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        det0_V_V_empty_n : IN STD_LOGIC;
        det0_V_V_read : OUT STD_LOGIC;
        det1_V_V3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        det1_V_V3_empty_n : IN STD_LOGIC;
        det1_V_V3_read : OUT STD_LOGIC;
        det2_V_V6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        det2_V_V6_empty_n : IN STD_LOGIC;
        det2_V_V6_read : OUT STD_LOGIC;
        hessianThreshold_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        hessianThreshold_V_empty_n : IN STD_LOGIC;
        hessianThreshold_V_read : OUT STD_LOGIC;
        m_axi_keyPoints_V_AWVALID : OUT STD_LOGIC;
        m_axi_keyPoints_V_AWREADY : IN STD_LOGIC;
        m_axi_keyPoints_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_keyPoints_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_keyPoints_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_WVALID : OUT STD_LOGIC;
        m_axi_keyPoints_V_WREADY : IN STD_LOGIC;
        m_axi_keyPoints_V_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_WLAST : OUT STD_LOGIC;
        m_axi_keyPoints_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_ARVALID : OUT STD_LOGIC;
        m_axi_keyPoints_V_ARREADY : IN STD_LOGIC;
        m_axi_keyPoints_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_keyPoints_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_keyPoints_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_keyPoints_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_RVALID : IN STD_LOGIC;
        m_axi_keyPoints_V_RREADY : OUT STD_LOGIC;
        m_axi_keyPoints_V_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_keyPoints_V_RLAST : IN STD_LOGIC;
        m_axi_keyPoints_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_BVALID : IN STD_LOGIC;
        m_axi_keyPoints_V_BREADY : OUT STD_LOGIC;
        m_axi_keyPoints_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_keyPoints_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_keyPoints_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        keyPoints_V_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        keyPoints_V_offset_empty_n : IN STD_LOGIC;
        keyPoints_V_offset_read : OUT STD_LOGIC;
        m_axi_pointNumber_AWVALID : OUT STD_LOGIC;
        m_axi_pointNumber_AWREADY : IN STD_LOGIC;
        m_axi_pointNumber_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_pointNumber_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_pointNumber_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_WVALID : OUT STD_LOGIC;
        m_axi_pointNumber_WREADY : IN STD_LOGIC;
        m_axi_pointNumber_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_WLAST : OUT STD_LOGIC;
        m_axi_pointNumber_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_ARVALID : OUT STD_LOGIC;
        m_axi_pointNumber_ARREADY : IN STD_LOGIC;
        m_axi_pointNumber_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_pointNumber_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_pointNumber_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_pointNumber_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_RVALID : IN STD_LOGIC;
        m_axi_pointNumber_RREADY : OUT STD_LOGIC;
        m_axi_pointNumber_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_pointNumber_RLAST : IN STD_LOGIC;
        m_axi_pointNumber_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_BVALID : IN STD_LOGIC;
        m_axi_pointNumber_BREADY : OUT STD_LOGIC;
        m_axi_pointNumber_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_pointNumber_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_pointNumber_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        pointNumber_offset_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pointNumber_offset_empty_n : IN STD_LOGIC;
        pointNumber_offset_read : OUT STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_findChawdI IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    calcLayerDetAndTrace_U0 : component calcLayerDetAndTrace
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => calcLayerDetAndTrace_U0_ap_start,
        start_full_n => start_for_findCharacteristicPo_U0_full_n,
        ap_done => calcLayerDetAndTrace_U0_ap_done,
        ap_continue => calcLayerDetAndTrace_U0_ap_continue,
        ap_idle => calcLayerDetAndTrace_U0_ap_idle,
        ap_ready => calcLayerDetAndTrace_U0_ap_ready,
        start_out => calcLayerDetAndTrace_U0_start_out,
        start_write => calcLayerDetAndTrace_U0_start_write,
        det0_V_V_din => calcLayerDetAndTrace_U0_det0_V_V_din,
        det0_V_V_full_n => dets_0_V_V_full_n,
        det0_V_V_write => calcLayerDetAndTrace_U0_det0_V_V_write,
        det1_V_V3_din => calcLayerDetAndTrace_U0_det1_V_V3_din,
        det1_V_V3_full_n => dets_1_V_V_full_n,
        det1_V_V3_write => calcLayerDetAndTrace_U0_det1_V_V3_write,
        det2_V_V6_din => calcLayerDetAndTrace_U0_det2_V_V6_din,
        det2_V_V6_full_n => dets_2_V_V_full_n,
        det2_V_V6_write => calcLayerDetAndTrace_U0_det2_V_V6_write,
        this_assign_1_reload_dout => this_assign_1_loc_dout,
        this_assign_1_reload_empty_n => this_assign_1_loc_empty_n,
        this_assign_1_reload_read => calcLayerDetAndTrace_U0_this_assign_1_reload_read,
        this_assign_1_reload_out_din => calcLayerDetAndTrace_U0_this_assign_1_reload_out_din,
        this_assign_1_reload_out_full_n => this_assign_1_reload_full_n,
        this_assign_1_reload_out_write => calcLayerDetAndTrace_U0_this_assign_1_reload_out_write,
        keyPoints_V_offset_dout => keyPoints_V_offset_dout,
        keyPoints_V_offset_empty_n => keyPoints_V_offset_empty_n,
        keyPoints_V_offset_read => calcLayerDetAndTrace_U0_keyPoints_V_offset_read,
        pointNumber_offset_dout => pointNumber_offset_dout,
        pointNumber_offset_empty_n => pointNumber_offset_empty_n,
        pointNumber_offset_read => calcLayerDetAndTrace_U0_pointNumber_offset_read,
        keyPoints_V_offset_out_din => calcLayerDetAndTrace_U0_keyPoints_V_offset_out_din,
        keyPoints_V_offset_out_full_n => keyPoints_V_offset_c_full_n,
        keyPoints_V_offset_out_write => calcLayerDetAndTrace_U0_keyPoints_V_offset_out_write,
        pointNumber_offset_out_din => calcLayerDetAndTrace_U0_pointNumber_offset_out_din,
        pointNumber_offset_out_full_n => pointNumber_offset_c_full_n,
        pointNumber_offset_out_write => calcLayerDetAndTrace_U0_pointNumber_offset_out_write,
        sum_V_dout => sum_V_dout,
        sum_V_empty_n => sum_V_empty_n,
        sum_V_read => calcLayerDetAndTrace_U0_sum_V_read);

    findCharacteristicPo_U0 : component findCharacteristicPo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => findCharacteristicPo_U0_ap_start,
        ap_done => findCharacteristicPo_U0_ap_done,
        ap_continue => findCharacteristicPo_U0_ap_continue,
        ap_idle => findCharacteristicPo_U0_ap_idle,
        ap_ready => findCharacteristicPo_U0_ap_ready,
        det0_V_V_dout => dets_0_V_V_dout,
        det0_V_V_empty_n => dets_0_V_V_empty_n,
        det0_V_V_read => findCharacteristicPo_U0_det0_V_V_read,
        det1_V_V3_dout => dets_1_V_V_dout,
        det1_V_V3_empty_n => dets_1_V_V_empty_n,
        det1_V_V3_read => findCharacteristicPo_U0_det1_V_V3_read,
        det2_V_V6_dout => dets_2_V_V_dout,
        det2_V_V6_empty_n => dets_2_V_V_empty_n,
        det2_V_V6_read => findCharacteristicPo_U0_det2_V_V6_read,
        hessianThreshold_V_dout => this_assign_1_reload_dout,
        hessianThreshold_V_empty_n => this_assign_1_reload_empty_n,
        hessianThreshold_V_read => findCharacteristicPo_U0_hessianThreshold_V_read,
        m_axi_keyPoints_V_AWVALID => findCharacteristicPo_U0_m_axi_keyPoints_V_AWVALID,
        m_axi_keyPoints_V_AWREADY => m_axi_keyPoints_V_AWREADY,
        m_axi_keyPoints_V_AWADDR => findCharacteristicPo_U0_m_axi_keyPoints_V_AWADDR,
        m_axi_keyPoints_V_AWID => findCharacteristicPo_U0_m_axi_keyPoints_V_AWID,
        m_axi_keyPoints_V_AWLEN => findCharacteristicPo_U0_m_axi_keyPoints_V_AWLEN,
        m_axi_keyPoints_V_AWSIZE => findCharacteristicPo_U0_m_axi_keyPoints_V_AWSIZE,
        m_axi_keyPoints_V_AWBURST => findCharacteristicPo_U0_m_axi_keyPoints_V_AWBURST,
        m_axi_keyPoints_V_AWLOCK => findCharacteristicPo_U0_m_axi_keyPoints_V_AWLOCK,
        m_axi_keyPoints_V_AWCACHE => findCharacteristicPo_U0_m_axi_keyPoints_V_AWCACHE,
        m_axi_keyPoints_V_AWPROT => findCharacteristicPo_U0_m_axi_keyPoints_V_AWPROT,
        m_axi_keyPoints_V_AWQOS => findCharacteristicPo_U0_m_axi_keyPoints_V_AWQOS,
        m_axi_keyPoints_V_AWREGION => findCharacteristicPo_U0_m_axi_keyPoints_V_AWREGION,
        m_axi_keyPoints_V_AWUSER => findCharacteristicPo_U0_m_axi_keyPoints_V_AWUSER,
        m_axi_keyPoints_V_WVALID => findCharacteristicPo_U0_m_axi_keyPoints_V_WVALID,
        m_axi_keyPoints_V_WREADY => m_axi_keyPoints_V_WREADY,
        m_axi_keyPoints_V_WDATA => findCharacteristicPo_U0_m_axi_keyPoints_V_WDATA,
        m_axi_keyPoints_V_WSTRB => findCharacteristicPo_U0_m_axi_keyPoints_V_WSTRB,
        m_axi_keyPoints_V_WLAST => findCharacteristicPo_U0_m_axi_keyPoints_V_WLAST,
        m_axi_keyPoints_V_WID => findCharacteristicPo_U0_m_axi_keyPoints_V_WID,
        m_axi_keyPoints_V_WUSER => findCharacteristicPo_U0_m_axi_keyPoints_V_WUSER,
        m_axi_keyPoints_V_ARVALID => findCharacteristicPo_U0_m_axi_keyPoints_V_ARVALID,
        m_axi_keyPoints_V_ARREADY => ap_const_logic_0,
        m_axi_keyPoints_V_ARADDR => findCharacteristicPo_U0_m_axi_keyPoints_V_ARADDR,
        m_axi_keyPoints_V_ARID => findCharacteristicPo_U0_m_axi_keyPoints_V_ARID,
        m_axi_keyPoints_V_ARLEN => findCharacteristicPo_U0_m_axi_keyPoints_V_ARLEN,
        m_axi_keyPoints_V_ARSIZE => findCharacteristicPo_U0_m_axi_keyPoints_V_ARSIZE,
        m_axi_keyPoints_V_ARBURST => findCharacteristicPo_U0_m_axi_keyPoints_V_ARBURST,
        m_axi_keyPoints_V_ARLOCK => findCharacteristicPo_U0_m_axi_keyPoints_V_ARLOCK,
        m_axi_keyPoints_V_ARCACHE => findCharacteristicPo_U0_m_axi_keyPoints_V_ARCACHE,
        m_axi_keyPoints_V_ARPROT => findCharacteristicPo_U0_m_axi_keyPoints_V_ARPROT,
        m_axi_keyPoints_V_ARQOS => findCharacteristicPo_U0_m_axi_keyPoints_V_ARQOS,
        m_axi_keyPoints_V_ARREGION => findCharacteristicPo_U0_m_axi_keyPoints_V_ARREGION,
        m_axi_keyPoints_V_ARUSER => findCharacteristicPo_U0_m_axi_keyPoints_V_ARUSER,
        m_axi_keyPoints_V_RVALID => ap_const_logic_0,
        m_axi_keyPoints_V_RREADY => findCharacteristicPo_U0_m_axi_keyPoints_V_RREADY,
        m_axi_keyPoints_V_RDATA => ap_const_lv32_0,
        m_axi_keyPoints_V_RLAST => ap_const_logic_0,
        m_axi_keyPoints_V_RID => ap_const_lv1_0,
        m_axi_keyPoints_V_RUSER => ap_const_lv1_0,
        m_axi_keyPoints_V_RRESP => ap_const_lv2_0,
        m_axi_keyPoints_V_BVALID => m_axi_keyPoints_V_BVALID,
        m_axi_keyPoints_V_BREADY => findCharacteristicPo_U0_m_axi_keyPoints_V_BREADY,
        m_axi_keyPoints_V_BRESP => m_axi_keyPoints_V_BRESP,
        m_axi_keyPoints_V_BID => m_axi_keyPoints_V_BID,
        m_axi_keyPoints_V_BUSER => m_axi_keyPoints_V_BUSER,
        keyPoints_V_offset_dout => keyPoints_V_offset_c_dout,
        keyPoints_V_offset_empty_n => keyPoints_V_offset_c_empty_n,
        keyPoints_V_offset_read => findCharacteristicPo_U0_keyPoints_V_offset_read,
        m_axi_pointNumber_AWVALID => findCharacteristicPo_U0_m_axi_pointNumber_AWVALID,
        m_axi_pointNumber_AWREADY => m_axi_pointNumber_AWREADY,
        m_axi_pointNumber_AWADDR => findCharacteristicPo_U0_m_axi_pointNumber_AWADDR,
        m_axi_pointNumber_AWID => findCharacteristicPo_U0_m_axi_pointNumber_AWID,
        m_axi_pointNumber_AWLEN => findCharacteristicPo_U0_m_axi_pointNumber_AWLEN,
        m_axi_pointNumber_AWSIZE => findCharacteristicPo_U0_m_axi_pointNumber_AWSIZE,
        m_axi_pointNumber_AWBURST => findCharacteristicPo_U0_m_axi_pointNumber_AWBURST,
        m_axi_pointNumber_AWLOCK => findCharacteristicPo_U0_m_axi_pointNumber_AWLOCK,
        m_axi_pointNumber_AWCACHE => findCharacteristicPo_U0_m_axi_pointNumber_AWCACHE,
        m_axi_pointNumber_AWPROT => findCharacteristicPo_U0_m_axi_pointNumber_AWPROT,
        m_axi_pointNumber_AWQOS => findCharacteristicPo_U0_m_axi_pointNumber_AWQOS,
        m_axi_pointNumber_AWREGION => findCharacteristicPo_U0_m_axi_pointNumber_AWREGION,
        m_axi_pointNumber_AWUSER => findCharacteristicPo_U0_m_axi_pointNumber_AWUSER,
        m_axi_pointNumber_WVALID => findCharacteristicPo_U0_m_axi_pointNumber_WVALID,
        m_axi_pointNumber_WREADY => m_axi_pointNumber_WREADY,
        m_axi_pointNumber_WDATA => findCharacteristicPo_U0_m_axi_pointNumber_WDATA,
        m_axi_pointNumber_WSTRB => findCharacteristicPo_U0_m_axi_pointNumber_WSTRB,
        m_axi_pointNumber_WLAST => findCharacteristicPo_U0_m_axi_pointNumber_WLAST,
        m_axi_pointNumber_WID => findCharacteristicPo_U0_m_axi_pointNumber_WID,
        m_axi_pointNumber_WUSER => findCharacteristicPo_U0_m_axi_pointNumber_WUSER,
        m_axi_pointNumber_ARVALID => findCharacteristicPo_U0_m_axi_pointNumber_ARVALID,
        m_axi_pointNumber_ARREADY => ap_const_logic_0,
        m_axi_pointNumber_ARADDR => findCharacteristicPo_U0_m_axi_pointNumber_ARADDR,
        m_axi_pointNumber_ARID => findCharacteristicPo_U0_m_axi_pointNumber_ARID,
        m_axi_pointNumber_ARLEN => findCharacteristicPo_U0_m_axi_pointNumber_ARLEN,
        m_axi_pointNumber_ARSIZE => findCharacteristicPo_U0_m_axi_pointNumber_ARSIZE,
        m_axi_pointNumber_ARBURST => findCharacteristicPo_U0_m_axi_pointNumber_ARBURST,
        m_axi_pointNumber_ARLOCK => findCharacteristicPo_U0_m_axi_pointNumber_ARLOCK,
        m_axi_pointNumber_ARCACHE => findCharacteristicPo_U0_m_axi_pointNumber_ARCACHE,
        m_axi_pointNumber_ARPROT => findCharacteristicPo_U0_m_axi_pointNumber_ARPROT,
        m_axi_pointNumber_ARQOS => findCharacteristicPo_U0_m_axi_pointNumber_ARQOS,
        m_axi_pointNumber_ARREGION => findCharacteristicPo_U0_m_axi_pointNumber_ARREGION,
        m_axi_pointNumber_ARUSER => findCharacteristicPo_U0_m_axi_pointNumber_ARUSER,
        m_axi_pointNumber_RVALID => ap_const_logic_0,
        m_axi_pointNumber_RREADY => findCharacteristicPo_U0_m_axi_pointNumber_RREADY,
        m_axi_pointNumber_RDATA => ap_const_lv32_0,
        m_axi_pointNumber_RLAST => ap_const_logic_0,
        m_axi_pointNumber_RID => ap_const_lv1_0,
        m_axi_pointNumber_RUSER => ap_const_lv1_0,
        m_axi_pointNumber_RRESP => ap_const_lv2_0,
        m_axi_pointNumber_BVALID => m_axi_pointNumber_BVALID,
        m_axi_pointNumber_BREADY => findCharacteristicPo_U0_m_axi_pointNumber_BREADY,
        m_axi_pointNumber_BRESP => m_axi_pointNumber_BRESP,
        m_axi_pointNumber_BID => m_axi_pointNumber_BID,
        m_axi_pointNumber_BUSER => m_axi_pointNumber_BUSER,
        pointNumber_offset_dout => pointNumber_offset_c_dout,
        pointNumber_offset_empty_n => pointNumber_offset_c_empty_n,
        pointNumber_offset_read => findCharacteristicPo_U0_pointNumber_offset_read);

    dets_0_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_det0_V_V_din,
        if_full_n => dets_0_V_V_full_n,
        if_write => calcLayerDetAndTrace_U0_det0_V_V_write,
        if_dout => dets_0_V_V_dout,
        if_empty_n => dets_0_V_V_empty_n,
        if_read => findCharacteristicPo_U0_det0_V_V_read);

    dets_1_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_det1_V_V3_din,
        if_full_n => dets_1_V_V_full_n,
        if_write => calcLayerDetAndTrace_U0_det1_V_V3_write,
        if_dout => dets_1_V_V_dout,
        if_empty_n => dets_1_V_V_empty_n,
        if_read => findCharacteristicPo_U0_det1_V_V3_read);

    dets_2_V_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_det2_V_V6_din,
        if_full_n => dets_2_V_V_full_n,
        if_write => calcLayerDetAndTrace_U0_det2_V_V6_write,
        if_dout => dets_2_V_V_dout,
        if_empty_n => dets_2_V_V_empty_n,
        if_read => findCharacteristicPo_U0_det2_V_V6_read);

    this_assign_1_reload_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_this_assign_1_reload_out_din,
        if_full_n => this_assign_1_reload_full_n,
        if_write => calcLayerDetAndTrace_U0_this_assign_1_reload_out_write,
        if_dout => this_assign_1_reload_dout,
        if_empty_n => this_assign_1_reload_empty_n,
        if_read => findCharacteristicPo_U0_hessianThreshold_V_read);

    keyPoints_V_offset_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_keyPoints_V_offset_out_din,
        if_full_n => keyPoints_V_offset_c_full_n,
        if_write => calcLayerDetAndTrace_U0_keyPoints_V_offset_out_write,
        if_dout => keyPoints_V_offset_c_dout,
        if_empty_n => keyPoints_V_offset_c_empty_n,
        if_read => findCharacteristicPo_U0_keyPoints_V_offset_read);

    pointNumber_offset_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => calcLayerDetAndTrace_U0_pointNumber_offset_out_din,
        if_full_n => pointNumber_offset_c_full_n,
        if_write => calcLayerDetAndTrace_U0_pointNumber_offset_out_write,
        if_dout => pointNumber_offset_c_dout,
        if_empty_n => pointNumber_offset_c_empty_n,
        if_read => findCharacteristicPo_U0_pointNumber_offset_read);

    start_for_findChawdI_U : component start_for_findChawdI
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_findCharacteristicPo_U0_din,
        if_full_n => start_for_findCharacteristicPo_U0_full_n,
        if_write => calcLayerDetAndTrace_U0_start_write,
        if_dout => start_for_findCharacteristicPo_U0_dout,
        if_empty_n => start_for_findCharacteristicPo_U0_empty_n,
        if_read => findCharacteristicPo_U0_ap_ready);




    ap_done <= findCharacteristicPo_U0_ap_done;
    ap_idle <= (findCharacteristicPo_U0_ap_idle and calcLayerDetAndTrace_U0_ap_idle);
    ap_ready <= calcLayerDetAndTrace_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= findCharacteristicPo_U0_ap_done;
    ap_sync_ready <= calcLayerDetAndTrace_U0_ap_ready;
    calcLayerDetAndTrace_U0_ap_continue <= ap_const_logic_1;
    calcLayerDetAndTrace_U0_ap_start <= ap_start;
    findCharacteristicPo_U0_ap_continue <= ap_continue;
    findCharacteristicPo_U0_ap_start <= start_for_findCharacteristicPo_U0_empty_n;
    findCharacteristicPo_U0_start_full_n <= ap_const_logic_1;
    findCharacteristicPo_U0_start_write <= ap_const_logic_0;
    keyPoints_V_offset_read <= calcLayerDetAndTrace_U0_keyPoints_V_offset_read;
    m_axi_keyPoints_V_ARADDR <= ap_const_lv32_0;
    m_axi_keyPoints_V_ARBURST <= ap_const_lv2_0;
    m_axi_keyPoints_V_ARCACHE <= ap_const_lv4_0;
    m_axi_keyPoints_V_ARID <= ap_const_lv1_0;
    m_axi_keyPoints_V_ARLEN <= ap_const_lv32_0;
    m_axi_keyPoints_V_ARLOCK <= ap_const_lv2_0;
    m_axi_keyPoints_V_ARPROT <= ap_const_lv3_0;
    m_axi_keyPoints_V_ARQOS <= ap_const_lv4_0;
    m_axi_keyPoints_V_ARREGION <= ap_const_lv4_0;
    m_axi_keyPoints_V_ARSIZE <= ap_const_lv3_0;
    m_axi_keyPoints_V_ARUSER <= ap_const_lv1_0;
    m_axi_keyPoints_V_ARVALID <= ap_const_logic_0;
    m_axi_keyPoints_V_AWADDR <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWADDR;
    m_axi_keyPoints_V_AWBURST <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWBURST;
    m_axi_keyPoints_V_AWCACHE <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWCACHE;
    m_axi_keyPoints_V_AWID <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWID;
    m_axi_keyPoints_V_AWLEN <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWLEN;
    m_axi_keyPoints_V_AWLOCK <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWLOCK;
    m_axi_keyPoints_V_AWPROT <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWPROT;
    m_axi_keyPoints_V_AWQOS <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWQOS;
    m_axi_keyPoints_V_AWREGION <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWREGION;
    m_axi_keyPoints_V_AWSIZE <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWSIZE;
    m_axi_keyPoints_V_AWUSER <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWUSER;
    m_axi_keyPoints_V_AWVALID <= findCharacteristicPo_U0_m_axi_keyPoints_V_AWVALID;
    m_axi_keyPoints_V_BREADY <= findCharacteristicPo_U0_m_axi_keyPoints_V_BREADY;
    m_axi_keyPoints_V_RREADY <= ap_const_logic_0;
    m_axi_keyPoints_V_WDATA <= findCharacteristicPo_U0_m_axi_keyPoints_V_WDATA;
    m_axi_keyPoints_V_WID <= findCharacteristicPo_U0_m_axi_keyPoints_V_WID;
    m_axi_keyPoints_V_WLAST <= findCharacteristicPo_U0_m_axi_keyPoints_V_WLAST;
    m_axi_keyPoints_V_WSTRB <= findCharacteristicPo_U0_m_axi_keyPoints_V_WSTRB;
    m_axi_keyPoints_V_WUSER <= findCharacteristicPo_U0_m_axi_keyPoints_V_WUSER;
    m_axi_keyPoints_V_WVALID <= findCharacteristicPo_U0_m_axi_keyPoints_V_WVALID;
    m_axi_pointNumber_ARADDR <= ap_const_lv32_0;
    m_axi_pointNumber_ARBURST <= ap_const_lv2_0;
    m_axi_pointNumber_ARCACHE <= ap_const_lv4_0;
    m_axi_pointNumber_ARID <= ap_const_lv1_0;
    m_axi_pointNumber_ARLEN <= ap_const_lv32_0;
    m_axi_pointNumber_ARLOCK <= ap_const_lv2_0;
    m_axi_pointNumber_ARPROT <= ap_const_lv3_0;
    m_axi_pointNumber_ARQOS <= ap_const_lv4_0;
    m_axi_pointNumber_ARREGION <= ap_const_lv4_0;
    m_axi_pointNumber_ARSIZE <= ap_const_lv3_0;
    m_axi_pointNumber_ARUSER <= ap_const_lv1_0;
    m_axi_pointNumber_ARVALID <= ap_const_logic_0;
    m_axi_pointNumber_AWADDR <= findCharacteristicPo_U0_m_axi_pointNumber_AWADDR;
    m_axi_pointNumber_AWBURST <= findCharacteristicPo_U0_m_axi_pointNumber_AWBURST;
    m_axi_pointNumber_AWCACHE <= findCharacteristicPo_U0_m_axi_pointNumber_AWCACHE;
    m_axi_pointNumber_AWID <= findCharacteristicPo_U0_m_axi_pointNumber_AWID;
    m_axi_pointNumber_AWLEN <= findCharacteristicPo_U0_m_axi_pointNumber_AWLEN;
    m_axi_pointNumber_AWLOCK <= findCharacteristicPo_U0_m_axi_pointNumber_AWLOCK;
    m_axi_pointNumber_AWPROT <= findCharacteristicPo_U0_m_axi_pointNumber_AWPROT;
    m_axi_pointNumber_AWQOS <= findCharacteristicPo_U0_m_axi_pointNumber_AWQOS;
    m_axi_pointNumber_AWREGION <= findCharacteristicPo_U0_m_axi_pointNumber_AWREGION;
    m_axi_pointNumber_AWSIZE <= findCharacteristicPo_U0_m_axi_pointNumber_AWSIZE;
    m_axi_pointNumber_AWUSER <= findCharacteristicPo_U0_m_axi_pointNumber_AWUSER;
    m_axi_pointNumber_AWVALID <= findCharacteristicPo_U0_m_axi_pointNumber_AWVALID;
    m_axi_pointNumber_BREADY <= findCharacteristicPo_U0_m_axi_pointNumber_BREADY;
    m_axi_pointNumber_RREADY <= ap_const_logic_0;
    m_axi_pointNumber_WDATA <= findCharacteristicPo_U0_m_axi_pointNumber_WDATA;
    m_axi_pointNumber_WID <= findCharacteristicPo_U0_m_axi_pointNumber_WID;
    m_axi_pointNumber_WLAST <= findCharacteristicPo_U0_m_axi_pointNumber_WLAST;
    m_axi_pointNumber_WSTRB <= findCharacteristicPo_U0_m_axi_pointNumber_WSTRB;
    m_axi_pointNumber_WUSER <= findCharacteristicPo_U0_m_axi_pointNumber_WUSER;
    m_axi_pointNumber_WVALID <= findCharacteristicPo_U0_m_axi_pointNumber_WVALID;
    pointNumber_offset_read <= calcLayerDetAndTrace_U0_pointNumber_offset_read;
    start_for_findCharacteristicPo_U0_din <= (0=>ap_const_logic_1, others=>'-');
    sum_V_read <= calcLayerDetAndTrace_U0_sum_V_read;
    this_assign_1_loc_read <= calcLayerDetAndTrace_U0_this_assign_1_reload_read;
end behav;
