// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "surf_Simplified.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int surf_Simplified::C_S_AXI_DATA_WIDTH = "100000";
const int surf_Simplified::C_S_AXI_WSTRB_WIDTH = "100";
const int surf_Simplified::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic surf_Simplified::ap_const_logic_1 = sc_dt::Log_1;
const int surf_Simplified::C_M_AXI_KEYPOINTS_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int surf_Simplified::C_M_AXI_KEYPOINTS_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int surf_Simplified::C_M_AXI_KEYPOINTS_CACHE_VALUE = "11";
const int surf_Simplified::C_M_AXI_ID_WIDTH = "1";
const int surf_Simplified::C_M_AXI_ADDR_WIDTH = "100000";
const int surf_Simplified::C_M_AXI_DATA_WIDTH = "100000";
const int surf_Simplified::C_M_AXI_WSTRB_WIDTH = "100";
const int surf_Simplified::C_M_AXI_AWUSER_WIDTH = "1";
const int surf_Simplified::C_M_AXI_ARUSER_WIDTH = "1";
const int surf_Simplified::C_M_AXI_WUSER_WIDTH = "1";
const int surf_Simplified::C_M_AXI_RUSER_WIDTH = "1";
const int surf_Simplified::C_M_AXI_BUSER_WIDTH = "1";
const int surf_Simplified::C_M_AXI_POINTNUMBER_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int surf_Simplified::C_M_AXI_POINTNUMBER_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int surf_Simplified::C_M_AXI_POINTNUMBER_CACHE_VALUE = "11";
const sc_logic surf_Simplified::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> surf_Simplified::ap_const_lv2_0 = "00";
const sc_lv<2> surf_Simplified::ap_const_lv2_1 = "1";
const bool surf_Simplified::ap_const_boolean_1 = true;
const sc_lv<32> surf_Simplified::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> surf_Simplified::ap_const_lv32_1 = "1";
const sc_lv<1> surf_Simplified::ap_const_lv1_0 = "0";
const sc_lv<1> surf_Simplified::ap_const_lv1_1 = "1";
const sc_lv<3> surf_Simplified::ap_const_lv3_0 = "000";
const sc_lv<3> surf_Simplified::ap_const_lv3_1 = "1";
const sc_lv<4> surf_Simplified::ap_const_lv4_0 = "0000";
const sc_lv<4> surf_Simplified::ap_const_lv4_1 = "1";

surf_Simplified::surf_Simplified(sc_module_name name) : sc_module(name), mVcdFile(0) {
    surf_Simplified_AXILiteS_s_axi_U = new surf_Simplified_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("surf_Simplified_AXILiteS_s_axi_U");
    surf_Simplified_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    surf_Simplified_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    surf_Simplified_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    surf_Simplified_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    surf_Simplified_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    surf_Simplified_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    surf_Simplified_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    surf_Simplified_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    surf_Simplified_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    surf_Simplified_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    surf_Simplified_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    surf_Simplified_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    surf_Simplified_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    surf_Simplified_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    surf_Simplified_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    surf_Simplified_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    surf_Simplified_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    surf_Simplified_AXILiteS_s_axi_U->ACLK(ap_clk);
    surf_Simplified_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    surf_Simplified_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    surf_Simplified_AXILiteS_s_axi_U->ap_start(ap_start);
    surf_Simplified_AXILiteS_s_axi_U->interrupt(interrupt);
    surf_Simplified_AXILiteS_s_axi_U->ap_ready(ap_ready);
    surf_Simplified_AXILiteS_s_axi_U->ap_done(ap_done);
    surf_Simplified_AXILiteS_s_axi_U->ap_idle(ap_idle);
    surf_Simplified_AXILiteS_s_axi_U->keyPoints_V(keyPoints_V);
    surf_Simplified_AXILiteS_s_axi_U->kpn(kpn);
    surf_Simplified_threshold_s_axi_U = new surf_Simplified_threshold_s_axi<C_S_AXI_THRESHOLD_ADDR_WIDTH,C_S_AXI_THRESHOLD_DATA_WIDTH>("surf_Simplified_threshold_s_axi_U");
    surf_Simplified_threshold_s_axi_U->AWVALID(s_axi_threshold_AWVALID);
    surf_Simplified_threshold_s_axi_U->AWREADY(s_axi_threshold_AWREADY);
    surf_Simplified_threshold_s_axi_U->AWADDR(s_axi_threshold_AWADDR);
    surf_Simplified_threshold_s_axi_U->WVALID(s_axi_threshold_WVALID);
    surf_Simplified_threshold_s_axi_U->WREADY(s_axi_threshold_WREADY);
    surf_Simplified_threshold_s_axi_U->WDATA(s_axi_threshold_WDATA);
    surf_Simplified_threshold_s_axi_U->WSTRB(s_axi_threshold_WSTRB);
    surf_Simplified_threshold_s_axi_U->ARVALID(s_axi_threshold_ARVALID);
    surf_Simplified_threshold_s_axi_U->ARREADY(s_axi_threshold_ARREADY);
    surf_Simplified_threshold_s_axi_U->ARADDR(s_axi_threshold_ARADDR);
    surf_Simplified_threshold_s_axi_U->RVALID(s_axi_threshold_RVALID);
    surf_Simplified_threshold_s_axi_U->RREADY(s_axi_threshold_RREADY);
    surf_Simplified_threshold_s_axi_U->RDATA(s_axi_threshold_RDATA);
    surf_Simplified_threshold_s_axi_U->RRESP(s_axi_threshold_RRESP);
    surf_Simplified_threshold_s_axi_U->BVALID(s_axi_threshold_BVALID);
    surf_Simplified_threshold_s_axi_U->BREADY(s_axi_threshold_BREADY);
    surf_Simplified_threshold_s_axi_U->BRESP(s_axi_threshold_BRESP);
    surf_Simplified_threshold_s_axi_U->ACLK(ap_clk);
    surf_Simplified_threshold_s_axi_U->ARESET(ap_rst_n_inv);
    surf_Simplified_threshold_s_axi_U->ACLK_EN(ap_var_for_const0);
    surf_Simplified_threshold_s_axi_U->threshold(threshold);
    surf_Simplified_keyPoints_m_axi_U = new surf_Simplified_keyPoints_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_KEYPOINTS_ID_WIDTH,C_M_AXI_KEYPOINTS_ADDR_WIDTH,C_M_AXI_KEYPOINTS_DATA_WIDTH,C_M_AXI_KEYPOINTS_AWUSER_WIDTH,C_M_AXI_KEYPOINTS_ARUSER_WIDTH,C_M_AXI_KEYPOINTS_WUSER_WIDTH,C_M_AXI_KEYPOINTS_RUSER_WIDTH,C_M_AXI_KEYPOINTS_BUSER_WIDTH,C_M_AXI_KEYPOINTS_USER_VALUE,C_M_AXI_KEYPOINTS_PROT_VALUE,C_M_AXI_KEYPOINTS_CACHE_VALUE>("surf_Simplified_keyPoints_m_axi_U");
    surf_Simplified_keyPoints_m_axi_U->AWVALID(m_axi_keyPoints_AWVALID);
    surf_Simplified_keyPoints_m_axi_U->AWREADY(m_axi_keyPoints_AWREADY);
    surf_Simplified_keyPoints_m_axi_U->AWADDR(m_axi_keyPoints_AWADDR);
    surf_Simplified_keyPoints_m_axi_U->AWID(m_axi_keyPoints_AWID);
    surf_Simplified_keyPoints_m_axi_U->AWLEN(m_axi_keyPoints_AWLEN);
    surf_Simplified_keyPoints_m_axi_U->AWSIZE(m_axi_keyPoints_AWSIZE);
    surf_Simplified_keyPoints_m_axi_U->AWBURST(m_axi_keyPoints_AWBURST);
    surf_Simplified_keyPoints_m_axi_U->AWLOCK(m_axi_keyPoints_AWLOCK);
    surf_Simplified_keyPoints_m_axi_U->AWCACHE(m_axi_keyPoints_AWCACHE);
    surf_Simplified_keyPoints_m_axi_U->AWPROT(m_axi_keyPoints_AWPROT);
    surf_Simplified_keyPoints_m_axi_U->AWQOS(m_axi_keyPoints_AWQOS);
    surf_Simplified_keyPoints_m_axi_U->AWREGION(m_axi_keyPoints_AWREGION);
    surf_Simplified_keyPoints_m_axi_U->AWUSER(m_axi_keyPoints_AWUSER);
    surf_Simplified_keyPoints_m_axi_U->WVALID(m_axi_keyPoints_WVALID);
    surf_Simplified_keyPoints_m_axi_U->WREADY(m_axi_keyPoints_WREADY);
    surf_Simplified_keyPoints_m_axi_U->WDATA(m_axi_keyPoints_WDATA);
    surf_Simplified_keyPoints_m_axi_U->WSTRB(m_axi_keyPoints_WSTRB);
    surf_Simplified_keyPoints_m_axi_U->WLAST(m_axi_keyPoints_WLAST);
    surf_Simplified_keyPoints_m_axi_U->WID(m_axi_keyPoints_WID);
    surf_Simplified_keyPoints_m_axi_U->WUSER(m_axi_keyPoints_WUSER);
    surf_Simplified_keyPoints_m_axi_U->ARVALID(m_axi_keyPoints_ARVALID);
    surf_Simplified_keyPoints_m_axi_U->ARREADY(m_axi_keyPoints_ARREADY);
    surf_Simplified_keyPoints_m_axi_U->ARADDR(m_axi_keyPoints_ARADDR);
    surf_Simplified_keyPoints_m_axi_U->ARID(m_axi_keyPoints_ARID);
    surf_Simplified_keyPoints_m_axi_U->ARLEN(m_axi_keyPoints_ARLEN);
    surf_Simplified_keyPoints_m_axi_U->ARSIZE(m_axi_keyPoints_ARSIZE);
    surf_Simplified_keyPoints_m_axi_U->ARBURST(m_axi_keyPoints_ARBURST);
    surf_Simplified_keyPoints_m_axi_U->ARLOCK(m_axi_keyPoints_ARLOCK);
    surf_Simplified_keyPoints_m_axi_U->ARCACHE(m_axi_keyPoints_ARCACHE);
    surf_Simplified_keyPoints_m_axi_U->ARPROT(m_axi_keyPoints_ARPROT);
    surf_Simplified_keyPoints_m_axi_U->ARQOS(m_axi_keyPoints_ARQOS);
    surf_Simplified_keyPoints_m_axi_U->ARREGION(m_axi_keyPoints_ARREGION);
    surf_Simplified_keyPoints_m_axi_U->ARUSER(m_axi_keyPoints_ARUSER);
    surf_Simplified_keyPoints_m_axi_U->RVALID(m_axi_keyPoints_RVALID);
    surf_Simplified_keyPoints_m_axi_U->RREADY(m_axi_keyPoints_RREADY);
    surf_Simplified_keyPoints_m_axi_U->RDATA(m_axi_keyPoints_RDATA);
    surf_Simplified_keyPoints_m_axi_U->RLAST(m_axi_keyPoints_RLAST);
    surf_Simplified_keyPoints_m_axi_U->RID(m_axi_keyPoints_RID);
    surf_Simplified_keyPoints_m_axi_U->RUSER(m_axi_keyPoints_RUSER);
    surf_Simplified_keyPoints_m_axi_U->RRESP(m_axi_keyPoints_RRESP);
    surf_Simplified_keyPoints_m_axi_U->BVALID(m_axi_keyPoints_BVALID);
    surf_Simplified_keyPoints_m_axi_U->BREADY(m_axi_keyPoints_BREADY);
    surf_Simplified_keyPoints_m_axi_U->BRESP(m_axi_keyPoints_BRESP);
    surf_Simplified_keyPoints_m_axi_U->BID(m_axi_keyPoints_BID);
    surf_Simplified_keyPoints_m_axi_U->BUSER(m_axi_keyPoints_BUSER);
    surf_Simplified_keyPoints_m_axi_U->ACLK(ap_clk);
    surf_Simplified_keyPoints_m_axi_U->ARESET(ap_rst_n_inv);
    surf_Simplified_keyPoints_m_axi_U->ACLK_EN(ap_var_for_const0);
    surf_Simplified_keyPoints_m_axi_U->I_ARVALID(ap_var_for_const1);
    surf_Simplified_keyPoints_m_axi_U->I_ARREADY(keyPoints_ARREADY);
    surf_Simplified_keyPoints_m_axi_U->I_ARADDR(ap_var_for_const2);
    surf_Simplified_keyPoints_m_axi_U->I_ARID(ap_var_for_const3);
    surf_Simplified_keyPoints_m_axi_U->I_ARLEN(ap_var_for_const2);
    surf_Simplified_keyPoints_m_axi_U->I_ARSIZE(ap_var_for_const4);
    surf_Simplified_keyPoints_m_axi_U->I_ARLOCK(ap_var_for_const5);
    surf_Simplified_keyPoints_m_axi_U->I_ARCACHE(ap_var_for_const6);
    surf_Simplified_keyPoints_m_axi_U->I_ARQOS(ap_var_for_const6);
    surf_Simplified_keyPoints_m_axi_U->I_ARPROT(ap_var_for_const4);
    surf_Simplified_keyPoints_m_axi_U->I_ARUSER(ap_var_for_const3);
    surf_Simplified_keyPoints_m_axi_U->I_ARBURST(ap_var_for_const5);
    surf_Simplified_keyPoints_m_axi_U->I_ARREGION(ap_var_for_const6);
    surf_Simplified_keyPoints_m_axi_U->I_RVALID(keyPoints_RVALID);
    surf_Simplified_keyPoints_m_axi_U->I_RREADY(ap_var_for_const1);
    surf_Simplified_keyPoints_m_axi_U->I_RDATA(keyPoints_RDATA);
    surf_Simplified_keyPoints_m_axi_U->I_RID(keyPoints_RID);
    surf_Simplified_keyPoints_m_axi_U->I_RUSER(keyPoints_RUSER);
    surf_Simplified_keyPoints_m_axi_U->I_RRESP(keyPoints_RRESP);
    surf_Simplified_keyPoints_m_axi_U->I_RLAST(keyPoints_RLAST);
    surf_Simplified_keyPoints_m_axi_U->I_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID);
    surf_Simplified_keyPoints_m_axi_U->I_AWREADY(keyPoints_AWREADY);
    surf_Simplified_keyPoints_m_axi_U->I_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR);
    surf_Simplified_keyPoints_m_axi_U->I_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID);
    surf_Simplified_keyPoints_m_axi_U->I_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN);
    surf_Simplified_keyPoints_m_axi_U->I_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE);
    surf_Simplified_keyPoints_m_axi_U->I_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK);
    surf_Simplified_keyPoints_m_axi_U->I_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE);
    surf_Simplified_keyPoints_m_axi_U->I_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS);
    surf_Simplified_keyPoints_m_axi_U->I_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT);
    surf_Simplified_keyPoints_m_axi_U->I_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER);
    surf_Simplified_keyPoints_m_axi_U->I_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST);
    surf_Simplified_keyPoints_m_axi_U->I_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION);
    surf_Simplified_keyPoints_m_axi_U->I_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID);
    surf_Simplified_keyPoints_m_axi_U->I_WREADY(keyPoints_WREADY);
    surf_Simplified_keyPoints_m_axi_U->I_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA);
    surf_Simplified_keyPoints_m_axi_U->I_WID(HessianDetector_U0_m_axi_keyPoints_V_WID);
    surf_Simplified_keyPoints_m_axi_U->I_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER);
    surf_Simplified_keyPoints_m_axi_U->I_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST);
    surf_Simplified_keyPoints_m_axi_U->I_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB);
    surf_Simplified_keyPoints_m_axi_U->I_BVALID(keyPoints_BVALID);
    surf_Simplified_keyPoints_m_axi_U->I_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY);
    surf_Simplified_keyPoints_m_axi_U->I_BRESP(keyPoints_BRESP);
    surf_Simplified_keyPoints_m_axi_U->I_BID(keyPoints_BID);
    surf_Simplified_keyPoints_m_axi_U->I_BUSER(keyPoints_BUSER);
    surf_Simplified_pointNumber_m_axi_U = new surf_Simplified_pointNumber_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_POINTNUMBER_ID_WIDTH,C_M_AXI_POINTNUMBER_ADDR_WIDTH,C_M_AXI_POINTNUMBER_DATA_WIDTH,C_M_AXI_POINTNUMBER_AWUSER_WIDTH,C_M_AXI_POINTNUMBER_ARUSER_WIDTH,C_M_AXI_POINTNUMBER_WUSER_WIDTH,C_M_AXI_POINTNUMBER_RUSER_WIDTH,C_M_AXI_POINTNUMBER_BUSER_WIDTH,C_M_AXI_POINTNUMBER_USER_VALUE,C_M_AXI_POINTNUMBER_PROT_VALUE,C_M_AXI_POINTNUMBER_CACHE_VALUE>("surf_Simplified_pointNumber_m_axi_U");
    surf_Simplified_pointNumber_m_axi_U->AWVALID(m_axi_pointNumber_AWVALID);
    surf_Simplified_pointNumber_m_axi_U->AWREADY(m_axi_pointNumber_AWREADY);
    surf_Simplified_pointNumber_m_axi_U->AWADDR(m_axi_pointNumber_AWADDR);
    surf_Simplified_pointNumber_m_axi_U->AWID(m_axi_pointNumber_AWID);
    surf_Simplified_pointNumber_m_axi_U->AWLEN(m_axi_pointNumber_AWLEN);
    surf_Simplified_pointNumber_m_axi_U->AWSIZE(m_axi_pointNumber_AWSIZE);
    surf_Simplified_pointNumber_m_axi_U->AWBURST(m_axi_pointNumber_AWBURST);
    surf_Simplified_pointNumber_m_axi_U->AWLOCK(m_axi_pointNumber_AWLOCK);
    surf_Simplified_pointNumber_m_axi_U->AWCACHE(m_axi_pointNumber_AWCACHE);
    surf_Simplified_pointNumber_m_axi_U->AWPROT(m_axi_pointNumber_AWPROT);
    surf_Simplified_pointNumber_m_axi_U->AWQOS(m_axi_pointNumber_AWQOS);
    surf_Simplified_pointNumber_m_axi_U->AWREGION(m_axi_pointNumber_AWREGION);
    surf_Simplified_pointNumber_m_axi_U->AWUSER(m_axi_pointNumber_AWUSER);
    surf_Simplified_pointNumber_m_axi_U->WVALID(m_axi_pointNumber_WVALID);
    surf_Simplified_pointNumber_m_axi_U->WREADY(m_axi_pointNumber_WREADY);
    surf_Simplified_pointNumber_m_axi_U->WDATA(m_axi_pointNumber_WDATA);
    surf_Simplified_pointNumber_m_axi_U->WSTRB(m_axi_pointNumber_WSTRB);
    surf_Simplified_pointNumber_m_axi_U->WLAST(m_axi_pointNumber_WLAST);
    surf_Simplified_pointNumber_m_axi_U->WID(m_axi_pointNumber_WID);
    surf_Simplified_pointNumber_m_axi_U->WUSER(m_axi_pointNumber_WUSER);
    surf_Simplified_pointNumber_m_axi_U->ARVALID(m_axi_pointNumber_ARVALID);
    surf_Simplified_pointNumber_m_axi_U->ARREADY(m_axi_pointNumber_ARREADY);
    surf_Simplified_pointNumber_m_axi_U->ARADDR(m_axi_pointNumber_ARADDR);
    surf_Simplified_pointNumber_m_axi_U->ARID(m_axi_pointNumber_ARID);
    surf_Simplified_pointNumber_m_axi_U->ARLEN(m_axi_pointNumber_ARLEN);
    surf_Simplified_pointNumber_m_axi_U->ARSIZE(m_axi_pointNumber_ARSIZE);
    surf_Simplified_pointNumber_m_axi_U->ARBURST(m_axi_pointNumber_ARBURST);
    surf_Simplified_pointNumber_m_axi_U->ARLOCK(m_axi_pointNumber_ARLOCK);
    surf_Simplified_pointNumber_m_axi_U->ARCACHE(m_axi_pointNumber_ARCACHE);
    surf_Simplified_pointNumber_m_axi_U->ARPROT(m_axi_pointNumber_ARPROT);
    surf_Simplified_pointNumber_m_axi_U->ARQOS(m_axi_pointNumber_ARQOS);
    surf_Simplified_pointNumber_m_axi_U->ARREGION(m_axi_pointNumber_ARREGION);
    surf_Simplified_pointNumber_m_axi_U->ARUSER(m_axi_pointNumber_ARUSER);
    surf_Simplified_pointNumber_m_axi_U->RVALID(m_axi_pointNumber_RVALID);
    surf_Simplified_pointNumber_m_axi_U->RREADY(m_axi_pointNumber_RREADY);
    surf_Simplified_pointNumber_m_axi_U->RDATA(m_axi_pointNumber_RDATA);
    surf_Simplified_pointNumber_m_axi_U->RLAST(m_axi_pointNumber_RLAST);
    surf_Simplified_pointNumber_m_axi_U->RID(m_axi_pointNumber_RID);
    surf_Simplified_pointNumber_m_axi_U->RUSER(m_axi_pointNumber_RUSER);
    surf_Simplified_pointNumber_m_axi_U->RRESP(m_axi_pointNumber_RRESP);
    surf_Simplified_pointNumber_m_axi_U->BVALID(m_axi_pointNumber_BVALID);
    surf_Simplified_pointNumber_m_axi_U->BREADY(m_axi_pointNumber_BREADY);
    surf_Simplified_pointNumber_m_axi_U->BRESP(m_axi_pointNumber_BRESP);
    surf_Simplified_pointNumber_m_axi_U->BID(m_axi_pointNumber_BID);
    surf_Simplified_pointNumber_m_axi_U->BUSER(m_axi_pointNumber_BUSER);
    surf_Simplified_pointNumber_m_axi_U->ACLK(ap_clk);
    surf_Simplified_pointNumber_m_axi_U->ARESET(ap_rst_n_inv);
    surf_Simplified_pointNumber_m_axi_U->ACLK_EN(ap_var_for_const0);
    surf_Simplified_pointNumber_m_axi_U->I_ARVALID(ap_var_for_const1);
    surf_Simplified_pointNumber_m_axi_U->I_ARREADY(pointNumber_ARREADY);
    surf_Simplified_pointNumber_m_axi_U->I_ARADDR(ap_var_for_const2);
    surf_Simplified_pointNumber_m_axi_U->I_ARID(ap_var_for_const3);
    surf_Simplified_pointNumber_m_axi_U->I_ARLEN(ap_var_for_const2);
    surf_Simplified_pointNumber_m_axi_U->I_ARSIZE(ap_var_for_const4);
    surf_Simplified_pointNumber_m_axi_U->I_ARLOCK(ap_var_for_const5);
    surf_Simplified_pointNumber_m_axi_U->I_ARCACHE(ap_var_for_const6);
    surf_Simplified_pointNumber_m_axi_U->I_ARQOS(ap_var_for_const6);
    surf_Simplified_pointNumber_m_axi_U->I_ARPROT(ap_var_for_const4);
    surf_Simplified_pointNumber_m_axi_U->I_ARUSER(ap_var_for_const3);
    surf_Simplified_pointNumber_m_axi_U->I_ARBURST(ap_var_for_const5);
    surf_Simplified_pointNumber_m_axi_U->I_ARREGION(ap_var_for_const6);
    surf_Simplified_pointNumber_m_axi_U->I_RVALID(pointNumber_RVALID);
    surf_Simplified_pointNumber_m_axi_U->I_RREADY(ap_var_for_const1);
    surf_Simplified_pointNumber_m_axi_U->I_RDATA(pointNumber_RDATA);
    surf_Simplified_pointNumber_m_axi_U->I_RID(pointNumber_RID);
    surf_Simplified_pointNumber_m_axi_U->I_RUSER(pointNumber_RUSER);
    surf_Simplified_pointNumber_m_axi_U->I_RRESP(pointNumber_RRESP);
    surf_Simplified_pointNumber_m_axi_U->I_RLAST(pointNumber_RLAST);
    surf_Simplified_pointNumber_m_axi_U->I_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID);
    surf_Simplified_pointNumber_m_axi_U->I_AWREADY(pointNumber_AWREADY);
    surf_Simplified_pointNumber_m_axi_U->I_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR);
    surf_Simplified_pointNumber_m_axi_U->I_AWID(HessianDetector_U0_m_axi_pointNumber_AWID);
    surf_Simplified_pointNumber_m_axi_U->I_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN);
    surf_Simplified_pointNumber_m_axi_U->I_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE);
    surf_Simplified_pointNumber_m_axi_U->I_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK);
    surf_Simplified_pointNumber_m_axi_U->I_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE);
    surf_Simplified_pointNumber_m_axi_U->I_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS);
    surf_Simplified_pointNumber_m_axi_U->I_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT);
    surf_Simplified_pointNumber_m_axi_U->I_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER);
    surf_Simplified_pointNumber_m_axi_U->I_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST);
    surf_Simplified_pointNumber_m_axi_U->I_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION);
    surf_Simplified_pointNumber_m_axi_U->I_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID);
    surf_Simplified_pointNumber_m_axi_U->I_WREADY(pointNumber_WREADY);
    surf_Simplified_pointNumber_m_axi_U->I_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA);
    surf_Simplified_pointNumber_m_axi_U->I_WID(HessianDetector_U0_m_axi_pointNumber_WID);
    surf_Simplified_pointNumber_m_axi_U->I_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER);
    surf_Simplified_pointNumber_m_axi_U->I_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST);
    surf_Simplified_pointNumber_m_axi_U->I_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB);
    surf_Simplified_pointNumber_m_axi_U->I_BVALID(pointNumber_BVALID);
    surf_Simplified_pointNumber_m_axi_U->I_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY);
    surf_Simplified_pointNumber_m_axi_U->I_BRESP(pointNumber_BRESP);
    surf_Simplified_pointNumber_m_axi_U->I_BID(pointNumber_BID);
    surf_Simplified_pointNumber_m_axi_U->I_BUSER(pointNumber_BUSER);
    surf_Simplified_entr_U0 = new surf_Simplified_entr("surf_Simplified_entr_U0");
    surf_Simplified_entr_U0->ap_clk(ap_clk);
    surf_Simplified_entr_U0->ap_rst(ap_rst_n_inv);
    surf_Simplified_entr_U0->ap_start(surf_Simplified_entr_U0_ap_start);
    surf_Simplified_entr_U0->start_full_n(start_for_HessianDetector_U0_full_n);
    surf_Simplified_entr_U0->ap_done(surf_Simplified_entr_U0_ap_done);
    surf_Simplified_entr_U0->ap_continue(surf_Simplified_entr_U0_ap_continue);
    surf_Simplified_entr_U0->ap_idle(surf_Simplified_entr_U0_ap_idle);
    surf_Simplified_entr_U0->ap_ready(surf_Simplified_entr_U0_ap_ready);
    surf_Simplified_entr_U0->start_out(surf_Simplified_entr_U0_start_out);
    surf_Simplified_entr_U0->start_write(surf_Simplified_entr_U0_start_write);
    surf_Simplified_entr_U0->keyPoints_V(keyPoints_V);
    surf_Simplified_entr_U0->kpn(kpn);
    surf_Simplified_entr_U0->keyPoints_V_out_din(surf_Simplified_entr_U0_keyPoints_V_out_din);
    surf_Simplified_entr_U0->keyPoints_V_out_full_n(keyPoints_V_c_full_n);
    surf_Simplified_entr_U0->keyPoints_V_out_write(surf_Simplified_entr_U0_keyPoints_V_out_write);
    surf_Simplified_entr_U0->kpn_out_din(surf_Simplified_entr_U0_kpn_out_din);
    surf_Simplified_entr_U0->kpn_out_full_n(kpn_c_full_n);
    surf_Simplified_entr_U0->kpn_out_write(surf_Simplified_entr_U0_kpn_out_write);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->start_full_n(start_for_integralImg_U0_full_n);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->start_out(AXIvideo2Mat_U0_start_out);
    AXIvideo2Mat_U0->start_write(AXIvideo2Mat_U0_start_write);
    AXIvideo2Mat_U0->video_in_TDATA(video_in_TDATA);
    AXIvideo2Mat_U0->video_in_TVALID(video_in_TVALID);
    AXIvideo2Mat_U0->video_in_TREADY(AXIvideo2Mat_U0_video_in_TREADY);
    AXIvideo2Mat_U0->video_in_TKEEP(video_in_TKEEP);
    AXIvideo2Mat_U0->video_in_TSTRB(video_in_TSTRB);
    AXIvideo2Mat_U0->video_in_TUSER(video_in_TUSER);
    AXIvideo2Mat_U0->video_in_TLAST(video_in_TLAST);
    AXIvideo2Mat_U0->video_in_TID(video_in_TID);
    AXIvideo2Mat_U0->video_in_TDEST(video_in_TDEST);
    AXIvideo2Mat_U0->img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    AXIvideo2Mat_U0->img_data_stream_0_V_full_n(img_data_stream_0_V_full_n);
    AXIvideo2Mat_U0->img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    AXIvideo2Mat_U0->img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    AXIvideo2Mat_U0->img_data_stream_1_V_full_n(img_data_stream_1_V_full_n);
    AXIvideo2Mat_U0->img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    AXIvideo2Mat_U0->img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    AXIvideo2Mat_U0->img_data_stream_2_V_full_n(img_data_stream_2_V_full_n);
    AXIvideo2Mat_U0->img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    integralImg_U0 = new integralImg("integralImg_U0");
    integralImg_U0->ap_clk(ap_clk);
    integralImg_U0->ap_rst(ap_rst_n_inv);
    integralImg_U0->ap_start(integralImg_U0_ap_start);
    integralImg_U0->ap_done(integralImg_U0_ap_done);
    integralImg_U0->ap_continue(integralImg_U0_ap_continue);
    integralImg_U0->ap_idle(integralImg_U0_ap_idle);
    integralImg_U0->ap_ready(integralImg_U0_ap_ready);
    integralImg_U0->img_data_stream_0_V_dout(img_data_stream_0_V_dout);
    integralImg_U0->img_data_stream_0_V_empty_n(img_data_stream_0_V_empty_n);
    integralImg_U0->img_data_stream_0_V_read(integralImg_U0_img_data_stream_0_V_read);
    integralImg_U0->img_data_stream_1_V_dout(img_data_stream_1_V_dout);
    integralImg_U0->img_data_stream_1_V_empty_n(img_data_stream_1_V_empty_n);
    integralImg_U0->img_data_stream_1_V_read(integralImg_U0_img_data_stream_1_V_read);
    integralImg_U0->img_data_stream_2_V_dout(img_data_stream_2_V_dout);
    integralImg_U0->img_data_stream_2_V_empty_n(img_data_stream_2_V_empty_n);
    integralImg_U0->img_data_stream_2_V_read(integralImg_U0_img_data_stream_2_V_read);
    integralImg_U0->sum_V_din(integralImg_U0_sum_V_din);
    integralImg_U0->sum_V_full_n(sum_V_full_n);
    integralImg_U0->sum_V_write(integralImg_U0_sum_V_write);
    Block_codeRepl47_pro_U0 = new Block_codeRepl47_pro("Block_codeRepl47_pro_U0");
    Block_codeRepl47_pro_U0->ap_clk(ap_clk);
    Block_codeRepl47_pro_U0->ap_rst(ap_rst_n_inv);
    Block_codeRepl47_pro_U0->ap_start(Block_codeRepl47_pro_U0_ap_start);
    Block_codeRepl47_pro_U0->ap_done(Block_codeRepl47_pro_U0_ap_done);
    Block_codeRepl47_pro_U0->ap_continue(Block_codeRepl47_pro_U0_ap_continue);
    Block_codeRepl47_pro_U0->ap_idle(Block_codeRepl47_pro_U0_ap_idle);
    Block_codeRepl47_pro_U0->ap_ready(Block_codeRepl47_pro_U0_ap_ready);
    Block_codeRepl47_pro_U0->threshold(threshold);
    Block_codeRepl47_pro_U0->this_assign_1_out_out_din(Block_codeRepl47_pro_U0_this_assign_1_out_out_din);
    Block_codeRepl47_pro_U0->this_assign_1_out_out_full_n(this_assign_1_loc_c_full_n);
    Block_codeRepl47_pro_U0->this_assign_1_out_out_write(Block_codeRepl47_pro_U0_this_assign_1_out_out_write);
    HessianDetector_U0 = new HessianDetector("HessianDetector_U0");
    HessianDetector_U0->m_axi_keyPoints_V_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID);
    HessianDetector_U0->m_axi_keyPoints_V_AWREADY(keyPoints_AWREADY);
    HessianDetector_U0->m_axi_keyPoints_V_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR);
    HessianDetector_U0->m_axi_keyPoints_V_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID);
    HessianDetector_U0->m_axi_keyPoints_V_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN);
    HessianDetector_U0->m_axi_keyPoints_V_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE);
    HessianDetector_U0->m_axi_keyPoints_V_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST);
    HessianDetector_U0->m_axi_keyPoints_V_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK);
    HessianDetector_U0->m_axi_keyPoints_V_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE);
    HessianDetector_U0->m_axi_keyPoints_V_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT);
    HessianDetector_U0->m_axi_keyPoints_V_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS);
    HessianDetector_U0->m_axi_keyPoints_V_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION);
    HessianDetector_U0->m_axi_keyPoints_V_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER);
    HessianDetector_U0->m_axi_keyPoints_V_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID);
    HessianDetector_U0->m_axi_keyPoints_V_WREADY(keyPoints_WREADY);
    HessianDetector_U0->m_axi_keyPoints_V_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA);
    HessianDetector_U0->m_axi_keyPoints_V_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB);
    HessianDetector_U0->m_axi_keyPoints_V_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST);
    HessianDetector_U0->m_axi_keyPoints_V_WID(HessianDetector_U0_m_axi_keyPoints_V_WID);
    HessianDetector_U0->m_axi_keyPoints_V_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER);
    HessianDetector_U0->m_axi_keyPoints_V_ARVALID(HessianDetector_U0_m_axi_keyPoints_V_ARVALID);
    HessianDetector_U0->m_axi_keyPoints_V_ARREADY(ap_var_for_const1);
    HessianDetector_U0->m_axi_keyPoints_V_ARADDR(HessianDetector_U0_m_axi_keyPoints_V_ARADDR);
    HessianDetector_U0->m_axi_keyPoints_V_ARID(HessianDetector_U0_m_axi_keyPoints_V_ARID);
    HessianDetector_U0->m_axi_keyPoints_V_ARLEN(HessianDetector_U0_m_axi_keyPoints_V_ARLEN);
    HessianDetector_U0->m_axi_keyPoints_V_ARSIZE(HessianDetector_U0_m_axi_keyPoints_V_ARSIZE);
    HessianDetector_U0->m_axi_keyPoints_V_ARBURST(HessianDetector_U0_m_axi_keyPoints_V_ARBURST);
    HessianDetector_U0->m_axi_keyPoints_V_ARLOCK(HessianDetector_U0_m_axi_keyPoints_V_ARLOCK);
    HessianDetector_U0->m_axi_keyPoints_V_ARCACHE(HessianDetector_U0_m_axi_keyPoints_V_ARCACHE);
    HessianDetector_U0->m_axi_keyPoints_V_ARPROT(HessianDetector_U0_m_axi_keyPoints_V_ARPROT);
    HessianDetector_U0->m_axi_keyPoints_V_ARQOS(HessianDetector_U0_m_axi_keyPoints_V_ARQOS);
    HessianDetector_U0->m_axi_keyPoints_V_ARREGION(HessianDetector_U0_m_axi_keyPoints_V_ARREGION);
    HessianDetector_U0->m_axi_keyPoints_V_ARUSER(HessianDetector_U0_m_axi_keyPoints_V_ARUSER);
    HessianDetector_U0->m_axi_keyPoints_V_RVALID(ap_var_for_const1);
    HessianDetector_U0->m_axi_keyPoints_V_RREADY(HessianDetector_U0_m_axi_keyPoints_V_RREADY);
    HessianDetector_U0->m_axi_keyPoints_V_RDATA(ap_var_for_const2);
    HessianDetector_U0->m_axi_keyPoints_V_RLAST(ap_var_for_const1);
    HessianDetector_U0->m_axi_keyPoints_V_RID(ap_var_for_const3);
    HessianDetector_U0->m_axi_keyPoints_V_RUSER(ap_var_for_const3);
    HessianDetector_U0->m_axi_keyPoints_V_RRESP(ap_var_for_const5);
    HessianDetector_U0->m_axi_keyPoints_V_BVALID(keyPoints_BVALID);
    HessianDetector_U0->m_axi_keyPoints_V_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY);
    HessianDetector_U0->m_axi_keyPoints_V_BRESP(keyPoints_BRESP);
    HessianDetector_U0->m_axi_keyPoints_V_BID(keyPoints_BID);
    HessianDetector_U0->m_axi_keyPoints_V_BUSER(keyPoints_BUSER);
    HessianDetector_U0->keyPoints_V_offset_dout(keyPoints_V_c_dout);
    HessianDetector_U0->keyPoints_V_offset_empty_n(keyPoints_V_c_empty_n);
    HessianDetector_U0->keyPoints_V_offset_read(HessianDetector_U0_keyPoints_V_offset_read);
    HessianDetector_U0->m_axi_pointNumber_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID);
    HessianDetector_U0->m_axi_pointNumber_AWREADY(pointNumber_AWREADY);
    HessianDetector_U0->m_axi_pointNumber_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR);
    HessianDetector_U0->m_axi_pointNumber_AWID(HessianDetector_U0_m_axi_pointNumber_AWID);
    HessianDetector_U0->m_axi_pointNumber_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN);
    HessianDetector_U0->m_axi_pointNumber_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE);
    HessianDetector_U0->m_axi_pointNumber_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST);
    HessianDetector_U0->m_axi_pointNumber_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK);
    HessianDetector_U0->m_axi_pointNumber_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE);
    HessianDetector_U0->m_axi_pointNumber_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT);
    HessianDetector_U0->m_axi_pointNumber_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS);
    HessianDetector_U0->m_axi_pointNumber_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION);
    HessianDetector_U0->m_axi_pointNumber_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER);
    HessianDetector_U0->m_axi_pointNumber_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID);
    HessianDetector_U0->m_axi_pointNumber_WREADY(pointNumber_WREADY);
    HessianDetector_U0->m_axi_pointNumber_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA);
    HessianDetector_U0->m_axi_pointNumber_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB);
    HessianDetector_U0->m_axi_pointNumber_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST);
    HessianDetector_U0->m_axi_pointNumber_WID(HessianDetector_U0_m_axi_pointNumber_WID);
    HessianDetector_U0->m_axi_pointNumber_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER);
    HessianDetector_U0->m_axi_pointNumber_ARVALID(HessianDetector_U0_m_axi_pointNumber_ARVALID);
    HessianDetector_U0->m_axi_pointNumber_ARREADY(ap_var_for_const1);
    HessianDetector_U0->m_axi_pointNumber_ARADDR(HessianDetector_U0_m_axi_pointNumber_ARADDR);
    HessianDetector_U0->m_axi_pointNumber_ARID(HessianDetector_U0_m_axi_pointNumber_ARID);
    HessianDetector_U0->m_axi_pointNumber_ARLEN(HessianDetector_U0_m_axi_pointNumber_ARLEN);
    HessianDetector_U0->m_axi_pointNumber_ARSIZE(HessianDetector_U0_m_axi_pointNumber_ARSIZE);
    HessianDetector_U0->m_axi_pointNumber_ARBURST(HessianDetector_U0_m_axi_pointNumber_ARBURST);
    HessianDetector_U0->m_axi_pointNumber_ARLOCK(HessianDetector_U0_m_axi_pointNumber_ARLOCK);
    HessianDetector_U0->m_axi_pointNumber_ARCACHE(HessianDetector_U0_m_axi_pointNumber_ARCACHE);
    HessianDetector_U0->m_axi_pointNumber_ARPROT(HessianDetector_U0_m_axi_pointNumber_ARPROT);
    HessianDetector_U0->m_axi_pointNumber_ARQOS(HessianDetector_U0_m_axi_pointNumber_ARQOS);
    HessianDetector_U0->m_axi_pointNumber_ARREGION(HessianDetector_U0_m_axi_pointNumber_ARREGION);
    HessianDetector_U0->m_axi_pointNumber_ARUSER(HessianDetector_U0_m_axi_pointNumber_ARUSER);
    HessianDetector_U0->m_axi_pointNumber_RVALID(ap_var_for_const1);
    HessianDetector_U0->m_axi_pointNumber_RREADY(HessianDetector_U0_m_axi_pointNumber_RREADY);
    HessianDetector_U0->m_axi_pointNumber_RDATA(ap_var_for_const2);
    HessianDetector_U0->m_axi_pointNumber_RLAST(ap_var_for_const1);
    HessianDetector_U0->m_axi_pointNumber_RID(ap_var_for_const3);
    HessianDetector_U0->m_axi_pointNumber_RUSER(ap_var_for_const3);
    HessianDetector_U0->m_axi_pointNumber_RRESP(ap_var_for_const5);
    HessianDetector_U0->m_axi_pointNumber_BVALID(pointNumber_BVALID);
    HessianDetector_U0->m_axi_pointNumber_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY);
    HessianDetector_U0->m_axi_pointNumber_BRESP(pointNumber_BRESP);
    HessianDetector_U0->m_axi_pointNumber_BID(pointNumber_BID);
    HessianDetector_U0->m_axi_pointNumber_BUSER(pointNumber_BUSER);
    HessianDetector_U0->pointNumber_offset_dout(kpn_c_dout);
    HessianDetector_U0->pointNumber_offset_empty_n(kpn_c_empty_n);
    HessianDetector_U0->pointNumber_offset_read(HessianDetector_U0_pointNumber_offset_read);
    HessianDetector_U0->this_assign_1_loc_dout(this_assign_1_loc_c_dout);
    HessianDetector_U0->this_assign_1_loc_empty_n(this_assign_1_loc_c_empty_n);
    HessianDetector_U0->this_assign_1_loc_read(HessianDetector_U0_this_assign_1_loc_read);
    HessianDetector_U0->sum_V_dout(sum_V_dout);
    HessianDetector_U0->sum_V_empty_n(sum_V_empty_n);
    HessianDetector_U0->sum_V_read(HessianDetector_U0_sum_V_read);
    HessianDetector_U0->ap_clk(ap_clk);
    HessianDetector_U0->ap_rst(ap_rst_n_inv);
    HessianDetector_U0->ap_start(HessianDetector_U0_ap_start);
    HessianDetector_U0->ap_done(HessianDetector_U0_ap_done);
    HessianDetector_U0->ap_ready(HessianDetector_U0_ap_ready);
    HessianDetector_U0->ap_idle(HessianDetector_U0_ap_idle);
    HessianDetector_U0->ap_continue(HessianDetector_U0_ap_continue);
    keyPoints_V_c_U = new fifo_w32_d3_A("keyPoints_V_c_U");
    keyPoints_V_c_U->clk(ap_clk);
    keyPoints_V_c_U->reset(ap_rst_n_inv);
    keyPoints_V_c_U->if_read_ce(ap_var_for_const0);
    keyPoints_V_c_U->if_write_ce(ap_var_for_const0);
    keyPoints_V_c_U->if_din(surf_Simplified_entr_U0_keyPoints_V_out_din);
    keyPoints_V_c_U->if_full_n(keyPoints_V_c_full_n);
    keyPoints_V_c_U->if_write(surf_Simplified_entr_U0_keyPoints_V_out_write);
    keyPoints_V_c_U->if_dout(keyPoints_V_c_dout);
    keyPoints_V_c_U->if_empty_n(keyPoints_V_c_empty_n);
    keyPoints_V_c_U->if_read(HessianDetector_U0_keyPoints_V_offset_read);
    kpn_c_U = new fifo_w32_d3_A("kpn_c_U");
    kpn_c_U->clk(ap_clk);
    kpn_c_U->reset(ap_rst_n_inv);
    kpn_c_U->if_read_ce(ap_var_for_const0);
    kpn_c_U->if_write_ce(ap_var_for_const0);
    kpn_c_U->if_din(surf_Simplified_entr_U0_kpn_out_din);
    kpn_c_U->if_full_n(kpn_c_full_n);
    kpn_c_U->if_write(surf_Simplified_entr_U0_kpn_out_write);
    kpn_c_U->if_dout(kpn_c_dout);
    kpn_c_U->if_empty_n(kpn_c_empty_n);
    kpn_c_U->if_read(HessianDetector_U0_pointNumber_offset_read);
    img_data_stream_0_V_U = new fifo_w8_d2_A("img_data_stream_0_V_U");
    img_data_stream_0_V_U->clk(ap_clk);
    img_data_stream_0_V_U->reset(ap_rst_n_inv);
    img_data_stream_0_V_U->if_read_ce(ap_var_for_const0);
    img_data_stream_0_V_U->if_write_ce(ap_var_for_const0);
    img_data_stream_0_V_U->if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    img_data_stream_0_V_U->if_full_n(img_data_stream_0_V_full_n);
    img_data_stream_0_V_U->if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    img_data_stream_0_V_U->if_dout(img_data_stream_0_V_dout);
    img_data_stream_0_V_U->if_empty_n(img_data_stream_0_V_empty_n);
    img_data_stream_0_V_U->if_read(integralImg_U0_img_data_stream_0_V_read);
    img_data_stream_1_V_U = new fifo_w8_d2_A("img_data_stream_1_V_U");
    img_data_stream_1_V_U->clk(ap_clk);
    img_data_stream_1_V_U->reset(ap_rst_n_inv);
    img_data_stream_1_V_U->if_read_ce(ap_var_for_const0);
    img_data_stream_1_V_U->if_write_ce(ap_var_for_const0);
    img_data_stream_1_V_U->if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    img_data_stream_1_V_U->if_full_n(img_data_stream_1_V_full_n);
    img_data_stream_1_V_U->if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    img_data_stream_1_V_U->if_dout(img_data_stream_1_V_dout);
    img_data_stream_1_V_U->if_empty_n(img_data_stream_1_V_empty_n);
    img_data_stream_1_V_U->if_read(integralImg_U0_img_data_stream_1_V_read);
    img_data_stream_2_V_U = new fifo_w8_d2_A("img_data_stream_2_V_U");
    img_data_stream_2_V_U->clk(ap_clk);
    img_data_stream_2_V_U->reset(ap_rst_n_inv);
    img_data_stream_2_V_U->if_read_ce(ap_var_for_const0);
    img_data_stream_2_V_U->if_write_ce(ap_var_for_const0);
    img_data_stream_2_V_U->if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    img_data_stream_2_V_U->if_full_n(img_data_stream_2_V_full_n);
    img_data_stream_2_V_U->if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    img_data_stream_2_V_U->if_dout(img_data_stream_2_V_dout);
    img_data_stream_2_V_U->if_empty_n(img_data_stream_2_V_empty_n);
    img_data_stream_2_V_U->if_read(integralImg_U0_img_data_stream_2_V_read);
    sum_V_U = new fifo_w32_d2_A_x("sum_V_U");
    sum_V_U->clk(ap_clk);
    sum_V_U->reset(ap_rst_n_inv);
    sum_V_U->if_read_ce(ap_var_for_const0);
    sum_V_U->if_write_ce(ap_var_for_const0);
    sum_V_U->if_din(integralImg_U0_sum_V_din);
    sum_V_U->if_full_n(sum_V_full_n);
    sum_V_U->if_write(integralImg_U0_sum_V_write);
    sum_V_U->if_dout(sum_V_dout);
    sum_V_U->if_empty_n(sum_V_empty_n);
    sum_V_U->if_read(HessianDetector_U0_sum_V_read);
    this_assign_1_loc_c_U = new fifo_w32_d3_A("this_assign_1_loc_c_U");
    this_assign_1_loc_c_U->clk(ap_clk);
    this_assign_1_loc_c_U->reset(ap_rst_n_inv);
    this_assign_1_loc_c_U->if_read_ce(ap_var_for_const0);
    this_assign_1_loc_c_U->if_write_ce(ap_var_for_const0);
    this_assign_1_loc_c_U->if_din(Block_codeRepl47_pro_U0_this_assign_1_out_out_din);
    this_assign_1_loc_c_U->if_full_n(this_assign_1_loc_c_full_n);
    this_assign_1_loc_c_U->if_write(Block_codeRepl47_pro_U0_this_assign_1_out_out_write);
    this_assign_1_loc_c_U->if_dout(this_assign_1_loc_c_dout);
    this_assign_1_loc_c_U->if_empty_n(this_assign_1_loc_c_empty_n);
    this_assign_1_loc_c_U->if_read(HessianDetector_U0_this_assign_1_loc_read);
    start_for_HessianxdS_U = new start_for_HessianxdS("start_for_HessianxdS_U");
    start_for_HessianxdS_U->clk(ap_clk);
    start_for_HessianxdS_U->reset(ap_rst_n_inv);
    start_for_HessianxdS_U->if_read_ce(ap_var_for_const0);
    start_for_HessianxdS_U->if_write_ce(ap_var_for_const0);
    start_for_HessianxdS_U->if_din(start_for_HessianDetector_U0_din);
    start_for_HessianxdS_U->if_full_n(start_for_HessianDetector_U0_full_n);
    start_for_HessianxdS_U->if_write(surf_Simplified_entr_U0_start_write);
    start_for_HessianxdS_U->if_dout(start_for_HessianDetector_U0_dout);
    start_for_HessianxdS_U->if_empty_n(start_for_HessianDetector_U0_empty_n);
    start_for_HessianxdS_U->if_read(HessianDetector_U0_ap_ready);
    start_for_integrayd2_U = new start_for_integrayd2("start_for_integrayd2_U");
    start_for_integrayd2_U->clk(ap_clk);
    start_for_integrayd2_U->reset(ap_rst_n_inv);
    start_for_integrayd2_U->if_read_ce(ap_var_for_const0);
    start_for_integrayd2_U->if_write_ce(ap_var_for_const0);
    start_for_integrayd2_U->if_din(start_for_integralImg_U0_din);
    start_for_integrayd2_U->if_full_n(start_for_integralImg_U0_full_n);
    start_for_integrayd2_U->if_write(AXIvideo2Mat_U0_start_write);
    start_for_integrayd2_U->if_dout(start_for_integralImg_U0_dout);
    start_for_integrayd2_U->if_empty_n(start_for_integralImg_U0_empty_n);
    start_for_integrayd2_U->if_read(integralImg_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_Block_codeRepl47_pro_U0_ap_continue);

    SC_METHOD(thread_Block_codeRepl47_pro_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready );

    SC_METHOD(thread_Block_codeRepl47_pro_U0_start_full_n);

    SC_METHOD(thread_Block_codeRepl47_pro_U0_start_write);

    SC_METHOD(thread_HessianDetector_U0_ap_continue);

    SC_METHOD(thread_HessianDetector_U0_ap_start);
    sensitive << ( start_for_HessianDetector_U0_empty_n );

    SC_METHOD(thread_HessianDetector_U0_start_full_n);

    SC_METHOD(thread_HessianDetector_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( HessianDetector_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( surf_Simplified_entr_U0_ap_idle );
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( integralImg_U0_ap_idle );
    sensitive << ( Block_codeRepl47_pro_U0_ap_idle );
    sensitive << ( HessianDetector_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_AXIvideo2Mat_U0_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_Block_codeRepl47_pro_U0_ap_ready);
    sensitive << ( Block_codeRepl47_pro_U0_ap_ready );
    sensitive << ( ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( HessianDetector_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_surf_Simplified_entr_U0_ap_ready );
    sensitive << ( ap_sync_AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_Block_codeRepl47_pro_U0_ap_ready );

    SC_METHOD(thread_ap_sync_surf_Simplified_entr_U0_ap_ready);
    sensitive << ( surf_Simplified_entr_U0_ap_ready );
    sensitive << ( ap_sync_reg_surf_Simplified_entr_U0_ap_ready );

    SC_METHOD(thread_integralImg_U0_ap_continue);

    SC_METHOD(thread_integralImg_U0_ap_start);
    sensitive << ( start_for_integralImg_U0_empty_n );

    SC_METHOD(thread_integralImg_U0_start_full_n);

    SC_METHOD(thread_integralImg_U0_start_write);

    SC_METHOD(thread_start_for_HessianDetector_U0_din);

    SC_METHOD(thread_start_for_integralImg_U0_din);

    SC_METHOD(thread_surf_Simplified_entr_U0_ap_continue);

    SC_METHOD(thread_surf_Simplified_entr_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_surf_Simplified_entr_U0_ap_ready );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( AXIvideo2Mat_U0_video_in_TREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const6);

    ap_sync_reg_surf_Simplified_entr_U0_ap_ready = SC_LOGIC_0;
    surf_Simplified_entr_U0_ap_ready_count = "00";
    ap_sync_reg_AXIvideo2Mat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2Mat_U0_ap_ready_count = "00";
    ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready = SC_LOGIC_0;
    Block_codeRepl47_pro_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "surf_Simplified_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_threshold_AWVALID, "(port)s_axi_threshold_AWVALID");
    sc_trace(mVcdFile, s_axi_threshold_AWREADY, "(port)s_axi_threshold_AWREADY");
    sc_trace(mVcdFile, s_axi_threshold_AWADDR, "(port)s_axi_threshold_AWADDR");
    sc_trace(mVcdFile, s_axi_threshold_WVALID, "(port)s_axi_threshold_WVALID");
    sc_trace(mVcdFile, s_axi_threshold_WREADY, "(port)s_axi_threshold_WREADY");
    sc_trace(mVcdFile, s_axi_threshold_WDATA, "(port)s_axi_threshold_WDATA");
    sc_trace(mVcdFile, s_axi_threshold_WSTRB, "(port)s_axi_threshold_WSTRB");
    sc_trace(mVcdFile, s_axi_threshold_ARVALID, "(port)s_axi_threshold_ARVALID");
    sc_trace(mVcdFile, s_axi_threshold_ARREADY, "(port)s_axi_threshold_ARREADY");
    sc_trace(mVcdFile, s_axi_threshold_ARADDR, "(port)s_axi_threshold_ARADDR");
    sc_trace(mVcdFile, s_axi_threshold_RVALID, "(port)s_axi_threshold_RVALID");
    sc_trace(mVcdFile, s_axi_threshold_RREADY, "(port)s_axi_threshold_RREADY");
    sc_trace(mVcdFile, s_axi_threshold_RDATA, "(port)s_axi_threshold_RDATA");
    sc_trace(mVcdFile, s_axi_threshold_RRESP, "(port)s_axi_threshold_RRESP");
    sc_trace(mVcdFile, s_axi_threshold_BVALID, "(port)s_axi_threshold_BVALID");
    sc_trace(mVcdFile, s_axi_threshold_BREADY, "(port)s_axi_threshold_BREADY");
    sc_trace(mVcdFile, s_axi_threshold_BRESP, "(port)s_axi_threshold_BRESP");
    sc_trace(mVcdFile, m_axi_keyPoints_AWVALID, "(port)m_axi_keyPoints_AWVALID");
    sc_trace(mVcdFile, m_axi_keyPoints_AWREADY, "(port)m_axi_keyPoints_AWREADY");
    sc_trace(mVcdFile, m_axi_keyPoints_AWADDR, "(port)m_axi_keyPoints_AWADDR");
    sc_trace(mVcdFile, m_axi_keyPoints_AWID, "(port)m_axi_keyPoints_AWID");
    sc_trace(mVcdFile, m_axi_keyPoints_AWLEN, "(port)m_axi_keyPoints_AWLEN");
    sc_trace(mVcdFile, m_axi_keyPoints_AWSIZE, "(port)m_axi_keyPoints_AWSIZE");
    sc_trace(mVcdFile, m_axi_keyPoints_AWBURST, "(port)m_axi_keyPoints_AWBURST");
    sc_trace(mVcdFile, m_axi_keyPoints_AWLOCK, "(port)m_axi_keyPoints_AWLOCK");
    sc_trace(mVcdFile, m_axi_keyPoints_AWCACHE, "(port)m_axi_keyPoints_AWCACHE");
    sc_trace(mVcdFile, m_axi_keyPoints_AWPROT, "(port)m_axi_keyPoints_AWPROT");
    sc_trace(mVcdFile, m_axi_keyPoints_AWQOS, "(port)m_axi_keyPoints_AWQOS");
    sc_trace(mVcdFile, m_axi_keyPoints_AWREGION, "(port)m_axi_keyPoints_AWREGION");
    sc_trace(mVcdFile, m_axi_keyPoints_AWUSER, "(port)m_axi_keyPoints_AWUSER");
    sc_trace(mVcdFile, m_axi_keyPoints_WVALID, "(port)m_axi_keyPoints_WVALID");
    sc_trace(mVcdFile, m_axi_keyPoints_WREADY, "(port)m_axi_keyPoints_WREADY");
    sc_trace(mVcdFile, m_axi_keyPoints_WDATA, "(port)m_axi_keyPoints_WDATA");
    sc_trace(mVcdFile, m_axi_keyPoints_WSTRB, "(port)m_axi_keyPoints_WSTRB");
    sc_trace(mVcdFile, m_axi_keyPoints_WLAST, "(port)m_axi_keyPoints_WLAST");
    sc_trace(mVcdFile, m_axi_keyPoints_WID, "(port)m_axi_keyPoints_WID");
    sc_trace(mVcdFile, m_axi_keyPoints_WUSER, "(port)m_axi_keyPoints_WUSER");
    sc_trace(mVcdFile, m_axi_keyPoints_ARVALID, "(port)m_axi_keyPoints_ARVALID");
    sc_trace(mVcdFile, m_axi_keyPoints_ARREADY, "(port)m_axi_keyPoints_ARREADY");
    sc_trace(mVcdFile, m_axi_keyPoints_ARADDR, "(port)m_axi_keyPoints_ARADDR");
    sc_trace(mVcdFile, m_axi_keyPoints_ARID, "(port)m_axi_keyPoints_ARID");
    sc_trace(mVcdFile, m_axi_keyPoints_ARLEN, "(port)m_axi_keyPoints_ARLEN");
    sc_trace(mVcdFile, m_axi_keyPoints_ARSIZE, "(port)m_axi_keyPoints_ARSIZE");
    sc_trace(mVcdFile, m_axi_keyPoints_ARBURST, "(port)m_axi_keyPoints_ARBURST");
    sc_trace(mVcdFile, m_axi_keyPoints_ARLOCK, "(port)m_axi_keyPoints_ARLOCK");
    sc_trace(mVcdFile, m_axi_keyPoints_ARCACHE, "(port)m_axi_keyPoints_ARCACHE");
    sc_trace(mVcdFile, m_axi_keyPoints_ARPROT, "(port)m_axi_keyPoints_ARPROT");
    sc_trace(mVcdFile, m_axi_keyPoints_ARQOS, "(port)m_axi_keyPoints_ARQOS");
    sc_trace(mVcdFile, m_axi_keyPoints_ARREGION, "(port)m_axi_keyPoints_ARREGION");
    sc_trace(mVcdFile, m_axi_keyPoints_ARUSER, "(port)m_axi_keyPoints_ARUSER");
    sc_trace(mVcdFile, m_axi_keyPoints_RVALID, "(port)m_axi_keyPoints_RVALID");
    sc_trace(mVcdFile, m_axi_keyPoints_RREADY, "(port)m_axi_keyPoints_RREADY");
    sc_trace(mVcdFile, m_axi_keyPoints_RDATA, "(port)m_axi_keyPoints_RDATA");
    sc_trace(mVcdFile, m_axi_keyPoints_RLAST, "(port)m_axi_keyPoints_RLAST");
    sc_trace(mVcdFile, m_axi_keyPoints_RID, "(port)m_axi_keyPoints_RID");
    sc_trace(mVcdFile, m_axi_keyPoints_RUSER, "(port)m_axi_keyPoints_RUSER");
    sc_trace(mVcdFile, m_axi_keyPoints_RRESP, "(port)m_axi_keyPoints_RRESP");
    sc_trace(mVcdFile, m_axi_keyPoints_BVALID, "(port)m_axi_keyPoints_BVALID");
    sc_trace(mVcdFile, m_axi_keyPoints_BREADY, "(port)m_axi_keyPoints_BREADY");
    sc_trace(mVcdFile, m_axi_keyPoints_BRESP, "(port)m_axi_keyPoints_BRESP");
    sc_trace(mVcdFile, m_axi_keyPoints_BID, "(port)m_axi_keyPoints_BID");
    sc_trace(mVcdFile, m_axi_keyPoints_BUSER, "(port)m_axi_keyPoints_BUSER");
    sc_trace(mVcdFile, m_axi_pointNumber_AWVALID, "(port)m_axi_pointNumber_AWVALID");
    sc_trace(mVcdFile, m_axi_pointNumber_AWREADY, "(port)m_axi_pointNumber_AWREADY");
    sc_trace(mVcdFile, m_axi_pointNumber_AWADDR, "(port)m_axi_pointNumber_AWADDR");
    sc_trace(mVcdFile, m_axi_pointNumber_AWID, "(port)m_axi_pointNumber_AWID");
    sc_trace(mVcdFile, m_axi_pointNumber_AWLEN, "(port)m_axi_pointNumber_AWLEN");
    sc_trace(mVcdFile, m_axi_pointNumber_AWSIZE, "(port)m_axi_pointNumber_AWSIZE");
    sc_trace(mVcdFile, m_axi_pointNumber_AWBURST, "(port)m_axi_pointNumber_AWBURST");
    sc_trace(mVcdFile, m_axi_pointNumber_AWLOCK, "(port)m_axi_pointNumber_AWLOCK");
    sc_trace(mVcdFile, m_axi_pointNumber_AWCACHE, "(port)m_axi_pointNumber_AWCACHE");
    sc_trace(mVcdFile, m_axi_pointNumber_AWPROT, "(port)m_axi_pointNumber_AWPROT");
    sc_trace(mVcdFile, m_axi_pointNumber_AWQOS, "(port)m_axi_pointNumber_AWQOS");
    sc_trace(mVcdFile, m_axi_pointNumber_AWREGION, "(port)m_axi_pointNumber_AWREGION");
    sc_trace(mVcdFile, m_axi_pointNumber_AWUSER, "(port)m_axi_pointNumber_AWUSER");
    sc_trace(mVcdFile, m_axi_pointNumber_WVALID, "(port)m_axi_pointNumber_WVALID");
    sc_trace(mVcdFile, m_axi_pointNumber_WREADY, "(port)m_axi_pointNumber_WREADY");
    sc_trace(mVcdFile, m_axi_pointNumber_WDATA, "(port)m_axi_pointNumber_WDATA");
    sc_trace(mVcdFile, m_axi_pointNumber_WSTRB, "(port)m_axi_pointNumber_WSTRB");
    sc_trace(mVcdFile, m_axi_pointNumber_WLAST, "(port)m_axi_pointNumber_WLAST");
    sc_trace(mVcdFile, m_axi_pointNumber_WID, "(port)m_axi_pointNumber_WID");
    sc_trace(mVcdFile, m_axi_pointNumber_WUSER, "(port)m_axi_pointNumber_WUSER");
    sc_trace(mVcdFile, m_axi_pointNumber_ARVALID, "(port)m_axi_pointNumber_ARVALID");
    sc_trace(mVcdFile, m_axi_pointNumber_ARREADY, "(port)m_axi_pointNumber_ARREADY");
    sc_trace(mVcdFile, m_axi_pointNumber_ARADDR, "(port)m_axi_pointNumber_ARADDR");
    sc_trace(mVcdFile, m_axi_pointNumber_ARID, "(port)m_axi_pointNumber_ARID");
    sc_trace(mVcdFile, m_axi_pointNumber_ARLEN, "(port)m_axi_pointNumber_ARLEN");
    sc_trace(mVcdFile, m_axi_pointNumber_ARSIZE, "(port)m_axi_pointNumber_ARSIZE");
    sc_trace(mVcdFile, m_axi_pointNumber_ARBURST, "(port)m_axi_pointNumber_ARBURST");
    sc_trace(mVcdFile, m_axi_pointNumber_ARLOCK, "(port)m_axi_pointNumber_ARLOCK");
    sc_trace(mVcdFile, m_axi_pointNumber_ARCACHE, "(port)m_axi_pointNumber_ARCACHE");
    sc_trace(mVcdFile, m_axi_pointNumber_ARPROT, "(port)m_axi_pointNumber_ARPROT");
    sc_trace(mVcdFile, m_axi_pointNumber_ARQOS, "(port)m_axi_pointNumber_ARQOS");
    sc_trace(mVcdFile, m_axi_pointNumber_ARREGION, "(port)m_axi_pointNumber_ARREGION");
    sc_trace(mVcdFile, m_axi_pointNumber_ARUSER, "(port)m_axi_pointNumber_ARUSER");
    sc_trace(mVcdFile, m_axi_pointNumber_RVALID, "(port)m_axi_pointNumber_RVALID");
    sc_trace(mVcdFile, m_axi_pointNumber_RREADY, "(port)m_axi_pointNumber_RREADY");
    sc_trace(mVcdFile, m_axi_pointNumber_RDATA, "(port)m_axi_pointNumber_RDATA");
    sc_trace(mVcdFile, m_axi_pointNumber_RLAST, "(port)m_axi_pointNumber_RLAST");
    sc_trace(mVcdFile, m_axi_pointNumber_RID, "(port)m_axi_pointNumber_RID");
    sc_trace(mVcdFile, m_axi_pointNumber_RUSER, "(port)m_axi_pointNumber_RUSER");
    sc_trace(mVcdFile, m_axi_pointNumber_RRESP, "(port)m_axi_pointNumber_RRESP");
    sc_trace(mVcdFile, m_axi_pointNumber_BVALID, "(port)m_axi_pointNumber_BVALID");
    sc_trace(mVcdFile, m_axi_pointNumber_BREADY, "(port)m_axi_pointNumber_BREADY");
    sc_trace(mVcdFile, m_axi_pointNumber_BRESP, "(port)m_axi_pointNumber_BRESP");
    sc_trace(mVcdFile, m_axi_pointNumber_BID, "(port)m_axi_pointNumber_BID");
    sc_trace(mVcdFile, m_axi_pointNumber_BUSER, "(port)m_axi_pointNumber_BUSER");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_in_TID, "(port)video_in_TID");
    sc_trace(mVcdFile, video_in_TDEST, "(port)video_in_TDEST");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, keyPoints_V, "keyPoints_V");
    sc_trace(mVcdFile, kpn, "kpn");
    sc_trace(mVcdFile, threshold, "threshold");
    sc_trace(mVcdFile, keyPoints_AWREADY, "keyPoints_AWREADY");
    sc_trace(mVcdFile, keyPoints_WREADY, "keyPoints_WREADY");
    sc_trace(mVcdFile, keyPoints_ARREADY, "keyPoints_ARREADY");
    sc_trace(mVcdFile, keyPoints_RVALID, "keyPoints_RVALID");
    sc_trace(mVcdFile, keyPoints_RDATA, "keyPoints_RDATA");
    sc_trace(mVcdFile, keyPoints_RLAST, "keyPoints_RLAST");
    sc_trace(mVcdFile, keyPoints_RID, "keyPoints_RID");
    sc_trace(mVcdFile, keyPoints_RUSER, "keyPoints_RUSER");
    sc_trace(mVcdFile, keyPoints_RRESP, "keyPoints_RRESP");
    sc_trace(mVcdFile, keyPoints_BVALID, "keyPoints_BVALID");
    sc_trace(mVcdFile, keyPoints_BRESP, "keyPoints_BRESP");
    sc_trace(mVcdFile, keyPoints_BID, "keyPoints_BID");
    sc_trace(mVcdFile, keyPoints_BUSER, "keyPoints_BUSER");
    sc_trace(mVcdFile, pointNumber_AWREADY, "pointNumber_AWREADY");
    sc_trace(mVcdFile, pointNumber_WREADY, "pointNumber_WREADY");
    sc_trace(mVcdFile, pointNumber_ARREADY, "pointNumber_ARREADY");
    sc_trace(mVcdFile, pointNumber_RVALID, "pointNumber_RVALID");
    sc_trace(mVcdFile, pointNumber_RDATA, "pointNumber_RDATA");
    sc_trace(mVcdFile, pointNumber_RLAST, "pointNumber_RLAST");
    sc_trace(mVcdFile, pointNumber_RID, "pointNumber_RID");
    sc_trace(mVcdFile, pointNumber_RUSER, "pointNumber_RUSER");
    sc_trace(mVcdFile, pointNumber_RRESP, "pointNumber_RRESP");
    sc_trace(mVcdFile, pointNumber_BVALID, "pointNumber_BVALID");
    sc_trace(mVcdFile, pointNumber_BRESP, "pointNumber_BRESP");
    sc_trace(mVcdFile, pointNumber_BID, "pointNumber_BID");
    sc_trace(mVcdFile, pointNumber_BUSER, "pointNumber_BUSER");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_start, "surf_Simplified_entr_U0_ap_start");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_done, "surf_Simplified_entr_U0_ap_done");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_continue, "surf_Simplified_entr_U0_ap_continue");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_idle, "surf_Simplified_entr_U0_ap_idle");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_ready, "surf_Simplified_entr_U0_ap_ready");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_start_out, "surf_Simplified_entr_U0_start_out");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_start_write, "surf_Simplified_entr_U0_start_write");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_keyPoints_V_out_din, "surf_Simplified_entr_U0_keyPoints_V_out_din");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_keyPoints_V_out_write, "surf_Simplified_entr_U0_keyPoints_V_out_write");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_kpn_out_din, "surf_Simplified_entr_U0_kpn_out_din");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_kpn_out_write, "surf_Simplified_entr_U0_kpn_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_out, "AXIvideo2Mat_U0_start_out");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_video_in_TREADY, "AXIvideo2Mat_U0_video_in_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_din, "AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_write, "AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_din, "AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_write, "AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_din, "AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_write, "AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, integralImg_U0_ap_start, "integralImg_U0_ap_start");
    sc_trace(mVcdFile, integralImg_U0_ap_done, "integralImg_U0_ap_done");
    sc_trace(mVcdFile, integralImg_U0_ap_continue, "integralImg_U0_ap_continue");
    sc_trace(mVcdFile, integralImg_U0_ap_idle, "integralImg_U0_ap_idle");
    sc_trace(mVcdFile, integralImg_U0_ap_ready, "integralImg_U0_ap_ready");
    sc_trace(mVcdFile, integralImg_U0_img_data_stream_0_V_read, "integralImg_U0_img_data_stream_0_V_read");
    sc_trace(mVcdFile, integralImg_U0_img_data_stream_1_V_read, "integralImg_U0_img_data_stream_1_V_read");
    sc_trace(mVcdFile, integralImg_U0_img_data_stream_2_V_read, "integralImg_U0_img_data_stream_2_V_read");
    sc_trace(mVcdFile, integralImg_U0_sum_V_din, "integralImg_U0_sum_V_din");
    sc_trace(mVcdFile, integralImg_U0_sum_V_write, "integralImg_U0_sum_V_write");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_start, "Block_codeRepl47_pro_U0_ap_start");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_done, "Block_codeRepl47_pro_U0_ap_done");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_continue, "Block_codeRepl47_pro_U0_ap_continue");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_idle, "Block_codeRepl47_pro_U0_ap_idle");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_ready, "Block_codeRepl47_pro_U0_ap_ready");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_this_assign_1_out_out_din, "Block_codeRepl47_pro_U0_this_assign_1_out_out_din");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_this_assign_1_out_out_write, "Block_codeRepl47_pro_U0_this_assign_1_out_out_write");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWVALID, "HessianDetector_U0_m_axi_keyPoints_V_AWVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWADDR, "HessianDetector_U0_m_axi_keyPoints_V_AWADDR");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWID, "HessianDetector_U0_m_axi_keyPoints_V_AWID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWLEN, "HessianDetector_U0_m_axi_keyPoints_V_AWLEN");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWSIZE, "HessianDetector_U0_m_axi_keyPoints_V_AWSIZE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWBURST, "HessianDetector_U0_m_axi_keyPoints_V_AWBURST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWLOCK, "HessianDetector_U0_m_axi_keyPoints_V_AWLOCK");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWCACHE, "HessianDetector_U0_m_axi_keyPoints_V_AWCACHE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWPROT, "HessianDetector_U0_m_axi_keyPoints_V_AWPROT");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWQOS, "HessianDetector_U0_m_axi_keyPoints_V_AWQOS");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWREGION, "HessianDetector_U0_m_axi_keyPoints_V_AWREGION");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_AWUSER, "HessianDetector_U0_m_axi_keyPoints_V_AWUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WVALID, "HessianDetector_U0_m_axi_keyPoints_V_WVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WDATA, "HessianDetector_U0_m_axi_keyPoints_V_WDATA");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WSTRB, "HessianDetector_U0_m_axi_keyPoints_V_WSTRB");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WLAST, "HessianDetector_U0_m_axi_keyPoints_V_WLAST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WID, "HessianDetector_U0_m_axi_keyPoints_V_WID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_WUSER, "HessianDetector_U0_m_axi_keyPoints_V_WUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARVALID, "HessianDetector_U0_m_axi_keyPoints_V_ARVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARADDR, "HessianDetector_U0_m_axi_keyPoints_V_ARADDR");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARID, "HessianDetector_U0_m_axi_keyPoints_V_ARID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARLEN, "HessianDetector_U0_m_axi_keyPoints_V_ARLEN");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARSIZE, "HessianDetector_U0_m_axi_keyPoints_V_ARSIZE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARBURST, "HessianDetector_U0_m_axi_keyPoints_V_ARBURST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARLOCK, "HessianDetector_U0_m_axi_keyPoints_V_ARLOCK");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARCACHE, "HessianDetector_U0_m_axi_keyPoints_V_ARCACHE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARPROT, "HessianDetector_U0_m_axi_keyPoints_V_ARPROT");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARQOS, "HessianDetector_U0_m_axi_keyPoints_V_ARQOS");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARREGION, "HessianDetector_U0_m_axi_keyPoints_V_ARREGION");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_ARUSER, "HessianDetector_U0_m_axi_keyPoints_V_ARUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_RREADY, "HessianDetector_U0_m_axi_keyPoints_V_RREADY");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_keyPoints_V_BREADY, "HessianDetector_U0_m_axi_keyPoints_V_BREADY");
    sc_trace(mVcdFile, HessianDetector_U0_keyPoints_V_offset_read, "HessianDetector_U0_keyPoints_V_offset_read");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWVALID, "HessianDetector_U0_m_axi_pointNumber_AWVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWADDR, "HessianDetector_U0_m_axi_pointNumber_AWADDR");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWID, "HessianDetector_U0_m_axi_pointNumber_AWID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWLEN, "HessianDetector_U0_m_axi_pointNumber_AWLEN");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWSIZE, "HessianDetector_U0_m_axi_pointNumber_AWSIZE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWBURST, "HessianDetector_U0_m_axi_pointNumber_AWBURST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWLOCK, "HessianDetector_U0_m_axi_pointNumber_AWLOCK");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWCACHE, "HessianDetector_U0_m_axi_pointNumber_AWCACHE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWPROT, "HessianDetector_U0_m_axi_pointNumber_AWPROT");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWQOS, "HessianDetector_U0_m_axi_pointNumber_AWQOS");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWREGION, "HessianDetector_U0_m_axi_pointNumber_AWREGION");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_AWUSER, "HessianDetector_U0_m_axi_pointNumber_AWUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WVALID, "HessianDetector_U0_m_axi_pointNumber_WVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WDATA, "HessianDetector_U0_m_axi_pointNumber_WDATA");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WSTRB, "HessianDetector_U0_m_axi_pointNumber_WSTRB");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WLAST, "HessianDetector_U0_m_axi_pointNumber_WLAST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WID, "HessianDetector_U0_m_axi_pointNumber_WID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_WUSER, "HessianDetector_U0_m_axi_pointNumber_WUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARVALID, "HessianDetector_U0_m_axi_pointNumber_ARVALID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARADDR, "HessianDetector_U0_m_axi_pointNumber_ARADDR");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARID, "HessianDetector_U0_m_axi_pointNumber_ARID");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARLEN, "HessianDetector_U0_m_axi_pointNumber_ARLEN");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARSIZE, "HessianDetector_U0_m_axi_pointNumber_ARSIZE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARBURST, "HessianDetector_U0_m_axi_pointNumber_ARBURST");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARLOCK, "HessianDetector_U0_m_axi_pointNumber_ARLOCK");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARCACHE, "HessianDetector_U0_m_axi_pointNumber_ARCACHE");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARPROT, "HessianDetector_U0_m_axi_pointNumber_ARPROT");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARQOS, "HessianDetector_U0_m_axi_pointNumber_ARQOS");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARREGION, "HessianDetector_U0_m_axi_pointNumber_ARREGION");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_ARUSER, "HessianDetector_U0_m_axi_pointNumber_ARUSER");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_RREADY, "HessianDetector_U0_m_axi_pointNumber_RREADY");
    sc_trace(mVcdFile, HessianDetector_U0_m_axi_pointNumber_BREADY, "HessianDetector_U0_m_axi_pointNumber_BREADY");
    sc_trace(mVcdFile, HessianDetector_U0_pointNumber_offset_read, "HessianDetector_U0_pointNumber_offset_read");
    sc_trace(mVcdFile, HessianDetector_U0_this_assign_1_loc_read, "HessianDetector_U0_this_assign_1_loc_read");
    sc_trace(mVcdFile, HessianDetector_U0_sum_V_read, "HessianDetector_U0_sum_V_read");
    sc_trace(mVcdFile, HessianDetector_U0_ap_start, "HessianDetector_U0_ap_start");
    sc_trace(mVcdFile, HessianDetector_U0_ap_done, "HessianDetector_U0_ap_done");
    sc_trace(mVcdFile, HessianDetector_U0_ap_ready, "HessianDetector_U0_ap_ready");
    sc_trace(mVcdFile, HessianDetector_U0_ap_idle, "HessianDetector_U0_ap_idle");
    sc_trace(mVcdFile, HessianDetector_U0_ap_continue, "HessianDetector_U0_ap_continue");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, keyPoints_V_c_full_n, "keyPoints_V_c_full_n");
    sc_trace(mVcdFile, keyPoints_V_c_dout, "keyPoints_V_c_dout");
    sc_trace(mVcdFile, keyPoints_V_c_empty_n, "keyPoints_V_c_empty_n");
    sc_trace(mVcdFile, kpn_c_full_n, "kpn_c_full_n");
    sc_trace(mVcdFile, kpn_c_dout, "kpn_c_dout");
    sc_trace(mVcdFile, kpn_c_empty_n, "kpn_c_empty_n");
    sc_trace(mVcdFile, img_data_stream_0_V_full_n, "img_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_data_stream_0_V_dout, "img_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_data_stream_0_V_empty_n, "img_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_1_V_full_n, "img_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_data_stream_1_V_dout, "img_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_data_stream_1_V_empty_n, "img_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_2_V_full_n, "img_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_data_stream_2_V_dout, "img_data_stream_2_V_dout");
    sc_trace(mVcdFile, img_data_stream_2_V_empty_n, "img_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, sum_V_full_n, "sum_V_full_n");
    sc_trace(mVcdFile, sum_V_dout, "sum_V_dout");
    sc_trace(mVcdFile, sum_V_empty_n, "sum_V_empty_n");
    sc_trace(mVcdFile, this_assign_1_loc_c_full_n, "this_assign_1_loc_c_full_n");
    sc_trace(mVcdFile, this_assign_1_loc_c_dout, "this_assign_1_loc_c_dout");
    sc_trace(mVcdFile, this_assign_1_loc_c_empty_n, "this_assign_1_loc_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_surf_Simplified_entr_U0_ap_ready, "ap_sync_reg_surf_Simplified_entr_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_surf_Simplified_entr_U0_ap_ready, "ap_sync_surf_Simplified_entr_U0_ap_ready");
    sc_trace(mVcdFile, surf_Simplified_entr_U0_ap_ready_count, "surf_Simplified_entr_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2Mat_U0_ap_ready, "ap_sync_reg_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2Mat_U0_ap_ready, "ap_sync_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready_count, "AXIvideo2Mat_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready, "ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_Block_codeRepl47_pro_U0_ap_ready, "ap_sync_Block_codeRepl47_pro_U0_ap_ready");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_ap_ready_count, "Block_codeRepl47_pro_U0_ap_ready_count");
    sc_trace(mVcdFile, start_for_HessianDetector_U0_din, "start_for_HessianDetector_U0_din");
    sc_trace(mVcdFile, start_for_HessianDetector_U0_full_n, "start_for_HessianDetector_U0_full_n");
    sc_trace(mVcdFile, start_for_HessianDetector_U0_dout, "start_for_HessianDetector_U0_dout");
    sc_trace(mVcdFile, start_for_HessianDetector_U0_empty_n, "start_for_HessianDetector_U0_empty_n");
    sc_trace(mVcdFile, start_for_integralImg_U0_din, "start_for_integralImg_U0_din");
    sc_trace(mVcdFile, start_for_integralImg_U0_full_n, "start_for_integralImg_U0_full_n");
    sc_trace(mVcdFile, start_for_integralImg_U0_dout, "start_for_integralImg_U0_dout");
    sc_trace(mVcdFile, start_for_integralImg_U0_empty_n, "start_for_integralImg_U0_empty_n");
    sc_trace(mVcdFile, integralImg_U0_start_full_n, "integralImg_U0_start_full_n");
    sc_trace(mVcdFile, integralImg_U0_start_write, "integralImg_U0_start_write");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_start_full_n, "Block_codeRepl47_pro_U0_start_full_n");
    sc_trace(mVcdFile, Block_codeRepl47_pro_U0_start_write, "Block_codeRepl47_pro_U0_start_write");
    sc_trace(mVcdFile, HessianDetector_U0_start_full_n, "HessianDetector_U0_start_full_n");
    sc_trace(mVcdFile, HessianDetector_U0_start_write, "HessianDetector_U0_start_write");
#endif

    }
    mHdltvinHandle.open("surf_Simplified.hdltvin.dat");
    mHdltvoutHandle.open("surf_Simplified.hdltvout.dat");
}

surf_Simplified::~surf_Simplified() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete surf_Simplified_AXILiteS_s_axi_U;
    delete surf_Simplified_threshold_s_axi_U;
    delete surf_Simplified_keyPoints_m_axi_U;
    delete surf_Simplified_pointNumber_m_axi_U;
    delete surf_Simplified_entr_U0;
    delete AXIvideo2Mat_U0;
    delete integralImg_U0;
    delete Block_codeRepl47_pro_U0;
    delete HessianDetector_U0;
    delete keyPoints_V_c_U;
    delete kpn_c_U;
    delete img_data_stream_0_V_U;
    delete img_data_stream_1_V_U;
    delete img_data_stream_2_V_U;
    delete sum_V_U;
    delete this_assign_1_loc_c_U;
    delete start_for_HessianxdS_U;
    delete start_for_integrayd2_U;
}

void surf_Simplified::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void surf_Simplified::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void surf_Simplified::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv2_0;
}

void surf_Simplified::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void surf_Simplified::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void surf_Simplified::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv3_0;
}

void surf_Simplified::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv4_0;
}

void surf_Simplified::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(AXIvideo2Mat_U0_ap_ready.read(), ap_const_logic_0))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2Mat_U0_ap_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(Block_codeRepl47_pro_U0_ap_ready.read(), ap_const_logic_0))) {
        Block_codeRepl47_pro_U0_ap_ready_count = (!Block_codeRepl47_pro_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_codeRepl47_pro_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, Block_codeRepl47_pro_U0_ap_ready.read()))) {
        Block_codeRepl47_pro_U0_ap_ready_count = (!Block_codeRepl47_pro_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(Block_codeRepl47_pro_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_sync_AXIvideo2Mat_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready = ap_sync_Block_codeRepl47_pro_U0_ap_ready.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_surf_Simplified_entr_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_surf_Simplified_entr_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_surf_Simplified_entr_U0_ap_ready = ap_sync_surf_Simplified_entr_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(surf_Simplified_entr_U0_ap_ready.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        surf_Simplified_entr_U0_ap_ready_count = (!surf_Simplified_entr_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(surf_Simplified_entr_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, surf_Simplified_entr_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        surf_Simplified_entr_U0_ap_ready_count = (!surf_Simplified_entr_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(surf_Simplified_entr_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void surf_Simplified::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void surf_Simplified::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void surf_Simplified::thread_Block_codeRepl47_pro_U0_ap_continue() {
    Block_codeRepl47_pro_U0_ap_continue = ap_const_logic_1;
}

void surf_Simplified::thread_Block_codeRepl47_pro_U0_ap_start() {
    Block_codeRepl47_pro_U0_ap_start = (ap_start.read() & (ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void surf_Simplified::thread_Block_codeRepl47_pro_U0_start_full_n() {
    Block_codeRepl47_pro_U0_start_full_n = ap_const_logic_1;
}

void surf_Simplified::thread_Block_codeRepl47_pro_U0_start_write() {
    Block_codeRepl47_pro_U0_start_write = ap_const_logic_0;
}

void surf_Simplified::thread_HessianDetector_U0_ap_continue() {
    HessianDetector_U0_ap_continue = ap_const_logic_1;
}

void surf_Simplified::thread_HessianDetector_U0_ap_start() {
    HessianDetector_U0_ap_start = start_for_HessianDetector_U0_empty_n.read();
}

void surf_Simplified::thread_HessianDetector_U0_start_full_n() {
    HessianDetector_U0_start_full_n = ap_const_logic_1;
}

void surf_Simplified::thread_HessianDetector_U0_start_write() {
    HessianDetector_U0_start_write = ap_const_logic_0;
}

void surf_Simplified::thread_ap_done() {
    ap_done = HessianDetector_U0_ap_done.read();
}

void surf_Simplified::thread_ap_idle() {
    ap_idle = (surf_Simplified_entr_U0_ap_idle.read() & AXIvideo2Mat_U0_ap_idle.read() & integralImg_U0_ap_idle.read() & Block_codeRepl47_pro_U0_ap_idle.read() & HessianDetector_U0_ap_idle.read());
}

void surf_Simplified::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void surf_Simplified::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void surf_Simplified::thread_ap_sync_AXIvideo2Mat_U0_ap_ready() {
    ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read());
}

void surf_Simplified::thread_ap_sync_Block_codeRepl47_pro_U0_ap_ready() {
    ap_sync_Block_codeRepl47_pro_U0_ap_ready = (Block_codeRepl47_pro_U0_ap_ready.read() | ap_sync_reg_Block_codeRepl47_pro_U0_ap_ready.read());
}

void surf_Simplified::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void surf_Simplified::thread_ap_sync_done() {
    ap_sync_done = HessianDetector_U0_ap_done.read();
}

void surf_Simplified::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_surf_Simplified_entr_U0_ap_ready.read() & ap_sync_AXIvideo2Mat_U0_ap_ready.read() & ap_sync_Block_codeRepl47_pro_U0_ap_ready.read());
}

void surf_Simplified::thread_ap_sync_surf_Simplified_entr_U0_ap_ready() {
    ap_sync_surf_Simplified_entr_U0_ap_ready = (surf_Simplified_entr_U0_ap_ready.read() | ap_sync_reg_surf_Simplified_entr_U0_ap_ready.read());
}

void surf_Simplified::thread_integralImg_U0_ap_continue() {
    integralImg_U0_ap_continue = ap_const_logic_1;
}

void surf_Simplified::thread_integralImg_U0_ap_start() {
    integralImg_U0_ap_start = start_for_integralImg_U0_empty_n.read();
}

void surf_Simplified::thread_integralImg_U0_start_full_n() {
    integralImg_U0_start_full_n = ap_const_logic_1;
}

void surf_Simplified::thread_integralImg_U0_start_write() {
    integralImg_U0_start_write = ap_const_logic_0;
}

void surf_Simplified::thread_start_for_HessianDetector_U0_din() {
    start_for_HessianDetector_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void surf_Simplified::thread_start_for_integralImg_U0_din() {
    start_for_integralImg_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void surf_Simplified::thread_surf_Simplified_entr_U0_ap_continue() {
    surf_Simplified_entr_U0_ap_continue = ap_const_logic_1;
}

void surf_Simplified::thread_surf_Simplified_entr_U0_ap_start() {
    surf_Simplified_entr_U0_ap_start = (ap_start.read() & (ap_sync_reg_surf_Simplified_entr_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void surf_Simplified::thread_video_in_TREADY() {
    video_in_TREADY = AXIvideo2Mat_U0_video_in_TREADY.read();
}

void surf_Simplified::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_AWVALID\" :  \"" << s_axi_threshold_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_AWREADY\" :  \"" << s_axi_threshold_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_AWADDR\" :  \"" << s_axi_threshold_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_WVALID\" :  \"" << s_axi_threshold_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_WREADY\" :  \"" << s_axi_threshold_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_WDATA\" :  \"" << s_axi_threshold_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_WSTRB\" :  \"" << s_axi_threshold_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_ARVALID\" :  \"" << s_axi_threshold_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_ARREADY\" :  \"" << s_axi_threshold_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_ARADDR\" :  \"" << s_axi_threshold_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_RVALID\" :  \"" << s_axi_threshold_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_RREADY\" :  \"" << s_axi_threshold_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_RDATA\" :  \"" << s_axi_threshold_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_RRESP\" :  \"" << s_axi_threshold_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_BVALID\" :  \"" << s_axi_threshold_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_threshold_BREADY\" :  \"" << s_axi_threshold_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_threshold_BRESP\" :  \"" << s_axi_threshold_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWVALID\" :  \"" << m_axi_keyPoints_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_AWREADY\" :  \"" << m_axi_keyPoints_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWADDR\" :  \"" << m_axi_keyPoints_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWID\" :  \"" << m_axi_keyPoints_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWLEN\" :  \"" << m_axi_keyPoints_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWSIZE\" :  \"" << m_axi_keyPoints_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWBURST\" :  \"" << m_axi_keyPoints_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWLOCK\" :  \"" << m_axi_keyPoints_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWCACHE\" :  \"" << m_axi_keyPoints_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWPROT\" :  \"" << m_axi_keyPoints_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWQOS\" :  \"" << m_axi_keyPoints_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWREGION\" :  \"" << m_axi_keyPoints_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_AWUSER\" :  \"" << m_axi_keyPoints_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WVALID\" :  \"" << m_axi_keyPoints_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_WREADY\" :  \"" << m_axi_keyPoints_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WDATA\" :  \"" << m_axi_keyPoints_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WSTRB\" :  \"" << m_axi_keyPoints_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WLAST\" :  \"" << m_axi_keyPoints_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WID\" :  \"" << m_axi_keyPoints_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_WUSER\" :  \"" << m_axi_keyPoints_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARVALID\" :  \"" << m_axi_keyPoints_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_ARREADY\" :  \"" << m_axi_keyPoints_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARADDR\" :  \"" << m_axi_keyPoints_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARID\" :  \"" << m_axi_keyPoints_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARLEN\" :  \"" << m_axi_keyPoints_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARSIZE\" :  \"" << m_axi_keyPoints_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARBURST\" :  \"" << m_axi_keyPoints_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARLOCK\" :  \"" << m_axi_keyPoints_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARCACHE\" :  \"" << m_axi_keyPoints_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARPROT\" :  \"" << m_axi_keyPoints_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARQOS\" :  \"" << m_axi_keyPoints_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARREGION\" :  \"" << m_axi_keyPoints_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_ARUSER\" :  \"" << m_axi_keyPoints_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RVALID\" :  \"" << m_axi_keyPoints_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_RREADY\" :  \"" << m_axi_keyPoints_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RDATA\" :  \"" << m_axi_keyPoints_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RLAST\" :  \"" << m_axi_keyPoints_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RID\" :  \"" << m_axi_keyPoints_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RUSER\" :  \"" << m_axi_keyPoints_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_RRESP\" :  \"" << m_axi_keyPoints_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_BVALID\" :  \"" << m_axi_keyPoints_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_keyPoints_BREADY\" :  \"" << m_axi_keyPoints_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_BRESP\" :  \"" << m_axi_keyPoints_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_BID\" :  \"" << m_axi_keyPoints_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_keyPoints_BUSER\" :  \"" << m_axi_keyPoints_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWVALID\" :  \"" << m_axi_pointNumber_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_AWREADY\" :  \"" << m_axi_pointNumber_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWADDR\" :  \"" << m_axi_pointNumber_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWID\" :  \"" << m_axi_pointNumber_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWLEN\" :  \"" << m_axi_pointNumber_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWSIZE\" :  \"" << m_axi_pointNumber_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWBURST\" :  \"" << m_axi_pointNumber_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWLOCK\" :  \"" << m_axi_pointNumber_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWCACHE\" :  \"" << m_axi_pointNumber_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWPROT\" :  \"" << m_axi_pointNumber_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWQOS\" :  \"" << m_axi_pointNumber_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWREGION\" :  \"" << m_axi_pointNumber_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_AWUSER\" :  \"" << m_axi_pointNumber_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WVALID\" :  \"" << m_axi_pointNumber_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_WREADY\" :  \"" << m_axi_pointNumber_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WDATA\" :  \"" << m_axi_pointNumber_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WSTRB\" :  \"" << m_axi_pointNumber_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WLAST\" :  \"" << m_axi_pointNumber_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WID\" :  \"" << m_axi_pointNumber_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_WUSER\" :  \"" << m_axi_pointNumber_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARVALID\" :  \"" << m_axi_pointNumber_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_ARREADY\" :  \"" << m_axi_pointNumber_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARADDR\" :  \"" << m_axi_pointNumber_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARID\" :  \"" << m_axi_pointNumber_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARLEN\" :  \"" << m_axi_pointNumber_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARSIZE\" :  \"" << m_axi_pointNumber_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARBURST\" :  \"" << m_axi_pointNumber_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARLOCK\" :  \"" << m_axi_pointNumber_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARCACHE\" :  \"" << m_axi_pointNumber_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARPROT\" :  \"" << m_axi_pointNumber_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARQOS\" :  \"" << m_axi_pointNumber_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARREGION\" :  \"" << m_axi_pointNumber_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_ARUSER\" :  \"" << m_axi_pointNumber_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RVALID\" :  \"" << m_axi_pointNumber_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_RREADY\" :  \"" << m_axi_pointNumber_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RDATA\" :  \"" << m_axi_pointNumber_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RLAST\" :  \"" << m_axi_pointNumber_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RID\" :  \"" << m_axi_pointNumber_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RUSER\" :  \"" << m_axi_pointNumber_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_RRESP\" :  \"" << m_axi_pointNumber_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_BVALID\" :  \"" << m_axi_pointNumber_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_pointNumber_BREADY\" :  \"" << m_axi_pointNumber_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_BRESP\" :  \"" << m_axi_pointNumber_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_BID\" :  \"" << m_axi_pointNumber_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_pointNumber_BUSER\" :  \"" << m_axi_pointNumber_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TDATA\" :  \"" << video_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TKEEP\" :  \"" << video_in_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TSTRB\" :  \"" << video_in_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TUSER\" :  \"" << video_in_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TLAST\" :  \"" << video_in_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TID\" :  \"" << video_in_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TDEST\" :  \"" << video_in_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"video_in_TVALID\" :  \"" << video_in_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"video_in_TREADY\" :  \"" << video_in_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

