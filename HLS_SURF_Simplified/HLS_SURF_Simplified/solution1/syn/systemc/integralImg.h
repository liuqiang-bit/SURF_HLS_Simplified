// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _integralImg_HH_
#define _integralImg_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "integralImg_buf_1.h"

namespace ap_rtl {

struct integralImg : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > img_data_stream_0_V_dout;
    sc_in< sc_logic > img_data_stream_0_V_empty_n;
    sc_out< sc_logic > img_data_stream_0_V_read;
    sc_in< sc_lv<8> > img_data_stream_1_V_dout;
    sc_in< sc_logic > img_data_stream_1_V_empty_n;
    sc_out< sc_logic > img_data_stream_1_V_read;
    sc_in< sc_lv<8> > img_data_stream_2_V_dout;
    sc_in< sc_logic > img_data_stream_2_V_empty_n;
    sc_out< sc_logic > img_data_stream_2_V_read;
    sc_out< sc_lv<32> > sum_V_din;
    sc_in< sc_logic > sum_V_full_n;
    sc_out< sc_logic > sum_V_write;


    // Module declarations
    integralImg(sc_module_name name);
    SC_HAS_PROCESS(integralImg);

    ~integralImg();

    sc_trace_file* mVcdFile;

    integralImg_buf_1* buf_1_U;
    integralImg_buf_1* buf_0_U;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > buf_1_address0;
    sc_signal< sc_logic > buf_1_ce0;
    sc_signal< sc_logic > buf_1_we0;
    sc_signal< sc_lv<32> > buf_1_q0;
    sc_signal< sc_lv<10> > buf_1_address1;
    sc_signal< sc_logic > buf_1_ce1;
    sc_signal< sc_lv<32> > buf_1_q1;
    sc_signal< sc_lv<10> > buf_0_address0;
    sc_signal< sc_logic > buf_0_ce0;
    sc_signal< sc_logic > buf_0_we0;
    sc_signal< sc_lv<32> > buf_0_q0;
    sc_signal< sc_lv<10> > buf_0_address1;
    sc_signal< sc_logic > buf_0_ce1;
    sc_signal< sc_lv<32> > buf_0_q1;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_4_i_fu_278_p2;
    sc_signal< sc_lv<1> > or_cond_i_fu_296_p2;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_data_stream_2_V_blk_n;
    sc_signal< sc_logic > sum_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > r_V_fu_266_p2;
    sc_signal< sc_lv<10> > r_V_reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_1_i_fu_272_p2;
    sc_signal< sc_lv<1> > tmp_1_i_reg_469;
    sc_signal< sc_lv<1> > tmp_i_fu_260_p2;
    sc_signal< sc_lv<10> > c_V_fu_284_p2;
    sc_signal< sc_lv<10> > c_V_reg_477;
    sc_signal< bool > ap_predicate_op36_read_state3;
    sc_signal< bool > ap_predicate_op37_read_state3;
    sc_signal< bool > ap_predicate_op38_read_state3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<8> > tmp_3_reg_485;
    sc_signal< sc_lv<8> > tmp_5_reg_490;
    sc_signal< sc_lv<8> > tmp_reg_495;
    sc_signal< sc_lv<1> > phitmp_i_fu_301_p2;
    sc_signal< sc_lv<1> > phitmp1_i_fu_307_p2;
    sc_signal< sc_lv<2> > i_fu_325_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_15_i_fu_360_p2;
    sc_signal< sc_lv<1> > exitcond_i_fu_319_p2;
    sc_signal< sc_lv<31> > tmp_1_reg_523;
    sc_signal< sc_lv<1> > r_V_3_reg_177;
    sc_signal< sc_lv<32> > tmp_13_i_fu_449_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > r_V_4_reg_189;
    sc_signal< sc_lv<10> > t_V_reg_201;
    sc_signal< sc_lv<10> > t_V_1_reg_212;
    sc_signal< sc_lv<32> > pix_val_load_1_reg_224;
    sc_signal< sc_lv<2> > i_i_reg_235;
    sc_signal< sc_lv<32> > tmp_2_reg_246;
    sc_signal< sc_lv<64> > tmp_9_i_fu_386_p1;
    sc_signal< sc_lv<64> > tmp_10_i_fu_398_p1;
    sc_signal< sc_lv<64> > tmp_17_i_fu_455_p1;
    sc_signal< sc_lv<32> > tmp_4_fu_404_p1;
    sc_signal< sc_lv<1> > tmp_6_i_fu_290_p2;
    sc_signal< sc_lv<1> > sel_tmp_i_fu_331_p2;
    sc_signal< sc_lv<1> > sel_tmp2_i_fu_343_p2;
    sc_signal< sc_lv<8> > sel_tmp1_i_fu_337_p3;
    sc_signal< sc_lv<8> > UnifiedRetVal_i_i_fu_349_p3;
    sc_signal< sc_lv<32> > tmp_14_i_fu_356_p1;
    sc_signal< sc_lv<32> > mul_fu_370_p0;
    sc_signal< sc_lv<65> > mul_fu_370_p2;
    sc_signal< sc_lv<10> > ret_V_fu_392_p2;
    sc_signal< sc_lv<32> > buf_load_phi_i_fu_413_p3;
    sc_signal< sc_lv<32> > tmp_11_i_fu_437_p2;
    sc_signal< sc_lv<32> > buf_load_1_phi_i_fu_421_p3;
    sc_signal< sc_lv<32> > buf_load_2_phi_i_fu_429_p3;
    sc_signal< sc_lv<32> > tmp_12_i_fu_443_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<65> > mul_fu_370_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_259;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_321;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<65> ap_const_lv65_155555556;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<10> ap_const_lv10_3FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_UnifiedRetVal_i_i_fu_349_p3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op36_read_state3();
    void thread_ap_predicate_op37_read_state3();
    void thread_ap_predicate_op38_read_state3();
    void thread_ap_ready();
    void thread_buf_0_address0();
    void thread_buf_0_address1();
    void thread_buf_0_ce0();
    void thread_buf_0_ce1();
    void thread_buf_0_we0();
    void thread_buf_1_address0();
    void thread_buf_1_address1();
    void thread_buf_1_ce0();
    void thread_buf_1_ce1();
    void thread_buf_1_we0();
    void thread_buf_load_1_phi_i_fu_421_p3();
    void thread_buf_load_2_phi_i_fu_429_p3();
    void thread_buf_load_phi_i_fu_413_p3();
    void thread_c_V_fu_284_p2();
    void thread_exitcond_i_fu_319_p2();
    void thread_i_fu_325_p2();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_read();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_read();
    void thread_img_data_stream_2_V_blk_n();
    void thread_img_data_stream_2_V_read();
    void thread_mul_fu_370_p0();
    void thread_mul_fu_370_p00();
    void thread_mul_fu_370_p2();
    void thread_or_cond_i_fu_296_p2();
    void thread_phitmp1_i_fu_307_p2();
    void thread_phitmp_i_fu_301_p2();
    void thread_r_V_fu_266_p2();
    void thread_ret_V_fu_392_p2();
    void thread_sel_tmp1_i_fu_337_p3();
    void thread_sel_tmp2_i_fu_343_p2();
    void thread_sel_tmp_i_fu_331_p2();
    void thread_sum_V_blk_n();
    void thread_sum_V_din();
    void thread_sum_V_write();
    void thread_tmp_10_i_fu_398_p1();
    void thread_tmp_11_i_fu_437_p2();
    void thread_tmp_12_i_fu_443_p2();
    void thread_tmp_13_i_fu_449_p2();
    void thread_tmp_14_i_fu_356_p1();
    void thread_tmp_15_i_fu_360_p2();
    void thread_tmp_17_i_fu_455_p1();
    void thread_tmp_1_i_fu_272_p2();
    void thread_tmp_4_fu_404_p1();
    void thread_tmp_4_i_fu_278_p2();
    void thread_tmp_6_i_fu_290_p2();
    void thread_tmp_9_i_fu_386_p1();
    void thread_tmp_i_fu_260_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
