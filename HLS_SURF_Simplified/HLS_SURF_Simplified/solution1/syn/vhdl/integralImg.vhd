-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity integralImg is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_0_V_empty_n : IN STD_LOGIC;
    img_data_stream_0_V_read : OUT STD_LOGIC;
    img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_1_V_empty_n : IN STD_LOGIC;
    img_data_stream_1_V_read : OUT STD_LOGIC;
    img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_2_V_empty_n : IN STD_LOGIC;
    img_data_stream_2_V_read : OUT STD_LOGIC;
    sum_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sum_V_full_n : IN STD_LOGIC;
    sum_V_write : OUT STD_LOGIC );
end;


architecture behav of integralImg is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_259 : STD_LOGIC_VECTOR (9 downto 0) := "1001011001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_321 : STD_LOGIC_VECTOR (9 downto 0) := "1100100001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv65_155555556 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101010101010101010101010101010110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal buf_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_ce0 : STD_LOGIC;
    signal buf_1_we0 : STD_LOGIC;
    signal buf_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_ce1 : STD_LOGIC;
    signal buf_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_0_ce0 : STD_LOGIC;
    signal buf_0_we0 : STD_LOGIC;
    signal buf_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_0_ce1 : STD_LOGIC;
    signal buf_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_4_i_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_data_stream_1_V_blk_n : STD_LOGIC;
    signal img_data_stream_2_V_blk_n : STD_LOGIC;
    signal sum_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal r_V_fu_266_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_reg_464 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_1_i_fu_272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_reg_469 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_V_fu_284_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_V_reg_477 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_predicate_op36_read_state3 : BOOLEAN;
    signal ap_predicate_op37_read_state3 : BOOLEAN;
    signal ap_predicate_op38_read_state3 : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal tmp_3_reg_485 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_495 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp_i_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp1_i_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_325_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_15_i_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_i_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_523 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_3_reg_177 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_i_fu_449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal r_V_4_reg_189 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_reg_201 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_1_reg_212 : STD_LOGIC_VECTOR (9 downto 0);
    signal pix_val_load_1_reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_235 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_i_fu_386_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_i_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_i_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_i_fu_337_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal UnifiedRetVal_i_i_fu_349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_i_fu_356_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_370_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_fu_370_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal ret_V_fu_392_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_load_phi_i_fu_413_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_fu_437_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_load_1_phi_i_fu_421_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_load_2_phi_i_fu_429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_fu_370_p00 : STD_LOGIC_VECTOR (64 downto 0);

    component integralImg_buf_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_1_U : component integralImg_buf_1
    generic map (
        DataWidth => 32,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_address0,
        ce0 => buf_1_ce0,
        we0 => buf_1_we0,
        d0 => tmp_2_reg_246,
        q0 => buf_1_q0,
        address1 => buf_1_address1,
        ce1 => buf_1_ce1,
        q1 => buf_1_q1);

    buf_0_U : component integralImg_buf_1
    generic map (
        DataWidth => 32,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_address0,
        ce0 => buf_0_ce0,
        we0 => buf_0_we0,
        d0 => tmp_2_reg_246,
        q0 => buf_0_q0,
        address1 => buf_0_address1,
        ce1 => buf_0_ce1,
        q1 => buf_0_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_235_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_i_reg_235 <= i_fu_325_p2;
            elsif ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_i_reg_235 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    pix_val_load_1_reg_224_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                pix_val_load_1_reg_224 <= tmp_15_i_fu_360_p2;
            elsif ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                pix_val_load_1_reg_224 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    r_V_3_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (tmp_4_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                r_V_3_reg_177 <= phitmp_i_fu_301_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_V_3_reg_177 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    r_V_4_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (tmp_4_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                r_V_4_reg_189 <= phitmp1_i_fu_307_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_V_4_reg_189 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    t_V_1_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                t_V_1_reg_212 <= c_V_reg_477;
            elsif (((tmp_i_fu_260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_1_reg_212 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    t_V_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (tmp_4_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_reg_201 <= r_V_reg_464;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_201 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    tmp_2_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (or_cond_i_fu_296_p2 = ap_const_lv1_1) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_2_reg_246 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                tmp_2_reg_246 <= tmp_13_i_fu_449_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                c_V_reg_477 <= c_V_fu_284_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                r_V_reg_464 <= r_V_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_260_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_1_i_reg_469 <= tmp_1_i_fu_272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (exitcond_i_fu_319_p2 = ap_const_lv1_1))) then
                tmp_1_reg_523 <= mul_fu_370_p2(64 downto 34);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op36_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_3_reg_485 <= img_data_stream_0_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op37_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_5_reg_490 <= img_data_stream_1_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op38_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_reg_495 <= img_data_stream_2_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, sum_V_full_n, ap_CS_fsm_state3, tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2, ap_CS_fsm_state6, ap_CS_fsm_state2, tmp_i_fu_260_p2, ap_predicate_op36_read_state3, ap_predicate_op37_read_state3, ap_predicate_op38_read_state3, ap_CS_fsm_state4, exitcond_i_fu_319_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_i_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (tmp_4_i_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (or_cond_i_fu_296_p2 = ap_const_lv1_1) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond_i_fu_319_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    UnifiedRetVal_i_i_fu_349_p3 <= 
        tmp_5_reg_490 when (sel_tmp2_i_fu_343_p2(0) = '1') else 
        sel_tmp1_i_fu_337_p3;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_assign_proc : process(img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, ap_predicate_op36_read_state3, ap_predicate_op37_read_state3, ap_predicate_op38_read_state3)
    begin
                ap_block_state3 <= (((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_i_fu_260_p2)
    begin
        if (((tmp_i_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op36_read_state3_assign_proc : process(tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
                ap_predicate_op36_read_state3 <= ((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op37_read_state3_assign_proc : process(tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
                ap_predicate_op37_read_state3 <= ((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op38_read_state3_assign_proc : process(tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
                ap_predicate_op38_read_state3 <= ((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_i_fu_260_p2)
    begin
        if (((tmp_i_fu_260_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state4, tmp_9_i_fu_386_p1, tmp_17_i_fu_455_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_0_address0 <= tmp_17_i_fu_455_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_0_address0 <= tmp_9_i_fu_386_p1(10 - 1 downto 0);
        else 
            buf_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    buf_0_address1 <= tmp_10_i_fu_398_p1(10 - 1 downto 0);

    buf_0_ce0_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            buf_0_ce0 <= ap_const_logic_1;
        else 
            buf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_0_ce1 <= ap_const_logic_1;
        else 
            buf_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_we0_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6, r_V_4_reg_189)
    begin
        if (((r_V_4_reg_189 = ap_const_lv1_0) and (sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            buf_0_we0 <= ap_const_logic_1;
        else 
            buf_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state4, tmp_9_i_fu_386_p1, tmp_17_i_fu_455_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_1_address0 <= tmp_17_i_fu_455_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_1_address0 <= tmp_9_i_fu_386_p1(10 - 1 downto 0);
        else 
            buf_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;

    buf_1_address1 <= tmp_10_i_fu_398_p1(10 - 1 downto 0);

    buf_1_ce0_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            buf_1_ce0 <= ap_const_logic_1;
        else 
            buf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_1_ce1 <= ap_const_logic_1;
        else 
            buf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_we0_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6, r_V_4_reg_189)
    begin
        if (((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (r_V_4_reg_189 = ap_const_lv1_1))) then 
            buf_1_we0 <= ap_const_logic_1;
        else 
            buf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_load_1_phi_i_fu_421_p3 <= 
        buf_1_q1 when (r_V_3_reg_177(0) = '1') else 
        buf_0_q1;
    buf_load_2_phi_i_fu_429_p3 <= 
        buf_1_q1 when (r_V_4_reg_189(0) = '1') else 
        buf_0_q1;
    buf_load_phi_i_fu_413_p3 <= 
        buf_1_q0 when (r_V_3_reg_177(0) = '1') else 
        buf_0_q0;
    c_V_fu_284_p2 <= std_logic_vector(unsigned(t_V_1_reg_212) + unsigned(ap_const_lv10_1));
    exitcond_i_fu_319_p2 <= "1" when (i_i_reg_235 = ap_const_lv2_3) else "0";
    i_fu_325_p2 <= std_logic_vector(unsigned(i_i_reg_235) + unsigned(ap_const_lv2_1));

    img_data_stream_0_V_blk_n_assign_proc : process(img_data_stream_0_V_empty_n, ap_CS_fsm_state3, tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
        if (((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_0_V_blk_n <= img_data_stream_0_V_empty_n;
        else 
            img_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_0_V_read_assign_proc : process(img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, ap_CS_fsm_state3, ap_predicate_op36_read_state3, ap_predicate_op37_read_state3, ap_predicate_op38_read_state3)
    begin
        if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op36_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_0_V_read <= ap_const_logic_1;
        else 
            img_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_1_V_blk_n_assign_proc : process(img_data_stream_1_V_empty_n, ap_CS_fsm_state3, tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
        if (((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_1_V_blk_n <= img_data_stream_1_V_empty_n;
        else 
            img_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_1_V_read_assign_proc : process(img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, ap_CS_fsm_state3, ap_predicate_op36_read_state3, ap_predicate_op37_read_state3, ap_predicate_op38_read_state3)
    begin
        if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op37_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_1_V_read <= ap_const_logic_1;
        else 
            img_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    img_data_stream_2_V_blk_n_assign_proc : process(img_data_stream_2_V_empty_n, ap_CS_fsm_state3, tmp_4_i_fu_278_p2, or_cond_i_fu_296_p2)
    begin
        if (((or_cond_i_fu_296_p2 = ap_const_lv1_0) and (tmp_4_i_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_2_V_blk_n <= img_data_stream_2_V_empty_n;
        else 
            img_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_2_V_read_assign_proc : process(img_data_stream_0_V_empty_n, img_data_stream_1_V_empty_n, img_data_stream_2_V_empty_n, ap_CS_fsm_state3, ap_predicate_op36_read_state3, ap_predicate_op37_read_state3, ap_predicate_op38_read_state3)
    begin
        if ((not((((img_data_stream_2_V_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((img_data_stream_1_V_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((img_data_stream_0_V_empty_n = ap_const_logic_0) and (ap_predicate_op36_read_state3 = ap_const_boolean_1)))) and (ap_predicate_op38_read_state3 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            img_data_stream_2_V_read <= ap_const_logic_1;
        else 
            img_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_370_p0 <= mul_fu_370_p00(32 - 1 downto 0);
    mul_fu_370_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pix_val_load_1_reg_224),65));
    mul_fu_370_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_fu_370_p0) * unsigned(ap_const_lv65_155555556), 65));
    or_cond_i_fu_296_p2 <= (tmp_6_i_fu_290_p2 or tmp_1_i_reg_469);
    phitmp1_i_fu_307_p2 <= (r_V_4_reg_189 xor ap_const_lv1_1);
    phitmp_i_fu_301_p2 <= (r_V_3_reg_177 xor ap_const_lv1_1);
    r_V_fu_266_p2 <= std_logic_vector(unsigned(t_V_reg_201) + unsigned(ap_const_lv10_1));
    ret_V_fu_392_p2 <= std_logic_vector(unsigned(t_V_1_reg_212) + unsigned(ap_const_lv10_3FF));
    sel_tmp1_i_fu_337_p3 <= 
        tmp_3_reg_485 when (sel_tmp_i_fu_331_p2(0) = '1') else 
        tmp_reg_495;
    sel_tmp2_i_fu_343_p2 <= "1" when (i_i_reg_235 = ap_const_lv2_1) else "0";
    sel_tmp_i_fu_331_p2 <= "1" when (i_i_reg_235 = ap_const_lv2_0) else "0";

    sum_V_blk_n_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            sum_V_blk_n <= sum_V_full_n;
        else 
            sum_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sum_V_din <= tmp_2_reg_246;

    sum_V_write_assign_proc : process(sum_V_full_n, ap_CS_fsm_state6)
    begin
        if (((sum_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            sum_V_write <= ap_const_logic_1;
        else 
            sum_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_i_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_392_p2),64));
    tmp_11_i_fu_437_p2 <= std_logic_vector(signed(tmp_4_fu_404_p1) + signed(buf_load_phi_i_fu_413_p3));
    tmp_12_i_fu_443_p2 <= std_logic_vector(unsigned(tmp_11_i_fu_437_p2) - unsigned(buf_load_1_phi_i_fu_421_p3));
    tmp_13_i_fu_449_p2 <= std_logic_vector(unsigned(buf_load_2_phi_i_fu_429_p3) + unsigned(tmp_12_i_fu_443_p2));
    tmp_14_i_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(UnifiedRetVal_i_i_fu_349_p3),32));
    tmp_15_i_fu_360_p2 <= std_logic_vector(unsigned(pix_val_load_1_reg_224) + unsigned(tmp_14_i_fu_356_p1));
    tmp_17_i_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_212),64));
    tmp_1_i_fu_272_p2 <= "1" when (t_V_reg_201 = ap_const_lv10_0) else "0";
        tmp_4_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_reg_523),32));

    tmp_4_i_fu_278_p2 <= "1" when (t_V_1_reg_212 = ap_const_lv10_321) else "0";
    tmp_6_i_fu_290_p2 <= "1" when (t_V_1_reg_212 = ap_const_lv10_0) else "0";
    tmp_9_i_fu_386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_212),64));
    tmp_i_fu_260_p2 <= "1" when (t_V_reg_201 = ap_const_lv10_259) else "0";
end behav;
