

================================================================
== Vivado HLS Report for 'integralImg'
================================================================
* Date:           Thu Aug 27 17:05:57 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        HLS_SURF_Simplified
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.253|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+---------+--------+---------+---------+
    |      Latency     |     Interval     | Pipeline|
    |   min  |   max   |   min  |   max   |   Type  |
    +--------+---------+--------+---------+---------+
    |  964005|  3371010|  964005|  3371010|   none  |
    +--------+---------+--------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+--------+---------+-------------+-----------+-----------+------+----------+
        |                          |      Latency     |  Iteration  |  Initiation Interval  | Trip |          |
        |         Loop Name        |   min  |   max   |   Latency   |  achieved |   target  | Count| Pipelined|
        +--------------------------+--------+---------+-------------+-----------+-----------+------+----------+
        |- integralImg_row         |  964004|  3371009| 1604 ~ 5609 |          -|          -|   601|    no    |
        | + integralImg_col        |    1602|     5607|    2 ~ 7    |          -|          -|   801|    no    |
        |  ++ integralImg_channel  |       3|        3|            1|          -|          -|     3|    no    |
        +--------------------------+--------+---------+-------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_i)
3 --> 
	6  / (!tmp_4_i & or_cond_i)
	4  / (!tmp_4_i & !or_cond_i)
	2  / (tmp_4_i)
4 --> 
	5  / (exitcond_i)
	4  / (!exitcond_i)
5 --> 
	6  / true
6 --> 
	3  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 7 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 8 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 9 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* @sum_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 10 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.46ns)   --->   "br label %0" [mSURF.cpp:63]   --->   Operation 11 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.94>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%r_V_3 = phi i1 [ true, %entry ], [ %phitmp_i, %6 ]" [mSURF.cpp:65]   --->   Operation 12 'phi' 'r_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%r_V_4 = phi i1 [ false, %entry ], [ %phitmp1_i, %6 ]" [mSURF.cpp:65]   --->   Operation 13 'phi' 'r_V_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%t_V = phi i10 [ 0, %entry ], [ %r_V, %6 ]"   --->   Operation 14 'phi' 't_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.94ns)   --->   "%tmp_i = icmp eq i10 %t_V, -423" [mSURF.cpp:63]   --->   Operation 15 'icmp' 'tmp_i' <Predicate = true> <Delay = 1.94> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 601, i64 601, i64 601)"   --->   Operation 16 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.41ns)   --->   "%r_V = add i10 %t_V, 1" [mSURF.cpp:63]   --->   Operation 17 'add' 'r_V' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %tmp_i, label %integralImg.exit, label %1" [mSURF.cpp:63]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str2) nounwind" [mSURF.cpp:64]   --->   Operation 19 'specloopname' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_2_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([16 x i8]* @p_str2)" [mSURF.cpp:64]   --->   Operation 20 'specregionbegin' 'tmp_2_i' <Predicate = (!tmp_i)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.94ns)   --->   "%tmp_1_i = icmp eq i10 %t_V, 0" [mSURF.cpp:69]   --->   Operation 21 'icmp' 'tmp_1_i' <Predicate = (!tmp_i)> <Delay = 1.94> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.46ns)   --->   "br label %2" [mSURF.cpp:66]   --->   Operation 22 'br' <Predicate = (!tmp_i)> <Delay = 0.46>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 23 'ret' <Predicate = (tmp_i)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.40>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%t_V_1 = phi i10 [ 0, %1 ], [ %c_V, %._crit_edge15.i ]"   --->   Operation 24 'phi' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (1.94ns)   --->   "%tmp_4_i = icmp eq i10 %t_V_1, -223" [mSURF.cpp:66]   --->   Operation 25 'icmp' 'tmp_4_i' <Predicate = true> <Delay = 1.94> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 801, i64 801, i64 801)"   --->   Operation 26 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.41ns)   --->   "%c_V = add i10 %t_V_1, 1" [mSURF.cpp:66]   --->   Operation 27 'add' 'c_V' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %tmp_4_i, label %6, label %3" [mSURF.cpp:66]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str3) nounwind" [mSURF.cpp:67]   --->   Operation 29 'specloopname' <Predicate = (!tmp_4_i)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_3_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([16 x i8]* @p_str3)" [mSURF.cpp:67]   --->   Operation 30 'specregionbegin' 'tmp_3_i' <Predicate = (!tmp_4_i)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (1.94ns)   --->   "%tmp_6_i = icmp eq i10 %t_V_1, 0" [mSURF.cpp:69]   --->   Operation 31 'icmp' 'tmp_6_i' <Predicate = (!tmp_4_i)> <Delay = 1.94> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.80ns)   --->   "%or_cond_i = or i1 %tmp_1_i, %tmp_6_i" [mSURF.cpp:69]   --->   Operation 32 'or' 'or_cond_i' <Predicate = (!tmp_4_i)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.46ns)   --->   "br i1 %or_cond_i, label %._crit_edge1.i, label %"operator>>.exit.i"" [mSURF.cpp:69]   --->   Operation 33 'br' <Predicate = (!tmp_4_i)> <Delay = 0.46>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_7_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str13)" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:672->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 34 'specregionbegin' 'tmp_7_i' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1) nounwind" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:676->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 35 'specprotocol' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (3.40ns)   --->   "%tmp_3 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_0_V)" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:679->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 36 'read' 'tmp_3' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_3 : Operation 37 [1/1] (3.40ns)   --->   "%tmp_5 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_1_V)" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:679->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 37 'read' 'tmp_5' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_3 : Operation 38 [1/1] (3.40ns)   --->   "%tmp = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_2_V)" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:679->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 38 'read' 'tmp' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str13, i32 %tmp_7_i)" [C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:681->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73]   --->   Operation 39 'specregionend' 'empty' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.46ns)   --->   "br label %4" [mSURF.cpp:75]   --->   Operation 40 'br' <Predicate = (!tmp_4_i & !or_cond_i)> <Delay = 0.46>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([16 x i8]* @p_str2, i32 %tmp_2_i)" [mSURF.cpp:97]   --->   Operation 41 'specregionend' 'empty_36' <Predicate = (tmp_4_i)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.80ns)   --->   "%phitmp_i = xor i1 %r_V_3, true" [mSURF.cpp:63]   --->   Operation 42 'xor' 'phitmp_i' <Predicate = (tmp_4_i)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.80ns)   --->   "%phitmp1_i = xor i1 %r_V_4, true" [mSURF.cpp:63]   --->   Operation 43 'xor' 'phitmp1_i' <Predicate = (tmp_4_i)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br label %0" [mSURF.cpp:63]   --->   Operation 44 'br' <Predicate = (tmp_4_i)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.04>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%pix_val_load_1 = phi i32 [ 0, %"operator>>.exit.i" ], [ %tmp_15_i, %5 ]" [mSURF.cpp:77]   --->   Operation 45 'phi' 'pix_val_load_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%i_i = phi i2 [ 0, %"operator>>.exit.i" ], [ %i, %5 ]"   --->   Operation 46 'phi' 'i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.46ns)   --->   "store i32 %pix_val_load_1, i32* @pix_val, align 4" [mSURF.cpp:77]   --->   Operation 47 'store' <Predicate = true> <Delay = 0.46>
ST_4 : Operation 48 [1/1] (0.50ns)   --->   "%exitcond_i = icmp eq i2 %i_i, -1" [mSURF.cpp:75]   --->   Operation 48 'icmp' 'exitcond_i' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 49 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.63ns)   --->   "%i = add i2 %i_i, 1" [mSURF.cpp:75]   --->   Operation 50 'add' 'i' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %exitcond_i, label %_ifconv, label %5" [mSURF.cpp:75]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([20 x i8]* @p_str4) nounwind" [mSURF.cpp:76]   --->   Operation 52 'specloopname' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.50ns)   --->   "%sel_tmp_i = icmp eq i2 %i_i, 0" [aesl_mux_load.3i8P.i2:7->mSURF.cpp:77]   --->   Operation 53 'icmp' 'sel_tmp_i' <Predicate = (!exitcond_i)> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_i)   --->   "%sel_tmp1_i = select i1 %sel_tmp_i, i8 %tmp_3, i8 %tmp" [aesl_mux_load.3i8P.i2:5->mSURF.cpp:77]   --->   Operation 54 'select' 'sel_tmp1_i' <Predicate = (!exitcond_i)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.50ns)   --->   "%sel_tmp2_i = icmp eq i2 %i_i, 1" [aesl_mux_load.3i8P.i2:7->mSURF.cpp:77]   --->   Operation 55 'icmp' 'sel_tmp2_i' <Predicate = (!exitcond_i)> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.50> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_i)   --->   "%UnifiedRetVal_i_i = select i1 %sel_tmp2_i, i8 %tmp_5, i8 %sel_tmp1_i" [aesl_mux_load.3i8P.i2:5->mSURF.cpp:77]   --->   Operation 56 'select' 'UnifiedRetVal_i_i' <Predicate = (!exitcond_i)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node tmp_15_i)   --->   "%tmp_14_i = zext i8 %UnifiedRetVal_i_i to i32" [mSURF.cpp:77]   --->   Operation 57 'zext' 'tmp_14_i' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (1.89ns) (out node of the LUT)   --->   "%tmp_15_i = add nsw i32 %pix_val_load_1, %tmp_14_i" [mSURF.cpp:77]   --->   Operation 58 'add' 'tmp_15_i' <Predicate = (!exitcond_i)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "br label %4" [mSURF.cpp:75]   --->   Operation 59 'br' <Predicate = (!exitcond_i)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%sext_cast = zext i32 %pix_val_load_1 to i65" [mSURF.cpp:79]   --->   Operation 60 'zext' 'sext_cast' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (7.04ns)   --->   "%mul = mul i65 %sext_cast, 5726623062" [mSURF.cpp:79]   --->   Operation 61 'mul' 'mul' <Predicate = (exitcond_i)> <Delay = 7.04> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_1 = call i31 @_ssdm_op_PartSelect.i31.i65.i32.i32(i65 %mul, i32 34, i32 64)" [mSURF.cpp:79]   --->   Operation 62 'partselect' 'tmp_1' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_9_i = zext i10 %t_V_1 to i64" [mSURF.cpp:82]   --->   Operation 63 'zext' 'tmp_9_i' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%buf_0_addr = getelementptr [800 x i32]* @buf_0, i64 0, i64 %tmp_9_i" [mSURF.cpp:82]   --->   Operation 64 'getelementptr' 'buf_0_addr' <Predicate = (exitcond_i & !r_V_3)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%buf_1_addr = getelementptr [800 x i32]* @buf_1, i64 0, i64 %tmp_9_i" [mSURF.cpp:82]   --->   Operation 65 'getelementptr' 'buf_1_addr' <Predicate = (exitcond_i & r_V_3)> <Delay = 0.00>
ST_4 : Operation 66 [2/2] (2.77ns)   --->   "%buf_1_load = load i32* %buf_1_addr, align 4" [mSURF.cpp:82]   --->   Operation 66 'load' 'buf_1_load' <Predicate = (exitcond_i & r_V_3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_4 : Operation 67 [2/2] (2.77ns)   --->   "%buf_0_load = load i32* %buf_0_addr, align 4" [mSURF.cpp:82]   --->   Operation 67 'load' 'buf_0_load' <Predicate = (exitcond_i & !r_V_3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_4 : Operation 68 [1/1] (1.41ns)   --->   "%ret_V = add i10 %t_V_1, -1" [mSURF.cpp:82]   --->   Operation 68 'add' 'ret_V' <Predicate = (exitcond_i)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_10_i = zext i10 %ret_V to i64" [mSURF.cpp:82]   --->   Operation 69 'zext' 'tmp_10_i' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%buf_0_addr_1 = getelementptr [800 x i32]* @buf_0, i64 0, i64 %tmp_10_i" [mSURF.cpp:82]   --->   Operation 70 'getelementptr' 'buf_0_addr_1' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%buf_1_addr_1 = getelementptr [800 x i32]* @buf_1, i64 0, i64 %tmp_10_i" [mSURF.cpp:82]   --->   Operation 71 'getelementptr' 'buf_1_addr_1' <Predicate = (exitcond_i)> <Delay = 0.00>
ST_4 : Operation 72 [2/2] (2.77ns)   --->   "%buf_1_load_1 = load i32* %buf_1_addr_1, align 4" [mSURF.cpp:82]   --->   Operation 72 'load' 'buf_1_load_1' <Predicate = (exitcond_i)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_4 : Operation 73 [2/2] (2.77ns)   --->   "%buf_0_load_1 = load i32* %buf_0_addr_1, align 4" [mSURF.cpp:82]   --->   Operation 73 'load' 'buf_0_load_1' <Predicate = (exitcond_i)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>

State 5 <SV = 4> <Delay = 8.25>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_4 = sext i31 %tmp_1 to i32" [mSURF.cpp:79]   --->   Operation 74 'sext' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.46ns)   --->   "store i32 %tmp_4, i32* @pix_val, align 4" [mSURF.cpp:79]   --->   Operation 75 'store' <Predicate = true> <Delay = 0.46>
ST_5 : Operation 76 [1/2] (2.77ns)   --->   "%buf_1_load = load i32* %buf_1_addr, align 4" [mSURF.cpp:82]   --->   Operation 76 'load' 'buf_1_load' <Predicate = (r_V_3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_5 : Operation 77 [1/2] (2.77ns)   --->   "%buf_0_load = load i32* %buf_0_addr, align 4" [mSURF.cpp:82]   --->   Operation 77 'load' 'buf_0_load' <Predicate = (!r_V_3)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_5 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_11_i)   --->   "%buf_load_phi_i = select i1 %r_V_3, i32 %buf_1_load, i32 %buf_0_load" [mSURF.cpp:82]   --->   Operation 78 'select' 'buf_load_phi_i' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 79 [1/2] (2.77ns)   --->   "%buf_1_load_1 = load i32* %buf_1_addr_1, align 4" [mSURF.cpp:82]   --->   Operation 79 'load' 'buf_1_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_5 : Operation 80 [1/2] (2.77ns)   --->   "%buf_0_load_1 = load i32* %buf_0_addr_1, align 4" [mSURF.cpp:82]   --->   Operation 80 'load' 'buf_0_load_1' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_5 : Operation 81 [1/1] (0.70ns)   --->   "%buf_load_1_phi_i = select i1 %r_V_3, i32 %buf_1_load_1, i32 %buf_0_load_1" [mSURF.cpp:82]   --->   Operation 81 'select' 'buf_load_1_phi_i' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.70ns)   --->   "%buf_load_2_phi_i = select i1 %r_V_4, i32 %buf_1_load_1, i32 %buf_0_load_1" [mSURF.cpp:82]   --->   Operation 82 'select' 'buf_load_2_phi_i' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (1.89ns) (out node of the LUT)   --->   "%tmp_11_i = add i32 %tmp_4, %buf_load_phi_i" [mSURF.cpp:82]   --->   Operation 83 'add' 'tmp_11_i' <Predicate = true> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.89> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp_12_i = sub i32 %tmp_11_i, %buf_load_1_phi_i" [mSURF.cpp:82]   --->   Operation 84 'sub' 'tmp_12_i' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 85 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%tmp_13_i = add i32 %buf_load_2_phi_i, %tmp_12_i" [mSURF.cpp:82]   --->   Operation 85 'add' 'tmp_13_i' <Predicate = true> <Delay = 3.58> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 86 [1/1] (0.46ns)   --->   "br label %._crit_edge1.i"   --->   Operation 86 'br' <Predicate = true> <Delay = 0.46>

State 6 <SV = 5> <Delay = 3.40>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_2 = phi i32 [ %tmp_13_i, %_ifconv ], [ 0, %3 ]" [mSURF.cpp:82]   --->   Operation 87 'phi' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_17_i = zext i10 %t_V_1 to i64" [mSURF.cpp:84]   --->   Operation 88 'zext' 'tmp_17_i' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%buf_0_addr_2 = getelementptr [800 x i32]* @buf_0, i64 0, i64 %tmp_17_i" [mSURF.cpp:84]   --->   Operation 89 'getelementptr' 'buf_0_addr_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%buf_1_addr_2 = getelementptr [800 x i32]* @buf_1, i64 0, i64 %tmp_17_i" [mSURF.cpp:84]   --->   Operation 90 'getelementptr' 'buf_1_addr_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %r_V_4, label %branch1.i, label %branch0.i" [mSURF.cpp:84]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (2.77ns)   --->   "store i32 %tmp_2, i32* %buf_0_addr_2, align 4" [mSURF.cpp:84]   --->   Operation 92 'store' <Predicate = (!r_V_4)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_6 : Operation 93 [1/1] (0.00ns)   --->   "br label %._crit_edge15.i" [mSURF.cpp:84]   --->   Operation 93 'br' <Predicate = (!r_V_4)> <Delay = 0.00>
ST_6 : Operation 94 [1/1] (2.77ns)   --->   "store i32 %tmp_2, i32* %buf_1_addr_2, align 4" [mSURF.cpp:84]   --->   Operation 94 'store' <Predicate = (r_V_4)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 800> <RAM>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "br label %._crit_edge15.i" [mSURF.cpp:84]   --->   Operation 95 'br' <Predicate = (r_V_4)> <Delay = 0.00>
ST_6 : Operation 96 [1/1] (3.40ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* @sum_V, i32 %tmp_2)" [mSURF.cpp:86]   --->   Operation 96 'write' <Predicate = true> <Delay = 3.40> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.40> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecRegionEnd([16 x i8]* @p_str3, i32 %tmp_3_i)" [mSURF.cpp:92]   --->   Operation 97 'specregionend' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "br label %2" [mSURF.cpp:66]   --->   Operation 98 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('r.V', mSURF.cpp:65) with incoming values : ('phitmp_i', mSURF.cpp:63) [14]  (0.466 ns)

 <State 2>: 1.94ns
The critical path consists of the following:
	'phi' operation ('r.V') with incoming values : ('r.V', mSURF.cpp:63) [16]  (0 ns)
	'icmp' operation ('tmp_1_i', mSURF.cpp:69) [24]  (1.94 ns)

 <State 3>: 3.4ns
The critical path consists of the following:
	fifo read on port 'img_data_stream_0_V' (C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:679->C:/Xilinx/Vivado/2018.3/common/technology/autopilot/hls/hls_video_core.h:711->mSURF.cpp:73) [41]  (3.4 ns)

 <State 4>: 7.04ns
The critical path consists of the following:
	'phi' operation ('pix_val_load_1', mSURF.cpp:77) with incoming values : ('tmp_15_i', mSURF.cpp:77) [47]  (0 ns)
	'mul' operation ('mul', mSURF.cpp:79) [65]  (7.04 ns)

 <State 5>: 8.25ns
The critical path consists of the following:
	'load' operation ('buf_1_load', mSURF.cpp:82) on array 'buf_1' [72]  (2.77 ns)
	'select' operation ('buf_load_phi_i', mSURF.cpp:82) [74]  (0 ns)
	'add' operation ('tmp_11_i', mSURF.cpp:82) [83]  (1.9 ns)
	'sub' operation ('tmp_12_i', mSURF.cpp:82) [84]  (0 ns)
	'add' operation ('tmp_13_i', mSURF.cpp:82) [85]  (3.59 ns)

 <State 6>: 3.4ns
The critical path consists of the following:
	'phi' operation ('tmp', mSURF.cpp:82) with incoming values : ('tmp_13_i', mSURF.cpp:82) [88]  (0 ns)
	fifo write on port 'sum_V' (mSURF.cpp:86) [100]  (3.4 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
