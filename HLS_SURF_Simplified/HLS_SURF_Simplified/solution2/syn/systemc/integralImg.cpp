// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "integralImg.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic integralImg::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic integralImg::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> integralImg::ap_ST_fsm_state1 = "1";
const sc_lv<6> integralImg::ap_ST_fsm_state2 = "10";
const sc_lv<6> integralImg::ap_ST_fsm_state3 = "100";
const sc_lv<6> integralImg::ap_ST_fsm_state4 = "1000";
const sc_lv<6> integralImg::ap_ST_fsm_state5 = "10000";
const sc_lv<6> integralImg::ap_ST_fsm_state6 = "100000";
const bool integralImg::ap_const_boolean_1 = true;
const sc_lv<32> integralImg::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> integralImg::ap_const_lv1_0 = "0";
const sc_lv<1> integralImg::ap_const_lv1_1 = "1";
const sc_lv<2> integralImg::ap_const_lv2_0 = "00";
const sc_lv<2> integralImg::ap_const_lv2_2 = "10";
const sc_lv<2> integralImg::ap_const_lv2_3 = "11";
const sc_lv<2> integralImg::ap_const_lv2_1 = "1";
const sc_lv<32> integralImg::ap_const_lv32_2 = "10";
const sc_lv<32> integralImg::ap_const_lv32_5 = "101";
const sc_lv<32> integralImg::ap_const_lv32_1 = "1";
const sc_lv<32> integralImg::ap_const_lv32_3 = "11";
const sc_lv<32> integralImg::ap_const_lv32_4 = "100";
const sc_lv<10> integralImg::ap_const_lv10_0 = "0000000000";
const sc_lv<10> integralImg::ap_const_lv10_259 = "1001011001";
const sc_lv<10> integralImg::ap_const_lv10_1 = "1";
const sc_lv<10> integralImg::ap_const_lv10_321 = "1100100001";
const sc_lv<3> integralImg::ap_const_lv3_0 = "000";
const sc_lv<65> integralImg::ap_const_lv65_155555556 = "101010101010101010101010101010110";
const sc_lv<32> integralImg::ap_const_lv32_22 = "100010";
const sc_lv<32> integralImg::ap_const_lv32_40 = "1000000";
const sc_lv<10> integralImg::ap_const_lv10_3FF = "1111111111";

integralImg::integralImg(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buf_1_U = new integralImg_buf_1("buf_1_U");
    buf_1_U->clk(ap_clk);
    buf_1_U->reset(ap_rst);
    buf_1_U->address0(buf_1_address0);
    buf_1_U->ce0(buf_1_ce0);
    buf_1_U->we0(buf_1_we0);
    buf_1_U->d0(tmp_1_reg_270);
    buf_1_U->q0(buf_1_q0);
    buf_1_U->address1(buf_1_address1);
    buf_1_U->ce1(buf_1_ce1);
    buf_1_U->q1(buf_1_q1);
    buf_0_U = new integralImg_buf_1("buf_0_U");
    buf_0_U->clk(ap_clk);
    buf_0_U->reset(ap_rst);
    buf_0_U->address0(buf_0_address0);
    buf_0_U->ce0(buf_0_ce0);
    buf_0_U->we0(buf_0_we0);
    buf_0_U->d0(tmp_1_reg_270);
    buf_0_U->q0(buf_0_q0);
    buf_0_U->address1(buf_0_address1);
    buf_0_U->ce1(buf_0_ce1);
    buf_0_U->q1(buf_0_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_predicate_op32_read_state3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_284_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op32_read_state3);
    sensitive << ( tmp_4_i_fu_302_p2 );
    sensitive << ( or_cond_i_fu_320_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_buf_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_i_23_fu_410_p1 );
    sensitive << ( tmp_16_i_fu_479_p1 );

    SC_METHOD(thread_buf_0_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_i_fu_422_p1 );

    SC_METHOD(thread_buf_0_ce0);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_0_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_0_we0);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( r_V_4_reg_213 );

    SC_METHOD(thread_buf_1_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_i_23_fu_410_p1 );
    sensitive << ( tmp_16_i_fu_479_p1 );

    SC_METHOD(thread_buf_1_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_i_fu_422_p1 );

    SC_METHOD(thread_buf_1_ce0);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_1_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_1_we0);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( r_V_4_reg_213 );

    SC_METHOD(thread_buf_load_1_phi_i_fu_445_p3);
    sensitive << ( buf_1_q1 );
    sensitive << ( buf_0_q1 );
    sensitive << ( r_V_3_reg_201 );

    SC_METHOD(thread_buf_load_2_phi_i_fu_453_p3);
    sensitive << ( buf_1_q1 );
    sensitive << ( buf_0_q1 );
    sensitive << ( r_V_4_reg_213 );

    SC_METHOD(thread_buf_load_phi_i_fu_437_p3);
    sensitive << ( buf_1_q0 );
    sensitive << ( buf_0_q0 );
    sensitive << ( r_V_3_reg_201 );

    SC_METHOD(thread_c_V_fu_308_p2);
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_exitcond_i_fu_347_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_i_reg_259 );

    SC_METHOD(thread_i_fu_353_p2);
    sensitive << ( i_i_reg_259 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_284_p2 );

    SC_METHOD(thread_mul_fu_394_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( mul_fu_394_p00 );

    SC_METHOD(thread_mul_fu_394_p00);
    sensitive << ( pix_val_load_1_reg_248 );

    SC_METHOD(thread_mul_fu_394_p2);
    sensitive << ( mul_fu_394_p0 );

    SC_METHOD(thread_or_cond_i_fu_320_p2);
    sensitive << ( tmp_1_i_reg_493 );
    sensitive << ( tmp_6_i_fu_314_p2 );

    SC_METHOD(thread_phitmp1_i_fu_335_p2);
    sensitive << ( r_V_4_reg_213 );

    SC_METHOD(thread_phitmp_i_fu_329_p2);
    sensitive << ( r_V_3_reg_201 );

    SC_METHOD(thread_r_V_fu_290_p2);
    sensitive << ( t_V_reg_225 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ret_V_fu_416_p2);
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sum_V_blk_n);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sum_V_din);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_1_reg_270 );

    SC_METHOD(thread_sum_V_write);
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_10_i_fu_467_p2);
    sensitive << ( tmp_7_i_fu_461_p2 );
    sensitive << ( buf_load_1_phi_i_fu_445_p3 );

    SC_METHOD(thread_tmp_11_i_fu_473_p2);
    sensitive << ( buf_load_2_phi_i_fu_453_p3 );
    sensitive << ( tmp_10_i_fu_467_p2 );

    SC_METHOD(thread_tmp_12_cast_i_cast_fu_367_p1);
    sensitive << ( tmp_12_i_fu_359_p3 );

    SC_METHOD(thread_tmp_12_i_fu_359_p3);
    sensitive << ( i_i_reg_259 );

    SC_METHOD(thread_tmp_13_i_fu_371_p2);
    sensitive << ( tmp_data_V_reg_509 );
    sensitive << ( tmp_12_cast_i_cast_fu_367_p1 );

    SC_METHOD(thread_tmp_14_cast_i_fu_380_p1);
    sensitive << ( tmp_2_fu_376_p1 );

    SC_METHOD(thread_tmp_15_i_fu_384_p2);
    sensitive << ( pix_val_load_1_reg_248 );
    sensitive << ( tmp_14_cast_i_fu_380_p1 );

    SC_METHOD(thread_tmp_16_i_fu_479_p1);
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_tmp_1_i_fu_296_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_284_p2 );
    sensitive << ( t_V_reg_225 );

    SC_METHOD(thread_tmp_2_fu_376_p1);
    sensitive << ( tmp_13_i_fu_371_p2 );

    SC_METHOD(thread_tmp_3_fu_428_p1);
    sensitive << ( tmp_reg_537 );

    SC_METHOD(thread_tmp_4_i_fu_302_p2);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op32_read_state3 );
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_tmp_5_i_fu_422_p1);
    sensitive << ( ret_V_fu_416_p2 );

    SC_METHOD(thread_tmp_6_i_fu_314_p2);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_i_fu_302_p2 );
    sensitive << ( ap_predicate_op32_read_state3 );
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_tmp_7_i_fu_461_p2);
    sensitive << ( tmp_3_fu_428_p1 );
    sensitive << ( buf_load_phi_i_fu_437_p3 );

    SC_METHOD(thread_tmp_i_23_fu_410_p1);
    sensitive << ( t_V_1_reg_236 );

    SC_METHOD(thread_tmp_i_fu_284_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_225 );

    SC_METHOD(thread_video_in_TDATA_blk_n);
    sensitive << ( video_in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_i_fu_302_p2 );
    sensitive << ( or_cond_i_fu_320_p2 );

    SC_METHOD(thread_video_in_TREADY);
    sensitive << ( video_in_V_dest_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_in);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op32_read_state3 );

    SC_METHOD(thread_video_in_V_data_V_0_data_out);
    sensitive << ( video_in_V_data_V_0_payload_A );
    sensitive << ( video_in_V_data_V_0_payload_B );
    sensitive << ( video_in_V_data_V_0_sel );

    SC_METHOD(thread_video_in_V_data_V_0_load_A);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_load_B);
    sensitive << ( video_in_V_data_V_0_sel_wr );
    sensitive << ( video_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_video_in_V_data_V_0_sel);
    sensitive << ( video_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_video_in_V_data_V_0_state_cmp_full);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_data_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_video_in_V_data_V_0_vld_out);
    sensitive << ( video_in_V_data_V_0_state );

    SC_METHOD(thread_video_in_V_dest_V_0_ack_out);
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op32_read_state3 );

    SC_METHOD(thread_video_in_V_dest_V_0_vld_in);
    sensitive << ( video_in_TVALID );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( video_in_V_data_V_0_vld_out );
    sensitive << ( sum_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_i_fu_302_p2 );
    sensitive << ( or_cond_i_fu_320_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_fu_284_p2 );
    sensitive << ( ap_predicate_op32_read_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_i_fu_347_p2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    video_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    video_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    video_in_V_data_V_0_state = "00";
    video_in_V_dest_V_0_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "integralImg_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, video_in_TDATA, "(port)video_in_TDATA");
    sc_trace(mVcdFile, video_in_TVALID, "(port)video_in_TVALID");
    sc_trace(mVcdFile, video_in_TREADY, "(port)video_in_TREADY");
    sc_trace(mVcdFile, video_in_TKEEP, "(port)video_in_TKEEP");
    sc_trace(mVcdFile, video_in_TSTRB, "(port)video_in_TSTRB");
    sc_trace(mVcdFile, video_in_TUSER, "(port)video_in_TUSER");
    sc_trace(mVcdFile, video_in_TLAST, "(port)video_in_TLAST");
    sc_trace(mVcdFile, video_in_TID, "(port)video_in_TID");
    sc_trace(mVcdFile, video_in_TDEST, "(port)video_in_TDEST");
    sc_trace(mVcdFile, sum_V_din, "(port)sum_V_din");
    sc_trace(mVcdFile, sum_V_full_n, "(port)sum_V_full_n");
    sc_trace(mVcdFile, sum_V_write, "(port)sum_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, video_in_V_data_V_0_data_out, "video_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_in, "video_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_vld_out, "video_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_in, "video_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, video_in_V_data_V_0_ack_out, "video_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_A, "video_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_payload_B, "video_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_rd, "video_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel_wr, "video_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, video_in_V_data_V_0_sel, "video_in_V_data_V_0_sel");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_A, "video_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, video_in_V_data_V_0_load_B, "video_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, video_in_V_data_V_0_state, "video_in_V_data_V_0_state");
    sc_trace(mVcdFile, video_in_V_data_V_0_state_cmp_full, "video_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, video_in_V_dest_V_0_vld_in, "video_in_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, video_in_V_dest_V_0_ack_out, "video_in_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, video_in_V_dest_V_0_state, "video_in_V_dest_V_0_state");
    sc_trace(mVcdFile, buf_1_address0, "buf_1_address0");
    sc_trace(mVcdFile, buf_1_ce0, "buf_1_ce0");
    sc_trace(mVcdFile, buf_1_we0, "buf_1_we0");
    sc_trace(mVcdFile, buf_1_q0, "buf_1_q0");
    sc_trace(mVcdFile, buf_1_address1, "buf_1_address1");
    sc_trace(mVcdFile, buf_1_ce1, "buf_1_ce1");
    sc_trace(mVcdFile, buf_1_q1, "buf_1_q1");
    sc_trace(mVcdFile, buf_0_address0, "buf_0_address0");
    sc_trace(mVcdFile, buf_0_ce0, "buf_0_ce0");
    sc_trace(mVcdFile, buf_0_we0, "buf_0_we0");
    sc_trace(mVcdFile, buf_0_q0, "buf_0_q0");
    sc_trace(mVcdFile, buf_0_address1, "buf_0_address1");
    sc_trace(mVcdFile, buf_0_ce1, "buf_0_ce1");
    sc_trace(mVcdFile, buf_0_q1, "buf_0_q1");
    sc_trace(mVcdFile, video_in_TDATA_blk_n, "video_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_i_fu_302_p2, "tmp_4_i_fu_302_p2");
    sc_trace(mVcdFile, or_cond_i_fu_320_p2, "or_cond_i_fu_320_p2");
    sc_trace(mVcdFile, sum_V_blk_n, "sum_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, r_V_fu_290_p2, "r_V_fu_290_p2");
    sc_trace(mVcdFile, r_V_reg_488, "r_V_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_i_fu_296_p2, "tmp_1_i_fu_296_p2");
    sc_trace(mVcdFile, tmp_1_i_reg_493, "tmp_1_i_reg_493");
    sc_trace(mVcdFile, tmp_i_fu_284_p2, "tmp_i_fu_284_p2");
    sc_trace(mVcdFile, c_V_fu_308_p2, "c_V_fu_308_p2");
    sc_trace(mVcdFile, c_V_reg_501, "c_V_reg_501");
    sc_trace(mVcdFile, ap_predicate_op32_read_state3, "ap_predicate_op32_read_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_data_V_reg_509, "tmp_data_V_reg_509");
    sc_trace(mVcdFile, phitmp_i_fu_329_p2, "phitmp_i_fu_329_p2");
    sc_trace(mVcdFile, phitmp1_i_fu_335_p2, "phitmp1_i_fu_335_p2");
    sc_trace(mVcdFile, i_fu_353_p2, "i_fu_353_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_15_i_fu_384_p2, "tmp_15_i_fu_384_p2");
    sc_trace(mVcdFile, exitcond_i_fu_347_p2, "exitcond_i_fu_347_p2");
    sc_trace(mVcdFile, tmp_reg_537, "tmp_reg_537");
    sc_trace(mVcdFile, r_V_3_reg_201, "r_V_3_reg_201");
    sc_trace(mVcdFile, tmp_11_i_fu_473_p2, "tmp_11_i_fu_473_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, r_V_4_reg_213, "r_V_4_reg_213");
    sc_trace(mVcdFile, t_V_reg_225, "t_V_reg_225");
    sc_trace(mVcdFile, t_V_1_reg_236, "t_V_1_reg_236");
    sc_trace(mVcdFile, pix_val_load_1_reg_248, "pix_val_load_1_reg_248");
    sc_trace(mVcdFile, i_i_reg_259, "i_i_reg_259");
    sc_trace(mVcdFile, tmp_1_reg_270, "tmp_1_reg_270");
    sc_trace(mVcdFile, tmp_i_23_fu_410_p1, "tmp_i_23_fu_410_p1");
    sc_trace(mVcdFile, tmp_5_i_fu_422_p1, "tmp_5_i_fu_422_p1");
    sc_trace(mVcdFile, tmp_16_i_fu_479_p1, "tmp_16_i_fu_479_p1");
    sc_trace(mVcdFile, tmp_3_fu_428_p1, "tmp_3_fu_428_p1");
    sc_trace(mVcdFile, tmp_6_i_fu_314_p2, "tmp_6_i_fu_314_p2");
    sc_trace(mVcdFile, tmp_12_i_fu_359_p3, "tmp_12_i_fu_359_p3");
    sc_trace(mVcdFile, tmp_12_cast_i_cast_fu_367_p1, "tmp_12_cast_i_cast_fu_367_p1");
    sc_trace(mVcdFile, tmp_13_i_fu_371_p2, "tmp_13_i_fu_371_p2");
    sc_trace(mVcdFile, tmp_2_fu_376_p1, "tmp_2_fu_376_p1");
    sc_trace(mVcdFile, tmp_14_cast_i_fu_380_p1, "tmp_14_cast_i_fu_380_p1");
    sc_trace(mVcdFile, mul_fu_394_p0, "mul_fu_394_p0");
    sc_trace(mVcdFile, mul_fu_394_p2, "mul_fu_394_p2");
    sc_trace(mVcdFile, ret_V_fu_416_p2, "ret_V_fu_416_p2");
    sc_trace(mVcdFile, buf_load_phi_i_fu_437_p3, "buf_load_phi_i_fu_437_p3");
    sc_trace(mVcdFile, tmp_7_i_fu_461_p2, "tmp_7_i_fu_461_p2");
    sc_trace(mVcdFile, buf_load_1_phi_i_fu_445_p3, "buf_load_1_phi_i_fu_445_p3");
    sc_trace(mVcdFile, buf_load_2_phi_i_fu_453_p3, "buf_load_2_phi_i_fu_453_p3");
    sc_trace(mVcdFile, tmp_10_i_fu_467_p2, "tmp_10_i_fu_467_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_fu_394_p00, "mul_fu_394_p00");
#endif

    }
}

integralImg::~integralImg() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buf_1_U;
    delete buf_0_U;
}

void integralImg::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_284_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_347_p2.read()))) {
        i_i_reg_259 = i_fu_353_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        i_i_reg_259 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_347_p2.read()))) {
        pix_val_load_1_reg_248 = tmp_15_i_fu_384_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        pix_val_load_1_reg_248 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_302_p2.read()))) {
        r_V_3_reg_201 = phitmp_i_fu_329_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        r_V_3_reg_201 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_302_p2.read()))) {
        r_V_4_reg_213 = phitmp1_i_fu_335_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        r_V_4_reg_213 = ap_const_lv1_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1))) {
        t_V_1_reg_236 = c_V_reg_501.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_284_p2.read()))) {
        t_V_1_reg_236 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_302_p2.read()))) {
        t_V_reg_225 = r_V_reg_488.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        t_V_reg_225 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_320_p2.read()))) {
        tmp_1_reg_270 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_1_reg_270 = tmp_11_i_fu_473_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_out.read()))) {
            video_in_V_data_V_0_sel_rd =  (sc_logic) (~video_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_in.read()))) {
            video_in_V_data_V_0_sel_wr =  (sc_logic) (~video_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            video_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(video_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_ack_out.read()))))) {
            video_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        video_in_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())))) {
            video_in_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, video_in_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, video_in_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_dest_V_0_ack_out.read()))))) {
            video_in_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            video_in_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        c_V_reg_501 = c_V_fu_308_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_V_reg_488 = r_V_fu_290_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_284_p2.read()))) {
        tmp_1_i_reg_493 = tmp_1_i_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        tmp_data_V_reg_509 = video_in_V_data_V_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_347_p2.read()))) {
        tmp_reg_537 = mul_fu_394_p2.read().range(64, 34);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_A.read())) {
        video_in_V_data_V_0_payload_A = video_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_load_B.read())) {
        video_in_V_data_V_0_payload_B = video_in_TDATA.read();
    }
}

void integralImg::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void integralImg::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void integralImg::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void integralImg::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void integralImg::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void integralImg::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void integralImg::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void integralImg::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read()));
}

void integralImg::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_284_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void integralImg::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void integralImg::thread_ap_predicate_op32_read_state3() {
    ap_predicate_op32_read_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()));
}

void integralImg::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void integralImg::thread_buf_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        buf_0_address0 =  (sc_lv<10>) (tmp_16_i_fu_479_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_0_address0 =  (sc_lv<10>) (tmp_i_23_fu_410_p1.read());
    } else {
        buf_0_address0 = "XXXXXXXXXX";
    }
}

void integralImg::thread_buf_0_address1() {
    buf_0_address1 =  (sc_lv<10>) (tmp_5_i_fu_422_p1.read());
}

void integralImg::thread_buf_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1)))) {
        buf_0_ce0 = ap_const_logic_1;
    } else {
        buf_0_ce0 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_0_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_0_ce1 = ap_const_logic_1;
    } else {
        buf_0_ce1 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, r_V_4_reg_213.read()))) {
        buf_0_we0 = ap_const_logic_1;
    } else {
        buf_0_we0 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        buf_1_address0 =  (sc_lv<10>) (tmp_16_i_fu_479_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_1_address0 =  (sc_lv<10>) (tmp_i_23_fu_410_p1.read());
    } else {
        buf_1_address0 = "XXXXXXXXXX";
    }
}

void integralImg::thread_buf_1_address1() {
    buf_1_address1 =  (sc_lv<10>) (tmp_5_i_fu_422_p1.read());
}

void integralImg::thread_buf_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1)))) {
        buf_1_ce0 = ap_const_logic_1;
    } else {
        buf_1_ce0 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_1_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_1_ce1 = ap_const_logic_1;
    } else {
        buf_1_ce1 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, r_V_4_reg_213.read()))) {
        buf_1_we0 = ap_const_logic_1;
    } else {
        buf_1_we0 = ap_const_logic_0;
    }
}

void integralImg::thread_buf_load_1_phi_i_fu_445_p3() {
    buf_load_1_phi_i_fu_445_p3 = (!r_V_3_reg_201.read()[0].is_01())? sc_lv<32>(): ((r_V_3_reg_201.read()[0].to_bool())? buf_1_q1.read(): buf_0_q1.read());
}

void integralImg::thread_buf_load_2_phi_i_fu_453_p3() {
    buf_load_2_phi_i_fu_453_p3 = (!r_V_4_reg_213.read()[0].is_01())? sc_lv<32>(): ((r_V_4_reg_213.read()[0].to_bool())? buf_1_q1.read(): buf_0_q1.read());
}

void integralImg::thread_buf_load_phi_i_fu_437_p3() {
    buf_load_phi_i_fu_437_p3 = (!r_V_3_reg_201.read()[0].is_01())? sc_lv<32>(): ((r_V_3_reg_201.read()[0].to_bool())? buf_1_q0.read(): buf_0_q0.read());
}

void integralImg::thread_c_V_fu_308_p2() {
    c_V_fu_308_p2 = (!t_V_1_reg_236.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(t_V_1_reg_236.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void integralImg::thread_exitcond_i_fu_347_p2() {
    exitcond_i_fu_347_p2 = (!i_i_reg_259.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_259.read() == ap_const_lv2_3);
}

void integralImg::thread_i_fu_353_p2() {
    i_fu_353_p2 = (!i_i_reg_259.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_i_reg_259.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void integralImg::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_284_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void integralImg::thread_mul_fu_394_p0() {
    mul_fu_394_p0 =  (sc_lv<32>) (mul_fu_394_p00.read());
}

void integralImg::thread_mul_fu_394_p00() {
    mul_fu_394_p00 = esl_zext<65,32>(pix_val_load_1_reg_248.read());
}

void integralImg::thread_mul_fu_394_p2() {
    mul_fu_394_p2 = (!mul_fu_394_p0.read().is_01() || !ap_const_lv65_155555556.is_01())? sc_lv<65>(): sc_biguint<32>(mul_fu_394_p0.read()) * sc_biguint<65>(ap_const_lv65_155555556);
}

void integralImg::thread_or_cond_i_fu_320_p2() {
    or_cond_i_fu_320_p2 = (tmp_1_i_reg_493.read() | tmp_6_i_fu_314_p2.read());
}

void integralImg::thread_phitmp1_i_fu_335_p2() {
    phitmp1_i_fu_335_p2 = (r_V_4_reg_213.read() ^ ap_const_lv1_1);
}

void integralImg::thread_phitmp_i_fu_329_p2() {
    phitmp_i_fu_329_p2 = (r_V_3_reg_201.read() ^ ap_const_lv1_1);
}

void integralImg::thread_r_V_fu_290_p2() {
    r_V_fu_290_p2 = (!t_V_reg_225.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(t_V_reg_225.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void integralImg::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void integralImg::thread_ret_V_fu_416_p2() {
    ret_V_fu_416_p2 = (!t_V_1_reg_236.read().is_01() || !ap_const_lv10_3FF.is_01())? sc_lv<10>(): (sc_biguint<10>(t_V_1_reg_236.read()) + sc_bigint<10>(ap_const_lv10_3FF));
}

void integralImg::thread_start_out() {
    start_out = real_start.read();
}

void integralImg::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void integralImg::thread_sum_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sum_V_blk_n = sum_V_full_n.read();
    } else {
        sum_V_blk_n = ap_const_logic_1;
    }
}

void integralImg::thread_sum_V_din() {
    sum_V_din = tmp_1_reg_270.read();
}

void integralImg::thread_sum_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1))) {
        sum_V_write = ap_const_logic_1;
    } else {
        sum_V_write = ap_const_logic_0;
    }
}

void integralImg::thread_tmp_10_i_fu_467_p2() {
    tmp_10_i_fu_467_p2 = (!tmp_7_i_fu_461_p2.read().is_01() || !buf_load_1_phi_i_fu_445_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_i_fu_461_p2.read()) - sc_biguint<32>(buf_load_1_phi_i_fu_445_p3.read()));
}

void integralImg::thread_tmp_11_i_fu_473_p2() {
    tmp_11_i_fu_473_p2 = (!buf_load_2_phi_i_fu_453_p3.read().is_01() || !tmp_10_i_fu_467_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(buf_load_2_phi_i_fu_453_p3.read()) + sc_biguint<32>(tmp_10_i_fu_467_p2.read()));
}

void integralImg::thread_tmp_12_cast_i_cast_fu_367_p1() {
    tmp_12_cast_i_cast_fu_367_p1 = esl_zext<24,5>(tmp_12_i_fu_359_p3.read());
}

void integralImg::thread_tmp_12_i_fu_359_p3() {
    tmp_12_i_fu_359_p3 = esl_concat<2,3>(i_i_reg_259.read(), ap_const_lv3_0);
}

void integralImg::thread_tmp_13_i_fu_371_p2() {
    tmp_13_i_fu_371_p2 = (!tmp_12_cast_i_cast_fu_367_p1.read().is_01())? sc_lv<24>(): tmp_data_V_reg_509.read() >> (unsigned short)tmp_12_cast_i_cast_fu_367_p1.read().to_uint();
}

void integralImg::thread_tmp_14_cast_i_fu_380_p1() {
    tmp_14_cast_i_fu_380_p1 = esl_zext<32,8>(tmp_2_fu_376_p1.read());
}

void integralImg::thread_tmp_15_i_fu_384_p2() {
    tmp_15_i_fu_384_p2 = (!pix_val_load_1_reg_248.read().is_01() || !tmp_14_cast_i_fu_380_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(pix_val_load_1_reg_248.read()) + sc_biguint<32>(tmp_14_cast_i_fu_380_p1.read()));
}

void integralImg::thread_tmp_16_i_fu_479_p1() {
    tmp_16_i_fu_479_p1 = esl_zext<64,10>(t_V_1_reg_236.read());
}

void integralImg::thread_tmp_1_i_fu_296_p2() {
    tmp_1_i_fu_296_p2 = (!t_V_reg_225.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_225.read() == ap_const_lv10_0);
}

void integralImg::thread_tmp_2_fu_376_p1() {
    tmp_2_fu_376_p1 = tmp_13_i_fu_371_p2.read().range(8-1, 0);
}

void integralImg::thread_tmp_3_fu_428_p1() {
    tmp_3_fu_428_p1 = esl_sext<32,31>(tmp_reg_537.read());
}

void integralImg::thread_tmp_4_i_fu_302_p2() {
    tmp_4_i_fu_302_p2 = (!t_V_1_reg_236.read().is_01() || !ap_const_lv10_321.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_236.read() == ap_const_lv10_321);
}

void integralImg::thread_tmp_5_i_fu_422_p1() {
    tmp_5_i_fu_422_p1 = esl_zext<64,10>(ret_V_fu_416_p2.read());
}

void integralImg::thread_tmp_6_i_fu_314_p2() {
    tmp_6_i_fu_314_p2 = (!t_V_1_reg_236.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_236.read() == ap_const_lv10_0);
}

void integralImg::thread_tmp_7_i_fu_461_p2() {
    tmp_7_i_fu_461_p2 = (!tmp_3_fu_428_p1.read().is_01() || !buf_load_phi_i_fu_437_p3.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_3_fu_428_p1.read()) + sc_biguint<32>(buf_load_phi_i_fu_437_p3.read()));
}

void integralImg::thread_tmp_i_23_fu_410_p1() {
    tmp_i_23_fu_410_p1 = esl_zext<64,10>(t_V_1_reg_236.read());
}

void integralImg::thread_tmp_i_fu_284_p2() {
    tmp_i_fu_284_p2 = (!t_V_reg_225.read().is_01() || !ap_const_lv10_259.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_225.read() == ap_const_lv10_259);
}

void integralImg::thread_video_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()))) {
        video_in_TDATA_blk_n = video_in_V_data_V_0_state.read()[0];
    } else {
        video_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void integralImg::thread_video_in_TREADY() {
    video_in_TREADY = video_in_V_dest_V_0_state.read()[1];
}

void integralImg::thread_video_in_V_data_V_0_ack_in() {
    video_in_V_data_V_0_ack_in = video_in_V_data_V_0_state.read()[1];
}

void integralImg::thread_video_in_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        video_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void integralImg::thread_video_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, video_in_V_data_V_0_sel.read())) {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_B.read();
    } else {
        video_in_V_data_V_0_data_out = video_in_V_data_V_0_payload_A.read();
    }
}

void integralImg::thread_video_in_V_data_V_0_load_A() {
    video_in_V_data_V_0_load_A = (video_in_V_data_V_0_state_cmp_full.read() & ~video_in_V_data_V_0_sel_wr.read());
}

void integralImg::thread_video_in_V_data_V_0_load_B() {
    video_in_V_data_V_0_load_B = (video_in_V_data_V_0_sel_wr.read() & video_in_V_data_V_0_state_cmp_full.read());
}

void integralImg::thread_video_in_V_data_V_0_sel() {
    video_in_V_data_V_0_sel = video_in_V_data_V_0_sel_rd.read();
}

void integralImg::thread_video_in_V_data_V_0_state_cmp_full() {
    video_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!video_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(video_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void integralImg::thread_video_in_V_data_V_0_vld_in() {
    video_in_V_data_V_0_vld_in = video_in_TVALID.read();
}

void integralImg::thread_video_in_V_data_V_0_vld_out() {
    video_in_V_data_V_0_vld_out = video_in_V_data_V_0_state.read()[0];
}

void integralImg::thread_video_in_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
        video_in_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        video_in_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void integralImg::thread_video_in_V_dest_V_0_vld_in() {
    video_in_V_dest_V_0_vld_in = video_in_TVALID.read();
}

void integralImg::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_284_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_i_fu_302_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_i_fu_320_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_i_fu_302_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, video_in_V_data_V_0_vld_out.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_read_state3.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_i_fu_320_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i_fu_347_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(sum_V_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

