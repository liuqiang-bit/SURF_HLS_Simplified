-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcHaarPattern_x_y is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    sumBuf_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_0_ce0 : OUT STD_LOGIC;
    sumBuf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_0_ce1 : OUT STD_LOGIC;
    sumBuf_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_1_ce0 : OUT STD_LOGIC;
    sumBuf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_1_ce1 : OUT STD_LOGIC;
    sumBuf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_2_ce0 : OUT STD_LOGIC;
    sumBuf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_2_ce1 : OUT STD_LOGIC;
    sumBuf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_3_ce0 : OUT STD_LOGIC;
    sumBuf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_3_ce1 : OUT STD_LOGIC;
    sumBuf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_4_ce0 : OUT STD_LOGIC;
    sumBuf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_4_ce1 : OUT STD_LOGIC;
    sumBuf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_5_ce0 : OUT STD_LOGIC;
    sumBuf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_5_ce1 : OUT STD_LOGIC;
    sumBuf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_6_ce0 : OUT STD_LOGIC;
    sumBuf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_6_ce1 : OUT STD_LOGIC;
    sumBuf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_7_ce0 : OUT STD_LOGIC;
    sumBuf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_7_ce1 : OUT STD_LOGIC;
    sumBuf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_8_ce0 : OUT STD_LOGIC;
    sumBuf_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_8_ce1 : OUT STD_LOGIC;
    sumBuf_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_9_ce0 : OUT STD_LOGIC;
    sumBuf_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_9_ce1 : OUT STD_LOGIC;
    sumBuf_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_10_ce0 : OUT STD_LOGIC;
    sumBuf_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_10_ce1 : OUT STD_LOGIC;
    sumBuf_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_11_ce0 : OUT STD_LOGIC;
    sumBuf_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_11_ce1 : OUT STD_LOGIC;
    sumBuf_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_12_ce0 : OUT STD_LOGIC;
    sumBuf_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_12_ce1 : OUT STD_LOGIC;
    sumBuf_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_13_ce0 : OUT STD_LOGIC;
    sumBuf_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_13_ce1 : OUT STD_LOGIC;
    sumBuf_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_14_ce0 : OUT STD_LOGIC;
    sumBuf_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_14_ce1 : OUT STD_LOGIC;
    sumBuf_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_15_ce0 : OUT STD_LOGIC;
    sumBuf_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_15_ce1 : OUT STD_LOGIC;
    sumBuf_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_16_ce0 : OUT STD_LOGIC;
    sumBuf_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_16_ce1 : OUT STD_LOGIC;
    sumBuf_16_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_17_ce0 : OUT STD_LOGIC;
    sumBuf_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_17_ce1 : OUT STD_LOGIC;
    sumBuf_17_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_18_ce0 : OUT STD_LOGIC;
    sumBuf_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_18_ce1 : OUT STD_LOGIC;
    sumBuf_18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_19_ce0 : OUT STD_LOGIC;
    sumBuf_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_19_ce1 : OUT STD_LOGIC;
    sumBuf_19_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_20_ce0 : OUT STD_LOGIC;
    sumBuf_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_20_ce1 : OUT STD_LOGIC;
    sumBuf_20_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_21_ce0 : OUT STD_LOGIC;
    sumBuf_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_21_ce1 : OUT STD_LOGIC;
    sumBuf_21_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBufIndex_V : IN STD_LOGIC_VECTOR (175 downto 0);
    rOffset : IN STD_LOGIC_VECTOR (4 downto 0);
    cOffset : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calcHaarPattern_x_y is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_AF : STD_LOGIC_VECTOR (7 downto 0) := "10101111";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv176_lc_1 : STD_LOGIC_VECTOR (175 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_p_hls_fptosi_float_i_fu_1484_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1528 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_p_hls_fptosi_float_i_fu_1496_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1532 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_400_fu_1546_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_400_reg_3178 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_419_fu_1550_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_419_reg_3184 : STD_LOGIC_VECTOR (28 downto 0);
    signal cOffset_cast_fu_1558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cOffset_cast_reg_3190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1564_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_reg_3196 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_179_cast_fu_1604_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_179_cast_reg_3204 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_402_fu_1644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_402_reg_3212 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_403_fu_1650_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_403_reg_3219 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_404_fu_1658_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_404_reg_3226 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_407_fu_1662_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_407_reg_3232 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_421_fu_1730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_421_reg_3457 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_422_fu_1736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_422_reg_3464 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_423_fu_1744_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_423_reg_3471 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_426_fu_1748_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_426_reg_3477 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_438_fu_1754_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_438_reg_3482 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_457_fu_1758_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_457_reg_3488 : STD_LOGIC_VECTOR (28 downto 0);
    signal sumBufIndex_V_read_reg_3494 : STD_LOGIC_VECTOR (175 downto 0);
    signal box_2_4_read_2_reg_3506 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_2_4_read_2_reg_3506_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_2_4_read_2_reg_3506_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_4_read_2_reg_3511 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_4_read_2_reg_3511_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_4_read_2_reg_3511_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_0_4_read_2_reg_3516 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_0_4_read_2_reg_3516_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_219_fu_1835_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_219_reg_3521 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_220_fu_1885_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_220_reg_3526 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_221_fu_2008_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_221_reg_3531 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_222_fu_2058_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_222_reg_3536 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_440_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_440_reg_3541 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_441_fu_2174_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_441_reg_3548 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_442_fu_2182_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_442_reg_3555 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_445_fu_2186_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_445_reg_3561 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_459_fu_2252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_459_reg_3786 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_460_fu_2258_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_460_reg_3793 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_461_fu_2266_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_461_reg_3800 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_464_fu_2270_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_464_reg_3806 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_476_fu_2276_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_476_reg_3811 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_495_fu_2280_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_495_reg_3817 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_101_fu_2293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_101_reg_3823 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_223_fu_2369_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_223_reg_3828 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_fu_2419_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_reg_3833 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_225_fu_2540_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_225_reg_3838 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_226_fu_2590_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_226_reg_3843 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_478_fu_2700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_478_reg_3848 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_479_fu_2706_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_479_reg_3855 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_480_fu_2714_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_480_reg_3862 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_483_fu_2718_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_483_reg_3868 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_497_fu_2784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_497_reg_4093 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_fu_2790_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_498_reg_4100 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_499_fu_2798_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_499_reg_4107 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_502_fu_2802_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_502_reg_4113 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_189_1_fu_2817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_1_reg_4118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_227_fu_2893_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_227_reg_4123 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_228_fu_2943_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_228_reg_4128 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_229_fu_3064_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_229_reg_4133 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_230_fu_3114_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_230_reg_4138 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_2_fu_3173_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_189_2_reg_4143 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1525_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_102_reg_4148 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_1_reg_4153 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_2_reg_4158 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_reg_4163 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_1_reg_4168 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_1_reg_4168_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_2_reg_4173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_2_reg_4173_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_2_reg_4173_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_4178 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_1_reg_4183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_port_reg_box_0_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumBufIndex_V : STD_LOGIC_VECTOR (175 downto 0);
    signal ap_port_reg_rOffset : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_port_reg_cOffset : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1484_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1484_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1490_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1490_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1490_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1496_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1496_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1502_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1502_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1502_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_81_fu_1572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_91_fu_1668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_153_1_fu_2108_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_162_1_fu_2192_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_153_2_fu_2640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_162_2_fu_2724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1516_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1521_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1525_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1536_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1541_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rOffset_cast_fu_1554_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1536_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_1568_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_84_fu_1598_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_1608_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_86_fu_1613_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1627_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_fu_1636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_fu_1621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_401_fu_1632_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1541_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_94_fu_1694_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_96_fu_1699_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_1713_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_5_fu_1722_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_5_fu_1707_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_420_fu_1718_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_406_fu_1772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_408_fu_1776_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_405_fu_1762_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_409_fu_1780_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_411_fu_1794_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_412_fu_1799_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_410_fu_1787_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_413_fu_1805_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_414_fu_1809_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_415_fu_1813_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_416_fu_1819_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_417_fu_1825_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_418_fu_1831_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_425_fu_1945_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_427_fu_1949_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_424_fu_1935_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_428_fu_1953_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_430_fu_1967_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_431_fu_1972_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_429_fu_1960_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_432_fu_1978_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_433_fu_1982_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_434_fu_1986_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_435_fu_1992_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_436_fu_1998_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_437_fu_2004_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15525_1_fu_2134_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_156_1_fu_2138_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15823_1_fu_2152_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_1_fu_2160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_1_fu_2146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_439_fu_2156_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17317_1_fu_2218_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_174_1_fu_2222_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17615_1_fu_2236_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_5_1_fu_2244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_5_1_fu_2230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_458_fu_2240_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_99_fu_2284_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_100_fu_2288_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_444_fu_2307_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_446_fu_2311_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_443_fu_2298_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_447_fu_2315_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_449_fu_2328_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_450_fu_2333_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_448_fu_2322_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_451_fu_2339_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_452_fu_2343_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_453_fu_2347_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_454_fu_2353_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_455_fu_2359_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_456_fu_2365_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_463_fu_2478_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_465_fu_2482_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_462_fu_2469_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_466_fu_2486_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_468_fu_2499_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_469_fu_2504_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_467_fu_2493_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_470_fu_2510_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_471_fu_2514_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_472_fu_2518_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_473_fu_2524_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_474_fu_2530_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_475_fu_2536_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15525_2_fu_2666_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_156_2_fu_2670_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15823_2_fu_2684_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_2_fu_2692_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_fu_2678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_477_fu_2688_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17317_2_fu_2750_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_174_2_fu_2754_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17615_2_fu_2768_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_5_2_fu_2776_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_5_2_fu_2762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_496_fu_2772_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_187_1_fu_2808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_188_1_fu_2812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_482_fu_2831_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_484_fu_2835_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_481_fu_2822_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_485_fu_2839_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_487_fu_2852_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_488_fu_2857_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_486_fu_2846_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_489_fu_2863_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_490_fu_2867_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_491_fu_2871_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_492_fu_2877_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_493_fu_2883_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_494_fu_2889_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_501_fu_3002_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_503_fu_3006_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_500_fu_2993_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_504_fu_3010_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_506_fu_3023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_507_fu_3028_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_505_fu_3017_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_508_fu_3034_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_509_fu_3038_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_510_fu_3042_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_511_fu_3048_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_512_fu_3054_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_513_fu_3060_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_187_2_fu_3164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_188_2_fu_3168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1516_ce : STD_LOGIC;
    signal grp_fu_1521_ce : STD_LOGIC;
    signal grp_fu_1525_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component p_hls_fptosi_float_i IS
    port (
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_faddbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_fmulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_sitodEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_p_hls_fptosi_float_i_fu_1484 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1484_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1484_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1484_ap_return);

    grp_p_hls_fptosi_float_i_fu_1490 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1490_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1490_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1490_ap_return);

    grp_p_hls_fptosi_float_i_fu_1496 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1496_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1496_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1496_ap_return);

    grp_p_hls_fptosi_float_i_fu_1502 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1502_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1502_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1502_ap_return);

    surfDetector_faddbkb_U11 : component surfDetector_faddbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1516_p0,
        din1 => grp_fu_1516_p1,
        ce => grp_fu_1516_ce,
        dout => grp_fu_1516_p2);

    surfDetector_fmulcud_U12 : component surfDetector_fmulcud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1521_p0,
        din1 => grp_fu_1521_p1,
        ce => grp_fu_1521_ce,
        dout => grp_fu_1521_p2);

    surfDetector_sitodEe_U13 : component surfDetector_sitodEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1525_p0,
        ce => grp_fu_1525_ce,
        dout => grp_fu_1525_p1);

    surfDetector_mux_eOg_U14 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_418_fu_1831_p1,
        dout => tmp_219_fu_1835_p24);

    surfDetector_mux_eOg_U15 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_418_fu_1831_p1,
        dout => tmp_220_fu_1885_p24);

    surfDetector_mux_eOg_U16 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_437_fu_2004_p1,
        dout => tmp_221_fu_2008_p24);

    surfDetector_mux_eOg_U17 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_437_fu_2004_p1,
        dout => tmp_222_fu_2058_p24);

    surfDetector_mux_eOg_U18 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_456_fu_2365_p1,
        dout => tmp_223_fu_2369_p24);

    surfDetector_mux_eOg_U19 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_456_fu_2365_p1,
        dout => tmp_224_fu_2419_p24);

    surfDetector_mux_eOg_U20 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_475_fu_2536_p1,
        dout => tmp_225_fu_2540_p24);

    surfDetector_mux_eOg_U21 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_475_fu_2536_p1,
        dout => tmp_226_fu_2590_p24);

    surfDetector_mux_eOg_U22 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_494_fu_2889_p1,
        dout => tmp_227_fu_2893_p24);

    surfDetector_mux_eOg_U23 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_494_fu_2889_p1,
        dout => tmp_228_fu_2943_p24);

    surfDetector_mux_eOg_U24 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_513_fu_3060_p1,
        dout => tmp_229_fu_3064_p24);

    surfDetector_mux_eOg_U25 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_513_fu_3060_p1,
        dout => tmp_230_fu_3114_p24);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_box_0_4_read <= box_0_4_read;
                ap_port_reg_box_1_0_read <= box_1_0_read;
                ap_port_reg_box_1_1_read <= box_1_1_read;
                ap_port_reg_box_1_2_read <= box_1_2_read;
                ap_port_reg_box_1_3_read <= box_1_3_read;
                ap_port_reg_box_1_4_read <= box_1_4_read;
                ap_port_reg_box_2_0_read <= box_2_0_read;
                ap_port_reg_box_2_1_read <= box_2_1_read;
                ap_port_reg_box_2_2_read <= box_2_2_read;
                ap_port_reg_box_2_3_read <= box_2_3_read;
                ap_port_reg_box_2_4_read <= box_2_4_read;
                ap_port_reg_cOffset <= cOffset;
                ap_port_reg_rOffset <= rOffset;
                ap_port_reg_sumBufIndex_V <= sumBufIndex_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                box_0_4_read_2_reg_3516 <= ap_port_reg_box_0_4_read;
                box_0_4_read_2_reg_3516_pp0_iter1_reg <= box_0_4_read_2_reg_3516;
                box_1_4_read_2_reg_3511 <= ap_port_reg_box_1_4_read;
                box_1_4_read_2_reg_3511_pp0_iter1_reg <= box_1_4_read_2_reg_3511;
                box_1_4_read_2_reg_3511_pp0_iter2_reg <= box_1_4_read_2_reg_3511_pp0_iter1_reg;
                box_2_4_read_2_reg_3506 <= ap_port_reg_box_2_4_read;
                box_2_4_read_2_reg_3506_pp0_iter1_reg <= box_2_4_read_2_reg_3506;
                box_2_4_read_2_reg_3506_pp0_iter2_reg <= box_2_4_read_2_reg_3506_pp0_iter1_reg;
                sumBufIndex_V_read_reg_3494 <= ap_port_reg_sumBufIndex_V;
                tmp_189_2_reg_4143 <= tmp_189_2_fu_3173_p2;
                tmp_191_1_reg_4168_pp0_iter4_reg <= tmp_191_1_reg_4168;
                tmp_219_reg_3521 <= tmp_219_fu_1835_p24;
                tmp_220_reg_3526 <= tmp_220_fu_1885_p24;
                tmp_221_reg_3531 <= tmp_221_fu_2008_p24;
                tmp_222_reg_3536 <= tmp_222_fu_2058_p24;
                tmp_440_reg_3541 <= tmp_440_fu_2168_p2;
                    tmp_441_reg_3548(7 downto 3) <= tmp_441_fu_2174_p3(7 downto 3);
                    tmp_442_reg_3555(7 downto 3) <= tmp_442_fu_2182_p1(7 downto 3);
                    tmp_445_reg_3561(7 downto 3) <= tmp_445_fu_2186_p2(7 downto 3);
                tmp_459_reg_3786 <= tmp_459_fu_2252_p2;
                    tmp_460_reg_3793(7 downto 3) <= tmp_460_fu_2258_p3(7 downto 3);
                    tmp_461_reg_3800(7 downto 3) <= tmp_461_fu_2266_p1(7 downto 3);
                    tmp_464_reg_3806(7 downto 3) <= tmp_464_fu_2270_p2(7 downto 3);
                tmp_476_reg_3811 <= tmp_476_fu_2276_p1;
                tmp_495_reg_3817 <= tmp_495_fu_2280_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    cOffset_cast_reg_3190(10 downto 0) <= cOffset_cast_fu_1558_p1(10 downto 0);
                    tmp_179_cast_reg_3204(10 downto 0) <= tmp_179_cast_fu_1604_p1(10 downto 0);
                tmp_189_1_reg_4118 <= tmp_189_1_fu_2817_p2;
                tmp_227_reg_4123 <= tmp_227_fu_2893_p24;
                tmp_228_reg_4128 <= tmp_228_fu_2943_p24;
                tmp_229_reg_4133 <= tmp_229_fu_3064_p24;
                tmp_230_reg_4138 <= tmp_230_fu_3114_p24;
                tmp_402_reg_3212 <= tmp_402_fu_1644_p2;
                    tmp_403_reg_3219(7 downto 3) <= tmp_403_fu_1650_p3(7 downto 3);
                    tmp_404_reg_3226(7 downto 3) <= tmp_404_fu_1658_p1(7 downto 3);
                    tmp_407_reg_3232(7 downto 3) <= tmp_407_fu_1662_p2(7 downto 3);
                tmp_421_reg_3457 <= tmp_421_fu_1730_p2;
                    tmp_422_reg_3464(7 downto 3) <= tmp_422_fu_1736_p3(7 downto 3);
                    tmp_423_reg_3471(7 downto 3) <= tmp_423_fu_1744_p1(7 downto 3);
                    tmp_426_reg_3477(7 downto 3) <= tmp_426_fu_1748_p2(7 downto 3);
                tmp_438_reg_3482 <= tmp_438_fu_1754_p1;
                tmp_457_reg_3488 <= tmp_457_fu_1758_p1;
                    tmp_reg_3196(9 downto 0) <= tmp_fu_1564_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_2_1_reg_4183 <= grp_fu_1516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                d_2_reg_4178 <= grp_fu_1516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_1528 <= grp_p_hls_fptosi_float_i_fu_1484_ap_return;
                reg_1532 <= grp_p_hls_fptosi_float_i_fu_1496_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_101_reg_3823 <= tmp_101_fu_2293_p2;
                tmp_191_2_reg_4173_pp0_iter5_reg <= tmp_191_2_reg_4173;
                tmp_191_2_reg_4173_pp0_iter6_reg <= tmp_191_2_reg_4173_pp0_iter5_reg;
                tmp_223_reg_3828 <= tmp_223_fu_2369_p24;
                tmp_224_reg_3833 <= tmp_224_fu_2419_p24;
                tmp_225_reg_3838 <= tmp_225_fu_2540_p24;
                tmp_226_reg_3843 <= tmp_226_fu_2590_p24;
                tmp_400_reg_3178 <= tmp_400_fu_1546_p1;
                tmp_419_reg_3184 <= tmp_419_fu_1550_p1;
                tmp_478_reg_3848 <= tmp_478_fu_2700_p2;
                    tmp_479_reg_3855(7 downto 3) <= tmp_479_fu_2706_p3(7 downto 3);
                    tmp_480_reg_3862(7 downto 3) <= tmp_480_fu_2714_p1(7 downto 3);
                    tmp_483_reg_3868(7 downto 3) <= tmp_483_fu_2718_p2(7 downto 3);
                tmp_497_reg_4093 <= tmp_497_fu_2784_p2;
                    tmp_498_reg_4100(7 downto 3) <= tmp_498_fu_2790_p3(7 downto 3);
                    tmp_499_reg_4107(7 downto 3) <= tmp_499_fu_2798_p1(7 downto 3);
                    tmp_502_reg_4113(7 downto 3) <= tmp_502_fu_2802_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_102_reg_4148 <= grp_fu_1525_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_103_reg_4163 <= grp_fu_1521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp_190_1_reg_4153 <= grp_fu_1525_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_190_2_reg_4158 <= grp_fu_1525_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                tmp_191_1_reg_4168 <= grp_fu_1521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_191_2_reg_4173 <= grp_fu_1521_p2;
            end if;
        end if;
    end process;
    cOffset_cast_reg_3190(31 downto 11) <= "000000000000000000000";
    tmp_reg_3196(28 downto 10) <= "0000000000000000000";
    tmp_179_cast_reg_3204(28 downto 11) <= "000000000000000000";
    tmp_403_reg_3219(2 downto 0) <= "000";
    tmp_404_reg_3226(2 downto 0) <= "111";
    tmp_407_reg_3232(2 downto 0) <= "111";
    tmp_422_reg_3464(2 downto 0) <= "000";
    tmp_423_reg_3471(2 downto 0) <= "111";
    tmp_426_reg_3477(2 downto 0) <= "111";
    tmp_441_reg_3548(2 downto 0) <= "000";
    tmp_442_reg_3555(2 downto 0) <= "111";
    tmp_445_reg_3561(2 downto 0) <= "111";
    tmp_460_reg_3793(2 downto 0) <= "000";
    tmp_461_reg_3800(2 downto 0) <= "111";
    tmp_464_reg_3806(2 downto 0) <= "111";
    tmp_479_reg_3855(2 downto 0) <= "000";
    tmp_480_reg_3862(2 downto 0) <= "111";
    tmp_483_reg_3868(2 downto 0) <= "111";
    tmp_498_reg_4100(2 downto 0) <= "000";
    tmp_499_reg_4107(2 downto 0) <= "111";
    tmp_502_reg_4113(2 downto 0) <= "111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    Hi_assign_1_fu_2146_p2 <= std_logic_vector(unsigned(tmp_156_1_fu_2138_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_2_fu_2678_p2 <= std_logic_vector(unsigned(tmp_156_2_fu_2670_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_5_1_fu_2230_p2 <= std_logic_vector(unsigned(tmp_174_1_fu_2222_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_5_2_fu_2762_p2 <= std_logic_vector(unsigned(tmp_174_2_fu_2754_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_5_fu_1707_p2 <= std_logic_vector(unsigned(tmp_96_fu_1699_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_fu_1621_p2 <= std_logic_vector(unsigned(tmp_86_fu_1613_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Lo_assign_1_fu_2160_p3 <= (tmp_15823_1_fu_2152_p2 & ap_const_lv3_0);
    Lo_assign_2_fu_2692_p3 <= (tmp_15823_2_fu_2684_p2 & ap_const_lv3_0);
    Lo_assign_5_1_fu_2244_p3 <= (tmp_17615_1_fu_2236_p2 & ap_const_lv3_0);
    Lo_assign_5_2_fu_2776_p3 <= (tmp_17615_2_fu_2768_p2 & ap_const_lv3_0);
    Lo_assign_5_fu_1722_p3 <= (tmp_97_fu_1713_p2 & ap_const_lv3_0);
    Lo_assign_fu_1636_p3 <= (tmp_87_fu_1627_p2 & ap_const_lv3_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, ap_ce, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_fu_1516_p2;
    cOffset_cast_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_port_reg_cOffset),32));

    grp_fu_1516_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1516_ce <= ap_const_logic_1;
        else 
            grp_fu_1516_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1516_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_103_reg_4163, d_2_reg_4178, d_2_1_reg_4183, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1516_p0 <= d_2_1_reg_4183;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1516_p0 <= d_2_reg_4178;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_1516_p0 <= tmp_103_reg_4163;
        else 
            grp_fu_1516_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1516_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_191_1_reg_4168_pp0_iter4_reg, tmp_191_2_reg_4173_pp0_iter6_reg, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1516_p1 <= tmp_191_2_reg_4173_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1516_p1 <= tmp_191_1_reg_4168_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_1516_p1 <= ap_const_lv32_0;
        else 
            grp_fu_1516_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1521_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1521_ce <= ap_const_logic_1;
        else 
            grp_fu_1521_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1521_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_102_reg_4148, tmp_190_1_reg_4153, tmp_190_2_reg_4158, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1521_p0 <= tmp_190_2_reg_4158;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1521_p0 <= tmp_190_1_reg_4153;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_1521_p0 <= tmp_102_reg_4148;
        else 
            grp_fu_1521_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1521_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, box_2_4_read_2_reg_3506_pp0_iter2_reg, box_1_4_read_2_reg_3511_pp0_iter2_reg, box_0_4_read_2_reg_3516_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1521_p1 <= box_2_4_read_2_reg_3506_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1521_p1 <= box_1_4_read_2_reg_3511_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_1521_p1 <= box_0_4_read_2_reg_3516_pp0_iter1_reg;
        else 
            grp_fu_1521_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1525_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1525_ce <= ap_const_logic_1;
        else 
            grp_fu_1525_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1525_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_101_reg_3823, tmp_189_1_reg_4118, tmp_189_2_reg_4143, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1525_p0 <= tmp_189_2_reg_4143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_1525_p0 <= tmp_189_1_reg_4118;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1525_p0 <= tmp_101_reg_3823;
        else 
            grp_fu_1525_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1536_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, cOffset_cast_fu_1558_p1, cOffset_cast_reg_3190, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1536_p0 <= cOffset_cast_reg_3190;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1536_p0 <= cOffset_cast_fu_1558_p1;
        else 
            grp_fu_1536_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1536_p2 <= std_logic_vector(unsigned(grp_fu_1536_p0) + unsigned(reg_1528));

    grp_fu_1541_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, cOffset_cast_fu_1558_p1, cOffset_cast_reg_3190, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1541_p0 <= cOffset_cast_reg_3190;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1541_p0 <= cOffset_cast_fu_1558_p1;
        else 
            grp_fu_1541_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1541_p2 <= std_logic_vector(unsigned(grp_fu_1541_p0) + unsigned(reg_1532));

    grp_p_hls_fptosi_float_i_fu_1484_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, box_0_2_read, ap_CS_fsm_pp0_stage1, ap_port_reg_box_1_2_read, ap_port_reg_box_2_2_read, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1484_x <= ap_port_reg_box_2_2_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1484_x <= ap_port_reg_box_1_2_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1484_x <= box_0_2_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1484_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1484_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1490_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, box_0_3_read, ap_CS_fsm_pp0_stage1, ap_port_reg_box_1_3_read, ap_port_reg_box_2_3_read, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1490_x <= ap_port_reg_box_2_3_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1490_x <= ap_port_reg_box_1_3_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1490_x <= box_0_3_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1490_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1490_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1496_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, box_0_0_read, ap_CS_fsm_pp0_stage1, ap_port_reg_box_1_0_read, ap_port_reg_box_2_0_read, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1496_x <= ap_port_reg_box_2_0_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1496_x <= ap_port_reg_box_1_0_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1496_x <= box_0_0_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1496_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1496_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1502_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage2, box_0_1_read, ap_CS_fsm_pp0_stage1, ap_port_reg_box_1_1_read, ap_port_reg_box_2_1_read, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1502_x <= ap_port_reg_box_2_1_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1502_x <= ap_port_reg_box_1_1_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1502_x <= box_0_1_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1502_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1502_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

        rOffset_cast_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_rOffset),10));


    sumBuf_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_0_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_0_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_0_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_0_ce0 <= ap_const_logic_1;
        else 
            sumBuf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_0_ce1 <= ap_const_logic_1;
        else 
            sumBuf_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_10_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_10_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_10_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_10_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_10_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_10_ce0 <= ap_const_logic_1;
        else 
            sumBuf_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_10_ce1 <= ap_const_logic_1;
        else 
            sumBuf_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_11_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_11_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_11_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_11_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_11_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_11_ce0 <= ap_const_logic_1;
        else 
            sumBuf_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_11_ce1 <= ap_const_logic_1;
        else 
            sumBuf_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_12_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_12_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_12_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_12_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_12_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_12_ce0 <= ap_const_logic_1;
        else 
            sumBuf_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_12_ce1 <= ap_const_logic_1;
        else 
            sumBuf_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_13_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_13_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_13_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_13_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_13_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_13_ce0 <= ap_const_logic_1;
        else 
            sumBuf_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_13_ce1 <= ap_const_logic_1;
        else 
            sumBuf_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_14_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_14_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_14_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_14_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_14_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_14_ce0 <= ap_const_logic_1;
        else 
            sumBuf_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_14_ce1 <= ap_const_logic_1;
        else 
            sumBuf_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_15_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_15_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_15_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_15_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_15_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_15_ce0 <= ap_const_logic_1;
        else 
            sumBuf_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_15_ce1 <= ap_const_logic_1;
        else 
            sumBuf_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_16_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_16_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_16_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_16_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_16_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_16_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_16_ce0 <= ap_const_logic_1;
        else 
            sumBuf_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_16_ce1 <= ap_const_logic_1;
        else 
            sumBuf_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_17_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_17_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_17_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_17_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_17_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_17_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_17_ce0 <= ap_const_logic_1;
        else 
            sumBuf_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_17_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_17_ce1 <= ap_const_logic_1;
        else 
            sumBuf_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_18_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_18_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_18_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_18_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_18_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_18_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_18_ce0 <= ap_const_logic_1;
        else 
            sumBuf_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_18_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_18_ce1 <= ap_const_logic_1;
        else 
            sumBuf_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_19_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_19_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_19_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_19_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_19_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_19_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_19_ce0 <= ap_const_logic_1;
        else 
            sumBuf_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_19_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_19_ce1 <= ap_const_logic_1;
        else 
            sumBuf_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_1_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_1_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_1_ce0 <= ap_const_logic_1;
        else 
            sumBuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_1_ce1 <= ap_const_logic_1;
        else 
            sumBuf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_20_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_20_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_20_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_20_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_20_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_20_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_20_ce0 <= ap_const_logic_1;
        else 
            sumBuf_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_20_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_20_ce1 <= ap_const_logic_1;
        else 
            sumBuf_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_21_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_21_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_21_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_21_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_21_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_21_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_21_ce0 <= ap_const_logic_1;
        else 
            sumBuf_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_21_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_21_ce1 <= ap_const_logic_1;
        else 
            sumBuf_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_2_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_2_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_2_ce0 <= ap_const_logic_1;
        else 
            sumBuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_2_ce1 <= ap_const_logic_1;
        else 
            sumBuf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_3_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_3_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_3_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_3_ce0 <= ap_const_logic_1;
        else 
            sumBuf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_3_ce1 <= ap_const_logic_1;
        else 
            sumBuf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_4_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_4_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_4_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_4_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_4_ce0 <= ap_const_logic_1;
        else 
            sumBuf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_4_ce1 <= ap_const_logic_1;
        else 
            sumBuf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_5_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_5_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_5_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_5_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_5_ce0 <= ap_const_logic_1;
        else 
            sumBuf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_5_ce1 <= ap_const_logic_1;
        else 
            sumBuf_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_6_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_6_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_6_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_6_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_6_ce0 <= ap_const_logic_1;
        else 
            sumBuf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_6_ce1 <= ap_const_logic_1;
        else 
            sumBuf_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_7_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_7_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_7_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_7_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_7_ce0 <= ap_const_logic_1;
        else 
            sumBuf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_7_ce1 <= ap_const_logic_1;
        else 
            sumBuf_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_8_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_8_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_8_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_8_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_8_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_8_ce0 <= ap_const_logic_1;
        else 
            sumBuf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_8_ce1 <= ap_const_logic_1;
        else 
            sumBuf_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_81_fu_1572_p1, tmp_153_1_fu_2108_p1, tmp_153_2_fu_2640_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_9_address0 <= tmp_153_2_fu_2640_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address0 <= tmp_153_1_fu_2108_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address0 <= tmp_81_fu_1572_p1(10 - 1 downto 0);
        else 
            sumBuf_9_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_9_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_91_fu_1668_p1, tmp_162_1_fu_2192_p1, tmp_162_2_fu_2724_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_9_address1 <= tmp_162_2_fu_2724_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address1 <= tmp_162_1_fu_2192_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address1 <= tmp_91_fu_1668_p1(10 - 1 downto 0);
        else 
            sumBuf_9_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_9_ce0 <= ap_const_logic_1;
        else 
            sumBuf_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_9_ce1 <= ap_const_logic_1;
        else 
            sumBuf_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_100_fu_2288_p2 <= std_logic_vector(unsigned(tmp_99_fu_2284_p2) - unsigned(tmp_221_reg_3531));
    tmp_101_fu_2293_p2 <= std_logic_vector(unsigned(tmp_222_reg_3536) + unsigned(tmp_100_fu_2288_p2));
        tmp_153_1_fu_2108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1536_p2),64));

        tmp_153_2_fu_2640_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1536_p2),64));

    tmp_15525_1_fu_2134_p2 <= std_logic_vector(unsigned(tmp_438_reg_3482) + unsigned(tmp_179_cast_reg_3204));
    tmp_15525_2_fu_2666_p2 <= std_logic_vector(unsigned(tmp_476_reg_3811) + unsigned(tmp_179_cast_reg_3204));
    tmp_156_1_fu_2138_p3 <= (tmp_15525_1_fu_2134_p2 & ap_const_lv3_0);
    tmp_156_2_fu_2670_p3 <= (tmp_15525_2_fu_2666_p2 & ap_const_lv3_0);
    tmp_15823_1_fu_2152_p2 <= std_logic_vector(unsigned(tmp_reg_3196) + unsigned(tmp_438_reg_3482));
    tmp_15823_2_fu_2684_p2 <= std_logic_vector(unsigned(tmp_reg_3196) + unsigned(tmp_476_reg_3811));
        tmp_162_1_fu_2192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1541_p2),64));

        tmp_162_2_fu_2724_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1541_p2),64));

    tmp_17317_1_fu_2218_p2 <= std_logic_vector(unsigned(tmp_457_reg_3488) + unsigned(tmp_179_cast_reg_3204));
    tmp_17317_2_fu_2750_p2 <= std_logic_vector(unsigned(tmp_495_reg_3817) + unsigned(tmp_179_cast_reg_3204));
    tmp_174_1_fu_2222_p3 <= (tmp_17317_1_fu_2218_p2 & ap_const_lv3_0);
    tmp_174_2_fu_2754_p3 <= (tmp_17317_2_fu_2750_p2 & ap_const_lv3_0);
    tmp_17615_1_fu_2236_p2 <= std_logic_vector(unsigned(tmp_reg_3196) + unsigned(tmp_457_reg_3488));
    tmp_17615_2_fu_2768_p2 <= std_logic_vector(unsigned(tmp_reg_3196) + unsigned(tmp_495_reg_3817));
    tmp_179_cast_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1598_p2),29));
    tmp_187_1_fu_2808_p2 <= std_logic_vector(unsigned(tmp_223_reg_3828) - unsigned(tmp_224_reg_3833));
    tmp_187_2_fu_3164_p2 <= std_logic_vector(unsigned(tmp_227_reg_4123) - unsigned(tmp_228_reg_4128));
    tmp_188_1_fu_2812_p2 <= std_logic_vector(unsigned(tmp_187_1_fu_2808_p2) - unsigned(tmp_225_reg_3838));
    tmp_188_2_fu_3168_p2 <= std_logic_vector(unsigned(tmp_187_2_fu_3164_p2) - unsigned(tmp_229_reg_4133));
    tmp_189_1_fu_2817_p2 <= std_logic_vector(unsigned(tmp_226_reg_3843) + unsigned(tmp_188_1_fu_2812_p2));
    tmp_189_2_fu_3173_p2 <= std_logic_vector(unsigned(tmp_230_reg_4138) + unsigned(tmp_188_2_fu_3168_p2));
    tmp_400_fu_1546_p1 <= grp_p_hls_fptosi_float_i_fu_1490_ap_return(29 - 1 downto 0);
    tmp_401_fu_1632_p1 <= tmp_87_fu_1627_p2(5 - 1 downto 0);
    tmp_402_fu_1644_p2 <= "1" when (unsigned(Lo_assign_fu_1636_p3) > unsigned(Hi_assign_fu_1621_p2)) else "0";
    tmp_403_fu_1650_p3 <= (tmp_401_fu_1632_p1 & ap_const_lv3_0);
    tmp_404_fu_1658_p1 <= Hi_assign_fu_1621_p2(8 - 1 downto 0);
    
    tmp_405_fu_1762_p4_proc : process(ap_port_reg_sumBufIndex_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_405_fu_1762_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := ap_port_reg_sumBufIndex_V;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_405_fu_1762_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_405_fu_1762_p4_i) := ap_port_reg_sumBufIndex_V(176-1-tmp_405_fu_1762_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_405_fu_1762_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_406_fu_1772_p2 <= std_logic_vector(unsigned(tmp_403_reg_3219) - unsigned(tmp_404_reg_3226));
    tmp_407_fu_1662_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_403_fu_1650_p3));
    tmp_408_fu_1776_p2 <= std_logic_vector(unsigned(tmp_404_reg_3226) - unsigned(tmp_403_reg_3219));
    tmp_409_fu_1780_p3 <= 
        tmp_406_fu_1772_p2 when (tmp_402_reg_3212(0) = '1') else 
        tmp_408_fu_1776_p2;
    tmp_410_fu_1787_p3 <= 
        tmp_405_fu_1762_p4 when (tmp_402_reg_3212(0) = '1') else 
        ap_port_reg_sumBufIndex_V;
    tmp_411_fu_1794_p3 <= 
        tmp_407_reg_3232 when (tmp_402_reg_3212(0) = '1') else 
        tmp_403_reg_3219;
    tmp_412_fu_1799_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_409_fu_1780_p3));
    tmp_413_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_411_fu_1794_p3),176));
    tmp_414_fu_1809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_412_fu_1799_p2),176));
    tmp_415_fu_1813_p2 <= std_logic_vector(shift_right(unsigned(tmp_410_fu_1787_p3),to_integer(unsigned('0' & tmp_413_fu_1805_p1(31-1 downto 0)))));
    tmp_416_fu_1819_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_414_fu_1809_p1(31-1 downto 0)))));
    tmp_417_fu_1825_p2 <= (tmp_416_fu_1819_p2 and tmp_415_fu_1813_p2);
    tmp_418_fu_1831_p1 <= tmp_417_fu_1825_p2(5 - 1 downto 0);
    tmp_419_fu_1550_p1 <= grp_p_hls_fptosi_float_i_fu_1502_ap_return(29 - 1 downto 0);
    tmp_420_fu_1718_p1 <= tmp_97_fu_1713_p2(5 - 1 downto 0);
    tmp_421_fu_1730_p2 <= "1" when (unsigned(Lo_assign_5_fu_1722_p3) > unsigned(Hi_assign_5_fu_1707_p2)) else "0";
    tmp_422_fu_1736_p3 <= (tmp_420_fu_1718_p1 & ap_const_lv3_0);
    tmp_423_fu_1744_p1 <= Hi_assign_5_fu_1707_p2(8 - 1 downto 0);
    
    tmp_424_fu_1935_p4_proc : process(ap_port_reg_sumBufIndex_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_424_fu_1935_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := ap_port_reg_sumBufIndex_V;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_424_fu_1935_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_424_fu_1935_p4_i) := ap_port_reg_sumBufIndex_V(176-1-tmp_424_fu_1935_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_424_fu_1935_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_425_fu_1945_p2 <= std_logic_vector(unsigned(tmp_422_reg_3464) - unsigned(tmp_423_reg_3471));
    tmp_426_fu_1748_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_422_fu_1736_p3));
    tmp_427_fu_1949_p2 <= std_logic_vector(unsigned(tmp_423_reg_3471) - unsigned(tmp_422_reg_3464));
    tmp_428_fu_1953_p3 <= 
        tmp_425_fu_1945_p2 when (tmp_421_reg_3457(0) = '1') else 
        tmp_427_fu_1949_p2;
    tmp_429_fu_1960_p3 <= 
        tmp_424_fu_1935_p4 when (tmp_421_reg_3457(0) = '1') else 
        ap_port_reg_sumBufIndex_V;
    tmp_430_fu_1967_p3 <= 
        tmp_426_reg_3477 when (tmp_421_reg_3457(0) = '1') else 
        tmp_422_reg_3464;
    tmp_431_fu_1972_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_428_fu_1953_p3));
    tmp_432_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_430_fu_1967_p3),176));
    tmp_433_fu_1982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_431_fu_1972_p2),176));
    tmp_434_fu_1986_p2 <= std_logic_vector(shift_right(unsigned(tmp_429_fu_1960_p3),to_integer(unsigned('0' & tmp_432_fu_1978_p1(31-1 downto 0)))));
    tmp_435_fu_1992_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_433_fu_1982_p1(31-1 downto 0)))));
    tmp_436_fu_1998_p2 <= (tmp_435_fu_1992_p2 and tmp_434_fu_1986_p2);
    tmp_437_fu_2004_p1 <= tmp_436_fu_1998_p2(5 - 1 downto 0);
    tmp_438_fu_1754_p1 <= grp_p_hls_fptosi_float_i_fu_1490_ap_return(29 - 1 downto 0);
    tmp_439_fu_2156_p1 <= tmp_15823_1_fu_2152_p2(5 - 1 downto 0);
    tmp_440_fu_2168_p2 <= "1" when (unsigned(Lo_assign_1_fu_2160_p3) > unsigned(Hi_assign_1_fu_2146_p2)) else "0";
    tmp_441_fu_2174_p3 <= (tmp_439_fu_2156_p1 & ap_const_lv3_0);
    tmp_442_fu_2182_p1 <= Hi_assign_1_fu_2146_p2(8 - 1 downto 0);
    
    tmp_443_fu_2298_p4_proc : process(sumBufIndex_V_read_reg_3494)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_443_fu_2298_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_3494;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_443_fu_2298_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_443_fu_2298_p4_i) := sumBufIndex_V_read_reg_3494(176-1-tmp_443_fu_2298_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_443_fu_2298_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_444_fu_2307_p2 <= std_logic_vector(unsigned(tmp_441_reg_3548) - unsigned(tmp_442_reg_3555));
    tmp_445_fu_2186_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_441_fu_2174_p3));
    tmp_446_fu_2311_p2 <= std_logic_vector(unsigned(tmp_442_reg_3555) - unsigned(tmp_441_reg_3548));
    tmp_447_fu_2315_p3 <= 
        tmp_444_fu_2307_p2 when (tmp_440_reg_3541(0) = '1') else 
        tmp_446_fu_2311_p2;
    tmp_448_fu_2322_p3 <= 
        tmp_443_fu_2298_p4 when (tmp_440_reg_3541(0) = '1') else 
        sumBufIndex_V_read_reg_3494;
    tmp_449_fu_2328_p3 <= 
        tmp_445_reg_3561 when (tmp_440_reg_3541(0) = '1') else 
        tmp_441_reg_3548;
    tmp_450_fu_2333_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_447_fu_2315_p3));
    tmp_451_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_449_fu_2328_p3),176));
    tmp_452_fu_2343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_450_fu_2333_p2),176));
    tmp_453_fu_2347_p2 <= std_logic_vector(shift_right(unsigned(tmp_448_fu_2322_p3),to_integer(unsigned('0' & tmp_451_fu_2339_p1(31-1 downto 0)))));
    tmp_454_fu_2353_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_452_fu_2343_p1(31-1 downto 0)))));
    tmp_455_fu_2359_p2 <= (tmp_454_fu_2353_p2 and tmp_453_fu_2347_p2);
    tmp_456_fu_2365_p1 <= tmp_455_fu_2359_p2(5 - 1 downto 0);
    tmp_457_fu_1758_p1 <= grp_p_hls_fptosi_float_i_fu_1502_ap_return(29 - 1 downto 0);
    tmp_458_fu_2240_p1 <= tmp_17615_1_fu_2236_p2(5 - 1 downto 0);
    tmp_459_fu_2252_p2 <= "1" when (unsigned(Lo_assign_5_1_fu_2244_p3) > unsigned(Hi_assign_5_1_fu_2230_p2)) else "0";
    tmp_460_fu_2258_p3 <= (tmp_458_fu_2240_p1 & ap_const_lv3_0);
    tmp_461_fu_2266_p1 <= Hi_assign_5_1_fu_2230_p2(8 - 1 downto 0);
    
    tmp_462_fu_2469_p4_proc : process(sumBufIndex_V_read_reg_3494)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_462_fu_2469_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_3494;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_462_fu_2469_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_462_fu_2469_p4_i) := sumBufIndex_V_read_reg_3494(176-1-tmp_462_fu_2469_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_462_fu_2469_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_463_fu_2478_p2 <= std_logic_vector(unsigned(tmp_460_reg_3793) - unsigned(tmp_461_reg_3800));
    tmp_464_fu_2270_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_460_fu_2258_p3));
    tmp_465_fu_2482_p2 <= std_logic_vector(unsigned(tmp_461_reg_3800) - unsigned(tmp_460_reg_3793));
    tmp_466_fu_2486_p3 <= 
        tmp_463_fu_2478_p2 when (tmp_459_reg_3786(0) = '1') else 
        tmp_465_fu_2482_p2;
    tmp_467_fu_2493_p3 <= 
        tmp_462_fu_2469_p4 when (tmp_459_reg_3786(0) = '1') else 
        sumBufIndex_V_read_reg_3494;
    tmp_468_fu_2499_p3 <= 
        tmp_464_reg_3806 when (tmp_459_reg_3786(0) = '1') else 
        tmp_460_reg_3793;
    tmp_469_fu_2504_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_466_fu_2486_p3));
    tmp_470_fu_2510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_468_fu_2499_p3),176));
    tmp_471_fu_2514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_469_fu_2504_p2),176));
    tmp_472_fu_2518_p2 <= std_logic_vector(shift_right(unsigned(tmp_467_fu_2493_p3),to_integer(unsigned('0' & tmp_470_fu_2510_p1(31-1 downto 0)))));
    tmp_473_fu_2524_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_471_fu_2514_p1(31-1 downto 0)))));
    tmp_474_fu_2530_p2 <= (tmp_473_fu_2524_p2 and tmp_472_fu_2518_p2);
    tmp_475_fu_2536_p1 <= tmp_474_fu_2530_p2(5 - 1 downto 0);
    tmp_476_fu_2276_p1 <= grp_p_hls_fptosi_float_i_fu_1490_ap_return(29 - 1 downto 0);
    tmp_477_fu_2688_p1 <= tmp_15823_2_fu_2684_p2(5 - 1 downto 0);
    tmp_478_fu_2700_p2 <= "1" when (unsigned(Lo_assign_2_fu_2692_p3) > unsigned(Hi_assign_2_fu_2678_p2)) else "0";
    tmp_479_fu_2706_p3 <= (tmp_477_fu_2688_p1 & ap_const_lv3_0);
    tmp_480_fu_2714_p1 <= Hi_assign_2_fu_2678_p2(8 - 1 downto 0);
    
    tmp_481_fu_2822_p4_proc : process(sumBufIndex_V_read_reg_3494)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_481_fu_2822_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_3494;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_481_fu_2822_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_481_fu_2822_p4_i) := sumBufIndex_V_read_reg_3494(176-1-tmp_481_fu_2822_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_481_fu_2822_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_482_fu_2831_p2 <= std_logic_vector(unsigned(tmp_479_reg_3855) - unsigned(tmp_480_reg_3862));
    tmp_483_fu_2718_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_479_fu_2706_p3));
    tmp_484_fu_2835_p2 <= std_logic_vector(unsigned(tmp_480_reg_3862) - unsigned(tmp_479_reg_3855));
    tmp_485_fu_2839_p3 <= 
        tmp_482_fu_2831_p2 when (tmp_478_reg_3848(0) = '1') else 
        tmp_484_fu_2835_p2;
    tmp_486_fu_2846_p3 <= 
        tmp_481_fu_2822_p4 when (tmp_478_reg_3848(0) = '1') else 
        sumBufIndex_V_read_reg_3494;
    tmp_487_fu_2852_p3 <= 
        tmp_483_reg_3868 when (tmp_478_reg_3848(0) = '1') else 
        tmp_479_reg_3855;
    tmp_488_fu_2857_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_485_fu_2839_p3));
    tmp_489_fu_2863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_487_fu_2852_p3),176));
    tmp_490_fu_2867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_488_fu_2857_p2),176));
    tmp_491_fu_2871_p2 <= std_logic_vector(shift_right(unsigned(tmp_486_fu_2846_p3),to_integer(unsigned('0' & tmp_489_fu_2863_p1(31-1 downto 0)))));
    tmp_492_fu_2877_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_490_fu_2867_p1(31-1 downto 0)))));
    tmp_493_fu_2883_p2 <= (tmp_492_fu_2877_p2 and tmp_491_fu_2871_p2);
    tmp_494_fu_2889_p1 <= tmp_493_fu_2883_p2(5 - 1 downto 0);
    tmp_495_fu_2280_p1 <= grp_p_hls_fptosi_float_i_fu_1502_ap_return(29 - 1 downto 0);
    tmp_496_fu_2772_p1 <= tmp_17615_2_fu_2768_p2(5 - 1 downto 0);
    tmp_497_fu_2784_p2 <= "1" when (unsigned(Lo_assign_5_2_fu_2776_p3) > unsigned(Hi_assign_5_2_fu_2762_p2)) else "0";
    tmp_498_fu_2790_p3 <= (tmp_496_fu_2772_p1 & ap_const_lv3_0);
    tmp_499_fu_2798_p1 <= Hi_assign_5_2_fu_2762_p2(8 - 1 downto 0);
    
    tmp_500_fu_2993_p4_proc : process(sumBufIndex_V_read_reg_3494)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_500_fu_2993_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_3494;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_500_fu_2993_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_500_fu_2993_p4_i) := sumBufIndex_V_read_reg_3494(176-1-tmp_500_fu_2993_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_500_fu_2993_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_501_fu_3002_p2 <= std_logic_vector(unsigned(tmp_498_reg_4100) - unsigned(tmp_499_reg_4107));
    tmp_502_fu_2802_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_498_fu_2790_p3));
    tmp_503_fu_3006_p2 <= std_logic_vector(unsigned(tmp_499_reg_4107) - unsigned(tmp_498_reg_4100));
    tmp_504_fu_3010_p3 <= 
        tmp_501_fu_3002_p2 when (tmp_497_reg_4093(0) = '1') else 
        tmp_503_fu_3006_p2;
    tmp_505_fu_3017_p3 <= 
        tmp_500_fu_2993_p4 when (tmp_497_reg_4093(0) = '1') else 
        sumBufIndex_V_read_reg_3494;
    tmp_506_fu_3023_p3 <= 
        tmp_502_reg_4113 when (tmp_497_reg_4093(0) = '1') else 
        tmp_498_reg_4100;
    tmp_507_fu_3028_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_504_fu_3010_p3));
    tmp_508_fu_3034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_506_fu_3023_p3),176));
    tmp_509_fu_3038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_507_fu_3028_p2),176));
    tmp_510_fu_3042_p2 <= std_logic_vector(shift_right(unsigned(tmp_505_fu_3017_p3),to_integer(unsigned('0' & tmp_508_fu_3034_p1(31-1 downto 0)))));
    tmp_511_fu_3048_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_509_fu_3038_p1(31-1 downto 0)))));
    tmp_512_fu_3054_p2 <= (tmp_511_fu_3048_p2 and tmp_510_fu_3042_p2);
    tmp_513_fu_3060_p1 <= tmp_512_fu_3054_p2(5 - 1 downto 0);
        tmp_81_fu_1572_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1536_p2),64));

    tmp_84_fu_1598_p2 <= std_logic_vector(unsigned(tmp_cast_fu_1568_p1) + unsigned(ap_const_lv11_1));
    tmp_86_fu_1613_p3 <= (tmp_s_fu_1608_p2 & ap_const_lv3_0);
    tmp_87_fu_1627_p2 <= std_logic_vector(unsigned(tmp_fu_1564_p1) + unsigned(tmp_400_reg_3178));
        tmp_91_fu_1668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1541_p2),64));

    tmp_94_fu_1694_p2 <= std_logic_vector(unsigned(tmp_419_reg_3184) + unsigned(tmp_179_cast_fu_1604_p1));
    tmp_96_fu_1699_p3 <= (tmp_94_fu_1694_p2 & ap_const_lv3_0);
    tmp_97_fu_1713_p2 <= std_logic_vector(unsigned(tmp_fu_1564_p1) + unsigned(tmp_419_reg_3184));
    tmp_99_fu_2284_p2 <= std_logic_vector(unsigned(tmp_219_reg_3521) - unsigned(tmp_220_reg_3526));
    tmp_cast_fu_1568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rOffset_cast_fu_1554_p1),11));
    tmp_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rOffset_cast_fu_1554_p1),29));
    tmp_s_fu_1608_p2 <= std_logic_vector(unsigned(tmp_400_reg_3178) + unsigned(tmp_179_cast_fu_1604_p1));
end behav;
