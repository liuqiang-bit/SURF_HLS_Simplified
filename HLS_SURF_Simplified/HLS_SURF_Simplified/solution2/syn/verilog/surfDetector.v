// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="surfDetector,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.326000,HLS_SYN_LAT=72211357,HLS_SYN_TPT=72211354,HLS_SYN_MEM=68,HLS_SYN_DSP=29,HLS_SYN_FF=10897,HLS_SYN_LUT=45060,HLS_VERSION=2018_3}" *)

module surfDetector (
        m_axi_keyPoints_V_AWVALID,
        m_axi_keyPoints_V_AWREADY,
        m_axi_keyPoints_V_AWADDR,
        m_axi_keyPoints_V_AWID,
        m_axi_keyPoints_V_AWLEN,
        m_axi_keyPoints_V_AWSIZE,
        m_axi_keyPoints_V_AWBURST,
        m_axi_keyPoints_V_AWLOCK,
        m_axi_keyPoints_V_AWCACHE,
        m_axi_keyPoints_V_AWPROT,
        m_axi_keyPoints_V_AWQOS,
        m_axi_keyPoints_V_AWREGION,
        m_axi_keyPoints_V_AWUSER,
        m_axi_keyPoints_V_WVALID,
        m_axi_keyPoints_V_WREADY,
        m_axi_keyPoints_V_WDATA,
        m_axi_keyPoints_V_WSTRB,
        m_axi_keyPoints_V_WLAST,
        m_axi_keyPoints_V_WID,
        m_axi_keyPoints_V_WUSER,
        m_axi_keyPoints_V_ARVALID,
        m_axi_keyPoints_V_ARREADY,
        m_axi_keyPoints_V_ARADDR,
        m_axi_keyPoints_V_ARID,
        m_axi_keyPoints_V_ARLEN,
        m_axi_keyPoints_V_ARSIZE,
        m_axi_keyPoints_V_ARBURST,
        m_axi_keyPoints_V_ARLOCK,
        m_axi_keyPoints_V_ARCACHE,
        m_axi_keyPoints_V_ARPROT,
        m_axi_keyPoints_V_ARQOS,
        m_axi_keyPoints_V_ARREGION,
        m_axi_keyPoints_V_ARUSER,
        m_axi_keyPoints_V_RVALID,
        m_axi_keyPoints_V_RREADY,
        m_axi_keyPoints_V_RDATA,
        m_axi_keyPoints_V_RLAST,
        m_axi_keyPoints_V_RID,
        m_axi_keyPoints_V_RUSER,
        m_axi_keyPoints_V_RRESP,
        m_axi_keyPoints_V_BVALID,
        m_axi_keyPoints_V_BREADY,
        m_axi_keyPoints_V_BRESP,
        m_axi_keyPoints_V_BID,
        m_axi_keyPoints_V_BUSER,
        ap_clk,
        ap_rst_n,
        m_axi_kpn_AWVALID,
        m_axi_kpn_AWREADY,
        m_axi_kpn_AWADDR,
        m_axi_kpn_AWID,
        m_axi_kpn_AWLEN,
        m_axi_kpn_AWSIZE,
        m_axi_kpn_AWBURST,
        m_axi_kpn_AWLOCK,
        m_axi_kpn_AWCACHE,
        m_axi_kpn_AWPROT,
        m_axi_kpn_AWQOS,
        m_axi_kpn_AWREGION,
        m_axi_kpn_AWUSER,
        m_axi_kpn_WVALID,
        m_axi_kpn_WREADY,
        m_axi_kpn_WDATA,
        m_axi_kpn_WSTRB,
        m_axi_kpn_WLAST,
        m_axi_kpn_WID,
        m_axi_kpn_WUSER,
        m_axi_kpn_ARVALID,
        m_axi_kpn_ARREADY,
        m_axi_kpn_ARADDR,
        m_axi_kpn_ARID,
        m_axi_kpn_ARLEN,
        m_axi_kpn_ARSIZE,
        m_axi_kpn_ARBURST,
        m_axi_kpn_ARLOCK,
        m_axi_kpn_ARCACHE,
        m_axi_kpn_ARPROT,
        m_axi_kpn_ARQOS,
        m_axi_kpn_ARREGION,
        m_axi_kpn_ARUSER,
        m_axi_kpn_RVALID,
        m_axi_kpn_RREADY,
        m_axi_kpn_RDATA,
        m_axi_kpn_RLAST,
        m_axi_kpn_RID,
        m_axi_kpn_RUSER,
        m_axi_kpn_RRESP,
        m_axi_kpn_BVALID,
        m_axi_kpn_BREADY,
        m_axi_kpn_BRESP,
        m_axi_kpn_BID,
        m_axi_kpn_BUSER,
        video_in_TDATA,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        video_in_TVALID,
        video_in_TREADY
);

parameter    C_M_AXI_KEYPOINTS_V_ID_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_ADDR_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_V_DATA_WIDTH = 32;
parameter    C_M_AXI_KEYPOINTS_V_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_WUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_RUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_BUSER_WIDTH = 1;
parameter    C_M_AXI_KEYPOINTS_V_TARGET_ADDR = 0;
parameter    C_M_AXI_KEYPOINTS_V_USER_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_V_PROT_VALUE = 0;
parameter    C_M_AXI_KEYPOINTS_V_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_ID_WIDTH = 1;
parameter    C_M_AXI_KPN_ADDR_WIDTH = 32;
parameter    C_M_AXI_KPN_DATA_WIDTH = 32;
parameter    C_M_AXI_KPN_AWUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_ARUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_WUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_RUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_BUSER_WIDTH = 1;
parameter    C_M_AXI_KPN_TARGET_ADDR = 0;
parameter    C_M_AXI_KPN_USER_VALUE = 0;
parameter    C_M_AXI_KPN_PROT_VALUE = 0;
parameter    C_M_AXI_KPN_CACHE_VALUE = 3;

parameter C_M_AXI_KEYPOINTS_V_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_KPN_WSTRB_WIDTH = (32 / 8);

output   m_axi_keyPoints_V_AWVALID;
input   m_axi_keyPoints_V_AWREADY;
output  [C_M_AXI_KEYPOINTS_V_ADDR_WIDTH - 1:0] m_axi_keyPoints_V_AWADDR;
output  [C_M_AXI_KEYPOINTS_V_ID_WIDTH - 1:0] m_axi_keyPoints_V_AWID;
output  [7:0] m_axi_keyPoints_V_AWLEN;
output  [2:0] m_axi_keyPoints_V_AWSIZE;
output  [1:0] m_axi_keyPoints_V_AWBURST;
output  [1:0] m_axi_keyPoints_V_AWLOCK;
output  [3:0] m_axi_keyPoints_V_AWCACHE;
output  [2:0] m_axi_keyPoints_V_AWPROT;
output  [3:0] m_axi_keyPoints_V_AWQOS;
output  [3:0] m_axi_keyPoints_V_AWREGION;
output  [C_M_AXI_KEYPOINTS_V_AWUSER_WIDTH - 1:0] m_axi_keyPoints_V_AWUSER;
output   m_axi_keyPoints_V_WVALID;
input   m_axi_keyPoints_V_WREADY;
output  [C_M_AXI_KEYPOINTS_V_DATA_WIDTH - 1:0] m_axi_keyPoints_V_WDATA;
output  [C_M_AXI_KEYPOINTS_V_WSTRB_WIDTH - 1:0] m_axi_keyPoints_V_WSTRB;
output   m_axi_keyPoints_V_WLAST;
output  [C_M_AXI_KEYPOINTS_V_ID_WIDTH - 1:0] m_axi_keyPoints_V_WID;
output  [C_M_AXI_KEYPOINTS_V_WUSER_WIDTH - 1:0] m_axi_keyPoints_V_WUSER;
output   m_axi_keyPoints_V_ARVALID;
input   m_axi_keyPoints_V_ARREADY;
output  [C_M_AXI_KEYPOINTS_V_ADDR_WIDTH - 1:0] m_axi_keyPoints_V_ARADDR;
output  [C_M_AXI_KEYPOINTS_V_ID_WIDTH - 1:0] m_axi_keyPoints_V_ARID;
output  [7:0] m_axi_keyPoints_V_ARLEN;
output  [2:0] m_axi_keyPoints_V_ARSIZE;
output  [1:0] m_axi_keyPoints_V_ARBURST;
output  [1:0] m_axi_keyPoints_V_ARLOCK;
output  [3:0] m_axi_keyPoints_V_ARCACHE;
output  [2:0] m_axi_keyPoints_V_ARPROT;
output  [3:0] m_axi_keyPoints_V_ARQOS;
output  [3:0] m_axi_keyPoints_V_ARREGION;
output  [C_M_AXI_KEYPOINTS_V_ARUSER_WIDTH - 1:0] m_axi_keyPoints_V_ARUSER;
input   m_axi_keyPoints_V_RVALID;
output   m_axi_keyPoints_V_RREADY;
input  [C_M_AXI_KEYPOINTS_V_DATA_WIDTH - 1:0] m_axi_keyPoints_V_RDATA;
input   m_axi_keyPoints_V_RLAST;
input  [C_M_AXI_KEYPOINTS_V_ID_WIDTH - 1:0] m_axi_keyPoints_V_RID;
input  [C_M_AXI_KEYPOINTS_V_RUSER_WIDTH - 1:0] m_axi_keyPoints_V_RUSER;
input  [1:0] m_axi_keyPoints_V_RRESP;
input   m_axi_keyPoints_V_BVALID;
output   m_axi_keyPoints_V_BREADY;
input  [1:0] m_axi_keyPoints_V_BRESP;
input  [C_M_AXI_KEYPOINTS_V_ID_WIDTH - 1:0] m_axi_keyPoints_V_BID;
input  [C_M_AXI_KEYPOINTS_V_BUSER_WIDTH - 1:0] m_axi_keyPoints_V_BUSER;
input   ap_clk;
input   ap_rst_n;
output   m_axi_kpn_AWVALID;
input   m_axi_kpn_AWREADY;
output  [C_M_AXI_KPN_ADDR_WIDTH - 1:0] m_axi_kpn_AWADDR;
output  [C_M_AXI_KPN_ID_WIDTH - 1:0] m_axi_kpn_AWID;
output  [7:0] m_axi_kpn_AWLEN;
output  [2:0] m_axi_kpn_AWSIZE;
output  [1:0] m_axi_kpn_AWBURST;
output  [1:0] m_axi_kpn_AWLOCK;
output  [3:0] m_axi_kpn_AWCACHE;
output  [2:0] m_axi_kpn_AWPROT;
output  [3:0] m_axi_kpn_AWQOS;
output  [3:0] m_axi_kpn_AWREGION;
output  [C_M_AXI_KPN_AWUSER_WIDTH - 1:0] m_axi_kpn_AWUSER;
output   m_axi_kpn_WVALID;
input   m_axi_kpn_WREADY;
output  [C_M_AXI_KPN_DATA_WIDTH - 1:0] m_axi_kpn_WDATA;
output  [C_M_AXI_KPN_WSTRB_WIDTH - 1:0] m_axi_kpn_WSTRB;
output   m_axi_kpn_WLAST;
output  [C_M_AXI_KPN_ID_WIDTH - 1:0] m_axi_kpn_WID;
output  [C_M_AXI_KPN_WUSER_WIDTH - 1:0] m_axi_kpn_WUSER;
output   m_axi_kpn_ARVALID;
input   m_axi_kpn_ARREADY;
output  [C_M_AXI_KPN_ADDR_WIDTH - 1:0] m_axi_kpn_ARADDR;
output  [C_M_AXI_KPN_ID_WIDTH - 1:0] m_axi_kpn_ARID;
output  [7:0] m_axi_kpn_ARLEN;
output  [2:0] m_axi_kpn_ARSIZE;
output  [1:0] m_axi_kpn_ARBURST;
output  [1:0] m_axi_kpn_ARLOCK;
output  [3:0] m_axi_kpn_ARCACHE;
output  [2:0] m_axi_kpn_ARPROT;
output  [3:0] m_axi_kpn_ARQOS;
output  [3:0] m_axi_kpn_ARREGION;
output  [C_M_AXI_KPN_ARUSER_WIDTH - 1:0] m_axi_kpn_ARUSER;
input   m_axi_kpn_RVALID;
output   m_axi_kpn_RREADY;
input  [C_M_AXI_KPN_DATA_WIDTH - 1:0] m_axi_kpn_RDATA;
input   m_axi_kpn_RLAST;
input  [C_M_AXI_KPN_ID_WIDTH - 1:0] m_axi_kpn_RID;
input  [C_M_AXI_KPN_RUSER_WIDTH - 1:0] m_axi_kpn_RUSER;
input  [1:0] m_axi_kpn_RRESP;
input   m_axi_kpn_BVALID;
output   m_axi_kpn_BREADY;
input  [1:0] m_axi_kpn_BRESP;
input  [C_M_AXI_KPN_ID_WIDTH - 1:0] m_axi_kpn_BID;
input  [C_M_AXI_KPN_BUSER_WIDTH - 1:0] m_axi_kpn_BUSER;
input  [23:0] video_in_TDATA;
input  [2:0] video_in_TKEEP;
input  [2:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
input   video_in_TVALID;
output   video_in_TREADY;

wire    keyPoints_V_AWREADY;
wire    keyPoints_V_WREADY;
wire    keyPoints_V_ARREADY;
wire    keyPoints_V_RVALID;
wire   [31:0] keyPoints_V_RDATA;
wire    keyPoints_V_RLAST;
wire   [0:0] keyPoints_V_RID;
wire   [0:0] keyPoints_V_RUSER;
wire   [1:0] keyPoints_V_RRESP;
wire    keyPoints_V_BVALID;
wire   [1:0] keyPoints_V_BRESP;
wire   [0:0] keyPoints_V_BID;
wire   [0:0] keyPoints_V_BUSER;
 reg    ap_rst_n_inv;
wire    kpn_AWREADY;
wire    kpn_WREADY;
wire    kpn_ARREADY;
wire    kpn_RVALID;
wire   [31:0] kpn_RDATA;
wire    kpn_RLAST;
wire   [0:0] kpn_RID;
wire   [0:0] kpn_RUSER;
wire   [1:0] kpn_RRESP;
wire    kpn_BVALID;
wire   [1:0] kpn_BRESP;
wire   [0:0] kpn_BID;
wire   [0:0] kpn_BUSER;
wire    integralImg_U0_ap_start;
wire    integralImg_U0_ap_done;
wire    integralImg_U0_ap_continue;
wire    integralImg_U0_ap_idle;
wire    integralImg_U0_ap_ready;
wire    integralImg_U0_start_out;
wire    integralImg_U0_start_write;
wire    integralImg_U0_video_in_TREADY;
wire   [31:0] integralImg_U0_sum_V_din;
wire    integralImg_U0_sum_V_write;
wire    HessianDetector_U0_m_axi_keyPoints_V_AWVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_AWADDR;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_AWID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_AWLEN;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_AWSIZE;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_AWBURST;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_AWLOCK;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWCACHE;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_AWPROT;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWQOS;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_AWREGION;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_AWUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_WVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_WDATA;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_WSTRB;
wire    HessianDetector_U0_m_axi_keyPoints_V_WLAST;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_WID;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_WUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_ARVALID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_ARADDR;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_ARID;
wire   [31:0] HessianDetector_U0_m_axi_keyPoints_V_ARLEN;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_ARSIZE;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_ARBURST;
wire   [1:0] HessianDetector_U0_m_axi_keyPoints_V_ARLOCK;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARCACHE;
wire   [2:0] HessianDetector_U0_m_axi_keyPoints_V_ARPROT;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARQOS;
wire   [3:0] HessianDetector_U0_m_axi_keyPoints_V_ARREGION;
wire   [0:0] HessianDetector_U0_m_axi_keyPoints_V_ARUSER;
wire    HessianDetector_U0_m_axi_keyPoints_V_RREADY;
wire    HessianDetector_U0_m_axi_keyPoints_V_BREADY;
wire    HessianDetector_U0_m_axi_pointNumber_AWVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_AWADDR;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_AWID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_AWLEN;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_AWSIZE;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_AWBURST;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_AWLOCK;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWCACHE;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_AWPROT;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWQOS;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_AWREGION;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_AWUSER;
wire    HessianDetector_U0_m_axi_pointNumber_WVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_WDATA;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_WSTRB;
wire    HessianDetector_U0_m_axi_pointNumber_WLAST;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_WID;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_WUSER;
wire    HessianDetector_U0_m_axi_pointNumber_ARVALID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_ARADDR;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_ARID;
wire   [31:0] HessianDetector_U0_m_axi_pointNumber_ARLEN;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_ARSIZE;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_ARBURST;
wire   [1:0] HessianDetector_U0_m_axi_pointNumber_ARLOCK;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARCACHE;
wire   [2:0] HessianDetector_U0_m_axi_pointNumber_ARPROT;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARQOS;
wire   [3:0] HessianDetector_U0_m_axi_pointNumber_ARREGION;
wire   [0:0] HessianDetector_U0_m_axi_pointNumber_ARUSER;
wire    HessianDetector_U0_m_axi_pointNumber_RREADY;
wire    HessianDetector_U0_m_axi_pointNumber_BREADY;
wire    HessianDetector_U0_sum_V_read;
wire    HessianDetector_U0_ap_start;
wire    HessianDetector_U0_ap_done;
wire    HessianDetector_U0_ap_ready;
wire    HessianDetector_U0_ap_idle;
wire    HessianDetector_U0_ap_continue;
wire    ap_sync_continue;
wire    sum_V_full_n;
wire   [31:0] sum_V_dout;
wire    sum_V_empty_n;
wire   [0:0] start_for_HessianDetector_U0_din;
wire    start_for_HessianDetector_U0_full_n;
wire   [0:0] start_for_HessianDetector_U0_dout;
wire    start_for_HessianDetector_U0_empty_n;
wire    HessianDetector_U0_start_full_n;
wire    HessianDetector_U0_start_write;

surfDetector_keyPoints_V_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KEYPOINTS_V_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KEYPOINTS_V_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KEYPOINTS_V_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KEYPOINTS_V_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KEYPOINTS_V_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KEYPOINTS_V_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KEYPOINTS_V_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KEYPOINTS_V_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_KEYPOINTS_V_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_KEYPOINTS_V_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KEYPOINTS_V_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KEYPOINTS_V_CACHE_VALUE ))
surfDetector_keyPoints_V_m_axi_U(
    .AWVALID(m_axi_keyPoints_V_AWVALID),
    .AWREADY(m_axi_keyPoints_V_AWREADY),
    .AWADDR(m_axi_keyPoints_V_AWADDR),
    .AWID(m_axi_keyPoints_V_AWID),
    .AWLEN(m_axi_keyPoints_V_AWLEN),
    .AWSIZE(m_axi_keyPoints_V_AWSIZE),
    .AWBURST(m_axi_keyPoints_V_AWBURST),
    .AWLOCK(m_axi_keyPoints_V_AWLOCK),
    .AWCACHE(m_axi_keyPoints_V_AWCACHE),
    .AWPROT(m_axi_keyPoints_V_AWPROT),
    .AWQOS(m_axi_keyPoints_V_AWQOS),
    .AWREGION(m_axi_keyPoints_V_AWREGION),
    .AWUSER(m_axi_keyPoints_V_AWUSER),
    .WVALID(m_axi_keyPoints_V_WVALID),
    .WREADY(m_axi_keyPoints_V_WREADY),
    .WDATA(m_axi_keyPoints_V_WDATA),
    .WSTRB(m_axi_keyPoints_V_WSTRB),
    .WLAST(m_axi_keyPoints_V_WLAST),
    .WID(m_axi_keyPoints_V_WID),
    .WUSER(m_axi_keyPoints_V_WUSER),
    .ARVALID(m_axi_keyPoints_V_ARVALID),
    .ARREADY(m_axi_keyPoints_V_ARREADY),
    .ARADDR(m_axi_keyPoints_V_ARADDR),
    .ARID(m_axi_keyPoints_V_ARID),
    .ARLEN(m_axi_keyPoints_V_ARLEN),
    .ARSIZE(m_axi_keyPoints_V_ARSIZE),
    .ARBURST(m_axi_keyPoints_V_ARBURST),
    .ARLOCK(m_axi_keyPoints_V_ARLOCK),
    .ARCACHE(m_axi_keyPoints_V_ARCACHE),
    .ARPROT(m_axi_keyPoints_V_ARPROT),
    .ARQOS(m_axi_keyPoints_V_ARQOS),
    .ARREGION(m_axi_keyPoints_V_ARREGION),
    .ARUSER(m_axi_keyPoints_V_ARUSER),
    .RVALID(m_axi_keyPoints_V_RVALID),
    .RREADY(m_axi_keyPoints_V_RREADY),
    .RDATA(m_axi_keyPoints_V_RDATA),
    .RLAST(m_axi_keyPoints_V_RLAST),
    .RID(m_axi_keyPoints_V_RID),
    .RUSER(m_axi_keyPoints_V_RUSER),
    .RRESP(m_axi_keyPoints_V_RRESP),
    .BVALID(m_axi_keyPoints_V_BVALID),
    .BREADY(m_axi_keyPoints_V_BREADY),
    .BRESP(m_axi_keyPoints_V_BRESP),
    .BID(m_axi_keyPoints_V_BID),
    .BUSER(m_axi_keyPoints_V_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(keyPoints_V_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(keyPoints_V_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(keyPoints_V_RDATA),
    .I_RID(keyPoints_V_RID),
    .I_RUSER(keyPoints_V_RUSER),
    .I_RRESP(keyPoints_V_RRESP),
    .I_RLAST(keyPoints_V_RLAST),
    .I_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID),
    .I_AWREADY(keyPoints_V_AWREADY),
    .I_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR),
    .I_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID),
    .I_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN),
    .I_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE),
    .I_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK),
    .I_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE),
    .I_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS),
    .I_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT),
    .I_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER),
    .I_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST),
    .I_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION),
    .I_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID),
    .I_WREADY(keyPoints_V_WREADY),
    .I_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA),
    .I_WID(HessianDetector_U0_m_axi_keyPoints_V_WID),
    .I_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER),
    .I_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST),
    .I_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB),
    .I_BVALID(keyPoints_V_BVALID),
    .I_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY),
    .I_BRESP(keyPoints_V_BRESP),
    .I_BID(keyPoints_V_BID),
    .I_BUSER(keyPoints_V_BUSER)
);

surfDetector_kpn_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_KPN_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_KPN_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_KPN_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_KPN_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_KPN_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_KPN_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_KPN_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_KPN_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_KPN_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_KPN_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_KPN_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_KPN_CACHE_VALUE ))
surfDetector_kpn_m_axi_U(
    .AWVALID(m_axi_kpn_AWVALID),
    .AWREADY(m_axi_kpn_AWREADY),
    .AWADDR(m_axi_kpn_AWADDR),
    .AWID(m_axi_kpn_AWID),
    .AWLEN(m_axi_kpn_AWLEN),
    .AWSIZE(m_axi_kpn_AWSIZE),
    .AWBURST(m_axi_kpn_AWBURST),
    .AWLOCK(m_axi_kpn_AWLOCK),
    .AWCACHE(m_axi_kpn_AWCACHE),
    .AWPROT(m_axi_kpn_AWPROT),
    .AWQOS(m_axi_kpn_AWQOS),
    .AWREGION(m_axi_kpn_AWREGION),
    .AWUSER(m_axi_kpn_AWUSER),
    .WVALID(m_axi_kpn_WVALID),
    .WREADY(m_axi_kpn_WREADY),
    .WDATA(m_axi_kpn_WDATA),
    .WSTRB(m_axi_kpn_WSTRB),
    .WLAST(m_axi_kpn_WLAST),
    .WID(m_axi_kpn_WID),
    .WUSER(m_axi_kpn_WUSER),
    .ARVALID(m_axi_kpn_ARVALID),
    .ARREADY(m_axi_kpn_ARREADY),
    .ARADDR(m_axi_kpn_ARADDR),
    .ARID(m_axi_kpn_ARID),
    .ARLEN(m_axi_kpn_ARLEN),
    .ARSIZE(m_axi_kpn_ARSIZE),
    .ARBURST(m_axi_kpn_ARBURST),
    .ARLOCK(m_axi_kpn_ARLOCK),
    .ARCACHE(m_axi_kpn_ARCACHE),
    .ARPROT(m_axi_kpn_ARPROT),
    .ARQOS(m_axi_kpn_ARQOS),
    .ARREGION(m_axi_kpn_ARREGION),
    .ARUSER(m_axi_kpn_ARUSER),
    .RVALID(m_axi_kpn_RVALID),
    .RREADY(m_axi_kpn_RREADY),
    .RDATA(m_axi_kpn_RDATA),
    .RLAST(m_axi_kpn_RLAST),
    .RID(m_axi_kpn_RID),
    .RUSER(m_axi_kpn_RUSER),
    .RRESP(m_axi_kpn_RRESP),
    .BVALID(m_axi_kpn_BVALID),
    .BREADY(m_axi_kpn_BREADY),
    .BRESP(m_axi_kpn_BRESP),
    .BID(m_axi_kpn_BID),
    .BUSER(m_axi_kpn_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(kpn_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(kpn_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(kpn_RDATA),
    .I_RID(kpn_RID),
    .I_RUSER(kpn_RUSER),
    .I_RRESP(kpn_RRESP),
    .I_RLAST(kpn_RLAST),
    .I_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID),
    .I_AWREADY(kpn_AWREADY),
    .I_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR),
    .I_AWID(HessianDetector_U0_m_axi_pointNumber_AWID),
    .I_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN),
    .I_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE),
    .I_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK),
    .I_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE),
    .I_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS),
    .I_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT),
    .I_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER),
    .I_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST),
    .I_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION),
    .I_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID),
    .I_WREADY(kpn_WREADY),
    .I_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA),
    .I_WID(HessianDetector_U0_m_axi_pointNumber_WID),
    .I_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER),
    .I_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST),
    .I_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB),
    .I_BVALID(kpn_BVALID),
    .I_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY),
    .I_BRESP(kpn_BRESP),
    .I_BID(kpn_BID),
    .I_BUSER(kpn_BUSER)
);

integralImg integralImg_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(integralImg_U0_ap_start),
    .start_full_n(start_for_HessianDetector_U0_full_n),
    .ap_done(integralImg_U0_ap_done),
    .ap_continue(integralImg_U0_ap_continue),
    .ap_idle(integralImg_U0_ap_idle),
    .ap_ready(integralImg_U0_ap_ready),
    .start_out(integralImg_U0_start_out),
    .start_write(integralImg_U0_start_write),
    .video_in_TDATA(video_in_TDATA),
    .video_in_TVALID(video_in_TVALID),
    .video_in_TREADY(integralImg_U0_video_in_TREADY),
    .video_in_TKEEP(video_in_TKEEP),
    .video_in_TSTRB(video_in_TSTRB),
    .video_in_TUSER(video_in_TUSER),
    .video_in_TLAST(video_in_TLAST),
    .video_in_TID(video_in_TID),
    .video_in_TDEST(video_in_TDEST),
    .sum_V_din(integralImg_U0_sum_V_din),
    .sum_V_full_n(sum_V_full_n),
    .sum_V_write(integralImg_U0_sum_V_write)
);

HessianDetector HessianDetector_U0(
    .m_axi_keyPoints_V_AWVALID(HessianDetector_U0_m_axi_keyPoints_V_AWVALID),
    .m_axi_keyPoints_V_AWREADY(keyPoints_V_AWREADY),
    .m_axi_keyPoints_V_AWADDR(HessianDetector_U0_m_axi_keyPoints_V_AWADDR),
    .m_axi_keyPoints_V_AWID(HessianDetector_U0_m_axi_keyPoints_V_AWID),
    .m_axi_keyPoints_V_AWLEN(HessianDetector_U0_m_axi_keyPoints_V_AWLEN),
    .m_axi_keyPoints_V_AWSIZE(HessianDetector_U0_m_axi_keyPoints_V_AWSIZE),
    .m_axi_keyPoints_V_AWBURST(HessianDetector_U0_m_axi_keyPoints_V_AWBURST),
    .m_axi_keyPoints_V_AWLOCK(HessianDetector_U0_m_axi_keyPoints_V_AWLOCK),
    .m_axi_keyPoints_V_AWCACHE(HessianDetector_U0_m_axi_keyPoints_V_AWCACHE),
    .m_axi_keyPoints_V_AWPROT(HessianDetector_U0_m_axi_keyPoints_V_AWPROT),
    .m_axi_keyPoints_V_AWQOS(HessianDetector_U0_m_axi_keyPoints_V_AWQOS),
    .m_axi_keyPoints_V_AWREGION(HessianDetector_U0_m_axi_keyPoints_V_AWREGION),
    .m_axi_keyPoints_V_AWUSER(HessianDetector_U0_m_axi_keyPoints_V_AWUSER),
    .m_axi_keyPoints_V_WVALID(HessianDetector_U0_m_axi_keyPoints_V_WVALID),
    .m_axi_keyPoints_V_WREADY(keyPoints_V_WREADY),
    .m_axi_keyPoints_V_WDATA(HessianDetector_U0_m_axi_keyPoints_V_WDATA),
    .m_axi_keyPoints_V_WSTRB(HessianDetector_U0_m_axi_keyPoints_V_WSTRB),
    .m_axi_keyPoints_V_WLAST(HessianDetector_U0_m_axi_keyPoints_V_WLAST),
    .m_axi_keyPoints_V_WID(HessianDetector_U0_m_axi_keyPoints_V_WID),
    .m_axi_keyPoints_V_WUSER(HessianDetector_U0_m_axi_keyPoints_V_WUSER),
    .m_axi_keyPoints_V_ARVALID(HessianDetector_U0_m_axi_keyPoints_V_ARVALID),
    .m_axi_keyPoints_V_ARREADY(1'b0),
    .m_axi_keyPoints_V_ARADDR(HessianDetector_U0_m_axi_keyPoints_V_ARADDR),
    .m_axi_keyPoints_V_ARID(HessianDetector_U0_m_axi_keyPoints_V_ARID),
    .m_axi_keyPoints_V_ARLEN(HessianDetector_U0_m_axi_keyPoints_V_ARLEN),
    .m_axi_keyPoints_V_ARSIZE(HessianDetector_U0_m_axi_keyPoints_V_ARSIZE),
    .m_axi_keyPoints_V_ARBURST(HessianDetector_U0_m_axi_keyPoints_V_ARBURST),
    .m_axi_keyPoints_V_ARLOCK(HessianDetector_U0_m_axi_keyPoints_V_ARLOCK),
    .m_axi_keyPoints_V_ARCACHE(HessianDetector_U0_m_axi_keyPoints_V_ARCACHE),
    .m_axi_keyPoints_V_ARPROT(HessianDetector_U0_m_axi_keyPoints_V_ARPROT),
    .m_axi_keyPoints_V_ARQOS(HessianDetector_U0_m_axi_keyPoints_V_ARQOS),
    .m_axi_keyPoints_V_ARREGION(HessianDetector_U0_m_axi_keyPoints_V_ARREGION),
    .m_axi_keyPoints_V_ARUSER(HessianDetector_U0_m_axi_keyPoints_V_ARUSER),
    .m_axi_keyPoints_V_RVALID(1'b0),
    .m_axi_keyPoints_V_RREADY(HessianDetector_U0_m_axi_keyPoints_V_RREADY),
    .m_axi_keyPoints_V_RDATA(32'd0),
    .m_axi_keyPoints_V_RLAST(1'b0),
    .m_axi_keyPoints_V_RID(1'd0),
    .m_axi_keyPoints_V_RUSER(1'd0),
    .m_axi_keyPoints_V_RRESP(2'd0),
    .m_axi_keyPoints_V_BVALID(keyPoints_V_BVALID),
    .m_axi_keyPoints_V_BREADY(HessianDetector_U0_m_axi_keyPoints_V_BREADY),
    .m_axi_keyPoints_V_BRESP(keyPoints_V_BRESP),
    .m_axi_keyPoints_V_BID(keyPoints_V_BID),
    .m_axi_keyPoints_V_BUSER(keyPoints_V_BUSER),
    .m_axi_pointNumber_AWVALID(HessianDetector_U0_m_axi_pointNumber_AWVALID),
    .m_axi_pointNumber_AWREADY(kpn_AWREADY),
    .m_axi_pointNumber_AWADDR(HessianDetector_U0_m_axi_pointNumber_AWADDR),
    .m_axi_pointNumber_AWID(HessianDetector_U0_m_axi_pointNumber_AWID),
    .m_axi_pointNumber_AWLEN(HessianDetector_U0_m_axi_pointNumber_AWLEN),
    .m_axi_pointNumber_AWSIZE(HessianDetector_U0_m_axi_pointNumber_AWSIZE),
    .m_axi_pointNumber_AWBURST(HessianDetector_U0_m_axi_pointNumber_AWBURST),
    .m_axi_pointNumber_AWLOCK(HessianDetector_U0_m_axi_pointNumber_AWLOCK),
    .m_axi_pointNumber_AWCACHE(HessianDetector_U0_m_axi_pointNumber_AWCACHE),
    .m_axi_pointNumber_AWPROT(HessianDetector_U0_m_axi_pointNumber_AWPROT),
    .m_axi_pointNumber_AWQOS(HessianDetector_U0_m_axi_pointNumber_AWQOS),
    .m_axi_pointNumber_AWREGION(HessianDetector_U0_m_axi_pointNumber_AWREGION),
    .m_axi_pointNumber_AWUSER(HessianDetector_U0_m_axi_pointNumber_AWUSER),
    .m_axi_pointNumber_WVALID(HessianDetector_U0_m_axi_pointNumber_WVALID),
    .m_axi_pointNumber_WREADY(kpn_WREADY),
    .m_axi_pointNumber_WDATA(HessianDetector_U0_m_axi_pointNumber_WDATA),
    .m_axi_pointNumber_WSTRB(HessianDetector_U0_m_axi_pointNumber_WSTRB),
    .m_axi_pointNumber_WLAST(HessianDetector_U0_m_axi_pointNumber_WLAST),
    .m_axi_pointNumber_WID(HessianDetector_U0_m_axi_pointNumber_WID),
    .m_axi_pointNumber_WUSER(HessianDetector_U0_m_axi_pointNumber_WUSER),
    .m_axi_pointNumber_ARVALID(HessianDetector_U0_m_axi_pointNumber_ARVALID),
    .m_axi_pointNumber_ARREADY(1'b0),
    .m_axi_pointNumber_ARADDR(HessianDetector_U0_m_axi_pointNumber_ARADDR),
    .m_axi_pointNumber_ARID(HessianDetector_U0_m_axi_pointNumber_ARID),
    .m_axi_pointNumber_ARLEN(HessianDetector_U0_m_axi_pointNumber_ARLEN),
    .m_axi_pointNumber_ARSIZE(HessianDetector_U0_m_axi_pointNumber_ARSIZE),
    .m_axi_pointNumber_ARBURST(HessianDetector_U0_m_axi_pointNumber_ARBURST),
    .m_axi_pointNumber_ARLOCK(HessianDetector_U0_m_axi_pointNumber_ARLOCK),
    .m_axi_pointNumber_ARCACHE(HessianDetector_U0_m_axi_pointNumber_ARCACHE),
    .m_axi_pointNumber_ARPROT(HessianDetector_U0_m_axi_pointNumber_ARPROT),
    .m_axi_pointNumber_ARQOS(HessianDetector_U0_m_axi_pointNumber_ARQOS),
    .m_axi_pointNumber_ARREGION(HessianDetector_U0_m_axi_pointNumber_ARREGION),
    .m_axi_pointNumber_ARUSER(HessianDetector_U0_m_axi_pointNumber_ARUSER),
    .m_axi_pointNumber_RVALID(1'b0),
    .m_axi_pointNumber_RREADY(HessianDetector_U0_m_axi_pointNumber_RREADY),
    .m_axi_pointNumber_RDATA(32'd0),
    .m_axi_pointNumber_RLAST(1'b0),
    .m_axi_pointNumber_RID(1'd0),
    .m_axi_pointNumber_RUSER(1'd0),
    .m_axi_pointNumber_RRESP(2'd0),
    .m_axi_pointNumber_BVALID(kpn_BVALID),
    .m_axi_pointNumber_BREADY(HessianDetector_U0_m_axi_pointNumber_BREADY),
    .m_axi_pointNumber_BRESP(kpn_BRESP),
    .m_axi_pointNumber_BID(kpn_BID),
    .m_axi_pointNumber_BUSER(kpn_BUSER),
    .sum_V_dout(sum_V_dout),
    .sum_V_empty_n(sum_V_empty_n),
    .sum_V_read(HessianDetector_U0_sum_V_read),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(HessianDetector_U0_ap_start),
    .ap_done(HessianDetector_U0_ap_done),
    .ap_ready(HessianDetector_U0_ap_ready),
    .ap_idle(HessianDetector_U0_ap_idle),
    .ap_continue(HessianDetector_U0_ap_continue)
);

fifo_w32_d2_A_x sum_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(integralImg_U0_sum_V_din),
    .if_full_n(sum_V_full_n),
    .if_write(integralImg_U0_sum_V_write),
    .if_dout(sum_V_dout),
    .if_empty_n(sum_V_empty_n),
    .if_read(HessianDetector_U0_sum_V_read)
);

start_for_HessianJfO start_for_HessianJfO_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_HessianDetector_U0_din),
    .if_full_n(start_for_HessianDetector_U0_full_n),
    .if_write(integralImg_U0_start_write),
    .if_dout(start_for_HessianDetector_U0_dout),
    .if_empty_n(start_for_HessianDetector_U0_empty_n),
    .if_read(HessianDetector_U0_ap_ready)
);

assign HessianDetector_U0_ap_continue = 1'b1;

assign HessianDetector_U0_ap_start = start_for_HessianDetector_U0_empty_n;

assign HessianDetector_U0_start_full_n = 1'b1;

assign HessianDetector_U0_start_write = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign integralImg_U0_ap_continue = 1'b1;

assign integralImg_U0_ap_start = 1'b1;

assign start_for_HessianDetector_U0_din = 1'b1;

assign video_in_TREADY = integralImg_U0_video_in_TREADY;

endmodule //surfDetector
