-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity calcHaarPattern_xy is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    sumBuf_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_0_ce0 : OUT STD_LOGIC;
    sumBuf_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_0_ce1 : OUT STD_LOGIC;
    sumBuf_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_1_ce0 : OUT STD_LOGIC;
    sumBuf_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_1_ce1 : OUT STD_LOGIC;
    sumBuf_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_2_ce0 : OUT STD_LOGIC;
    sumBuf_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_2_ce1 : OUT STD_LOGIC;
    sumBuf_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_3_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_3_ce0 : OUT STD_LOGIC;
    sumBuf_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_3_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_3_ce1 : OUT STD_LOGIC;
    sumBuf_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_4_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_4_ce0 : OUT STD_LOGIC;
    sumBuf_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_4_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_4_ce1 : OUT STD_LOGIC;
    sumBuf_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_5_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_5_ce0 : OUT STD_LOGIC;
    sumBuf_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_5_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_5_ce1 : OUT STD_LOGIC;
    sumBuf_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_6_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_6_ce0 : OUT STD_LOGIC;
    sumBuf_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_6_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_6_ce1 : OUT STD_LOGIC;
    sumBuf_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_7_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_7_ce0 : OUT STD_LOGIC;
    sumBuf_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_7_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_7_ce1 : OUT STD_LOGIC;
    sumBuf_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_8_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_8_ce0 : OUT STD_LOGIC;
    sumBuf_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_8_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_8_ce1 : OUT STD_LOGIC;
    sumBuf_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_9_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_9_ce0 : OUT STD_LOGIC;
    sumBuf_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_9_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_9_ce1 : OUT STD_LOGIC;
    sumBuf_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_10_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_10_ce0 : OUT STD_LOGIC;
    sumBuf_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_10_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_10_ce1 : OUT STD_LOGIC;
    sumBuf_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_11_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_11_ce0 : OUT STD_LOGIC;
    sumBuf_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_11_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_11_ce1 : OUT STD_LOGIC;
    sumBuf_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_12_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_12_ce0 : OUT STD_LOGIC;
    sumBuf_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_12_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_12_ce1 : OUT STD_LOGIC;
    sumBuf_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_13_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_13_ce0 : OUT STD_LOGIC;
    sumBuf_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_13_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_13_ce1 : OUT STD_LOGIC;
    sumBuf_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_14_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_14_ce0 : OUT STD_LOGIC;
    sumBuf_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_14_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_14_ce1 : OUT STD_LOGIC;
    sumBuf_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_15_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_15_ce0 : OUT STD_LOGIC;
    sumBuf_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_15_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_15_ce1 : OUT STD_LOGIC;
    sumBuf_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_16_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_16_ce0 : OUT STD_LOGIC;
    sumBuf_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_16_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_16_ce1 : OUT STD_LOGIC;
    sumBuf_16_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_17_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_17_ce0 : OUT STD_LOGIC;
    sumBuf_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_17_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_17_ce1 : OUT STD_LOGIC;
    sumBuf_17_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_18_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_18_ce0 : OUT STD_LOGIC;
    sumBuf_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_18_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_18_ce1 : OUT STD_LOGIC;
    sumBuf_18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_19_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_19_ce0 : OUT STD_LOGIC;
    sumBuf_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_19_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_19_ce1 : OUT STD_LOGIC;
    sumBuf_19_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_20_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_20_ce0 : OUT STD_LOGIC;
    sumBuf_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_20_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_20_ce1 : OUT STD_LOGIC;
    sumBuf_20_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_21_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_21_ce0 : OUT STD_LOGIC;
    sumBuf_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBuf_21_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    sumBuf_21_ce1 : OUT STD_LOGIC;
    sumBuf_21_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_0_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_1_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_2_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_3_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_3_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_3_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_3_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    box_3_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    sumBufIndex_V : IN STD_LOGIC_VECTOR (175 downto 0);
    rOffset : IN STD_LOGIC_VECTOR (4 downto 0);
    cOffset : IN STD_LOGIC_VECTOR (10 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of calcHaarPattern_xy is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_AF : STD_LOGIC_VECTOR (7 downto 0) := "10101111";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";
    constant ap_const_lv176_lc_1 : STD_LOGIC_VECTOR (175 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_p_hls_fptosi_float_i_fu_1876_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1924 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal grp_p_hls_fptosi_float_i_fu_1888_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_248_fu_1942_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_248_reg_4106 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_267_fu_1946_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_267_reg_4112 : STD_LOGIC_VECTOR (28 downto 0);
    signal cOffset_cast_fu_1954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cOffset_cast_reg_4118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1960_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_reg_4124 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_49_cast_fu_2000_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_49_cast_reg_4134 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_250_fu_2040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_250_reg_4144 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_251_fu_2046_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_251_reg_4151 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_fu_2054_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_252_reg_4158 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_255_fu_2058_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_255_reg_4164 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_269_fu_2126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_269_reg_4389 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_270_fu_2132_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_270_reg_4396 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_271_fu_2140_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_271_reg_4403 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_274_fu_2144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_274_reg_4409 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_286_fu_2150_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_286_reg_4414 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_305_fu_2154_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_305_reg_4420 : STD_LOGIC_VECTOR (28 downto 0);
    signal sumBufIndex_V_read_reg_4426 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_203_fu_2231_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_203_reg_4442 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_204_fu_2281_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_204_reg_4447 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_fu_2404_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_reg_4452 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_206_fu_2454_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_206_reg_4457 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_288_fu_2564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_288_reg_4462 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_289_fu_2570_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_289_reg_4469 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_290_fu_2578_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_290_reg_4476 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_293_fu_2582_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_293_reg_4482 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_307_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_307_reg_4707 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_308_fu_2654_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_308_reg_4714 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_309_fu_2662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_309_reg_4721 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_312_fu_2666_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_312_reg_4727 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_324_fu_2672_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_324_reg_4732 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_343_fu_2676_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_343_reg_4738 : STD_LOGIC_VECTOR (28 downto 0);
    signal box_3_4_read_1_reg_4744 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_3_4_read_1_reg_4744_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_2_4_read_1_reg_4749 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_2_4_read_1_reg_4749_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_4_read_1_reg_4754 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_1_4_read_1_reg_4754_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal box_0_4_read_1_reg_4759 : STD_LOGIC_VECTOR (31 downto 0);
    signal box_0_4_read_1_reg_4759_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_2689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_4764 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_207_fu_2765_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_207_reg_4769 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_208_fu_2815_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_208_reg_4774 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_209_fu_2936_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_209_reg_4779 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_fu_2986_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_reg_4784 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_326_fu_3096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_326_reg_4789 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_327_fu_3102_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_327_reg_4796 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_328_fu_3110_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_328_reg_4803 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_331_fu_3114_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_331_reg_4809 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_345_fu_3180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_345_reg_5034 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_346_fu_3186_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_346_reg_5041 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_347_fu_3194_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_347_reg_5048 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_350_fu_3198_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_350_reg_5054 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_362_fu_3204_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_362_reg_5059 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_381_fu_3208_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_381_reg_5065 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_148_1_fu_3221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_1_reg_5071 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_211_fu_3297_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_211_reg_5076 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_fu_3347_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_reg_5081 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_fu_3468_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_reg_5086 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_fu_3518_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_reg_5091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_364_fu_3628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_364_reg_5096 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_365_fu_3634_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_365_reg_5103 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_366_fu_3642_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_366_reg_5110 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_369_fu_3646_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_369_reg_5116 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_383_fu_3712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_383_reg_5341 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_384_fu_3718_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_384_reg_5348 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_385_fu_3726_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_385_reg_5355 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_388_fu_3730_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_388_reg_5361 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_148_2_fu_3745_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_2_reg_5366 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_fu_3821_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_reg_5371 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_fu_3871_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_reg_5376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_217_fu_3992_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_217_reg_5381 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_fu_4042_p24 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_reg_5386 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_3_fu_4101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_3_reg_5391 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_5396 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_1_reg_5401 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_2_reg_5406 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_5411 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_149_3_reg_5416 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_1_reg_5421 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_1_reg_5421_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_2_reg_5426 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_2_reg_5426_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_2_reg_5426_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_3_reg_5431 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_3_reg_5431_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_3_reg_5431_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_3_reg_5431_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_reg_5436 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_1_reg_5441 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_2_reg_5446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_port_reg_box_0_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_1_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_2_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_3_0_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_3_1_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_3_2_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_3_3_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_box_3_4_read : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_port_reg_sumBufIndex_V : STD_LOGIC_VECTOR (175 downto 0);
    signal ap_port_reg_rOffset : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_port_reg_cOffset : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1876_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1876_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1882_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1882_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1882_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1888_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1888_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1894_ap_ready : STD_LOGIC;
    signal grp_p_hls_fptosi_float_i_fu_1894_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_p_hls_fptosi_float_i_fu_1894_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_51_fu_1968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_2064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_1_fu_2504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_1_fu_2588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_2_fu_3036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_2_fu_3120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_3_fu_3568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_3_fu_3652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1912_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1917_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1917_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1921_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1932_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1937_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal rOffset_cast_fu_1950_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_1964_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_49_fu_1994_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_53_fu_2004_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_55_fu_2009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_2023_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_fu_2032_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_fu_2017_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_249_fu_2028_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_2090_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_65_fu_2095_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_2109_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_2_fu_2118_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_fu_2103_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_268_fu_2114_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_254_fu_2168_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_256_fu_2172_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_253_fu_2158_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_257_fu_2176_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_259_fu_2190_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_260_fu_2195_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_258_fu_2183_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_261_fu_2201_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_262_fu_2205_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_263_fu_2209_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_264_fu_2215_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_265_fu_2221_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_266_fu_2227_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_273_fu_2341_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_275_fu_2345_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_272_fu_2331_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_276_fu_2349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_278_fu_2363_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_279_fu_2368_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_277_fu_2356_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_280_fu_2374_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_281_fu_2378_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_282_fu_2382_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_283_fu_2388_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_284_fu_2394_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_285_fu_2400_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11425_1_fu_2530_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_115_1_fu_2534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11723_1_fu_2548_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_s_fu_2556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_s_fu_2542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_287_fu_2552_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13217_1_fu_2614_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_133_1_fu_2618_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13515_1_fu_2632_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_2_1_fu_2640_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_1_fu_2626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_306_fu_2636_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_fu_2680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_2684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_292_fu_2703_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_294_fu_2707_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_291_fu_2694_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_295_fu_2711_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_297_fu_2724_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_298_fu_2729_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_296_fu_2718_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_299_fu_2735_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_300_fu_2739_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_301_fu_2743_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_302_fu_2749_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_303_fu_2755_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_304_fu_2761_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_311_fu_2874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_313_fu_2878_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_310_fu_2865_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_314_fu_2882_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_316_fu_2895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_317_fu_2900_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_315_fu_2889_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_318_fu_2906_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_319_fu_2910_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_320_fu_2914_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_321_fu_2920_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_322_fu_2926_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_323_fu_2932_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11425_2_fu_3062_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_115_2_fu_3066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11723_2_fu_3080_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_4_fu_3088_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_4_fu_3074_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_325_fu_3084_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13217_2_fu_3146_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_133_2_fu_3150_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13515_2_fu_3164_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_2_2_fu_3172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_2_fu_3158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_344_fu_3168_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_146_1_fu_3212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_1_fu_3216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_330_fu_3235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_332_fu_3239_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_329_fu_3226_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_333_fu_3243_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_335_fu_3256_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_336_fu_3261_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_334_fu_3250_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_337_fu_3267_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_338_fu_3271_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_339_fu_3275_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_340_fu_3281_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_341_fu_3287_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_342_fu_3293_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_349_fu_3406_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_351_fu_3410_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_348_fu_3397_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_352_fu_3414_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_354_fu_3427_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_355_fu_3432_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_353_fu_3421_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_356_fu_3438_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_357_fu_3442_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_358_fu_3446_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_359_fu_3452_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_360_fu_3458_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_361_fu_3464_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11425_3_fu_3594_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_115_3_fu_3598_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11723_3_fu_3612_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_5_fu_3620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_5_fu_3606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_363_fu_3616_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13217_3_fu_3678_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_133_3_fu_3682_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13515_3_fu_3696_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal Lo_assign_2_3_fu_3704_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_3_fu_3690_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_382_fu_3700_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_146_2_fu_3736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_2_fu_3740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_368_fu_3759_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_370_fu_3763_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_367_fu_3750_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_371_fu_3767_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_373_fu_3780_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_374_fu_3785_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_372_fu_3774_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_375_fu_3791_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_376_fu_3795_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_377_fu_3799_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_378_fu_3805_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_379_fu_3811_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_380_fu_3817_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_387_fu_3930_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_389_fu_3934_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_386_fu_3921_p4 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_390_fu_3938_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_392_fu_3951_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_393_fu_3956_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_391_fu_3945_p3 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_394_fu_3962_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_395_fu_3966_p1 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_396_fu_3970_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_397_fu_3976_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_398_fu_3982_p2 : STD_LOGIC_VECTOR (175 downto 0);
    signal tmp_399_fu_3988_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_146_3_fu_4092_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_147_3_fu_4096_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1912_ce : STD_LOGIC;
    signal grp_fu_1917_ce : STD_LOGIC;
    signal grp_fu_1921_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;

    component p_hls_fptosi_float_i IS
    port (
        ap_ready : OUT STD_LOGIC;
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_faddbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_fmulcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_sitodEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component surfDetector_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_p_hls_fptosi_float_i_fu_1876 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1876_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1876_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1876_ap_return);

    grp_p_hls_fptosi_float_i_fu_1882 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1882_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1882_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1882_ap_return);

    grp_p_hls_fptosi_float_i_fu_1888 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1888_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1888_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1888_ap_return);

    grp_p_hls_fptosi_float_i_fu_1894 : component p_hls_fptosi_float_i
    port map (
        ap_ready => grp_p_hls_fptosi_float_i_fu_1894_ap_ready,
        x => grp_p_hls_fptosi_float_i_fu_1894_x,
        ap_return => grp_p_hls_fptosi_float_i_fu_1894_ap_return);

    surfDetector_faddbkb_U70 : component surfDetector_faddbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1912_p0,
        din1 => grp_fu_1912_p1,
        ce => grp_fu_1912_ce,
        dout => grp_fu_1912_p2);

    surfDetector_fmulcud_U71 : component surfDetector_fmulcud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1917_p0,
        din1 => grp_fu_1917_p1,
        ce => grp_fu_1917_ce,
        dout => grp_fu_1917_p2);

    surfDetector_sitodEe_U72 : component surfDetector_sitodEe
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1921_p0,
        ce => grp_fu_1921_ce,
        dout => grp_fu_1921_p1);

    surfDetector_mux_eOg_U73 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_266_fu_2227_p1,
        dout => tmp_203_fu_2231_p24);

    surfDetector_mux_eOg_U74 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_266_fu_2227_p1,
        dout => tmp_204_fu_2281_p24);

    surfDetector_mux_eOg_U75 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_285_fu_2400_p1,
        dout => tmp_205_fu_2404_p24);

    surfDetector_mux_eOg_U76 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_285_fu_2400_p1,
        dout => tmp_206_fu_2454_p24);

    surfDetector_mux_eOg_U77 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_304_fu_2761_p1,
        dout => tmp_207_fu_2765_p24);

    surfDetector_mux_eOg_U78 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_304_fu_2761_p1,
        dout => tmp_208_fu_2815_p24);

    surfDetector_mux_eOg_U79 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_323_fu_2932_p1,
        dout => tmp_209_fu_2936_p24);

    surfDetector_mux_eOg_U80 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_323_fu_2932_p1,
        dout => tmp_210_fu_2986_p24);

    surfDetector_mux_eOg_U81 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_342_fu_3293_p1,
        dout => tmp_211_fu_3297_p24);

    surfDetector_mux_eOg_U82 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_342_fu_3293_p1,
        dout => tmp_212_fu_3347_p24);

    surfDetector_mux_eOg_U83 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_361_fu_3464_p1,
        dout => tmp_213_fu_3468_p24);

    surfDetector_mux_eOg_U84 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_361_fu_3464_p1,
        dout => tmp_214_fu_3518_p24);

    surfDetector_mux_eOg_U85 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_380_fu_3817_p1,
        dout => tmp_215_fu_3821_p24);

    surfDetector_mux_eOg_U86 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_380_fu_3817_p1,
        dout => tmp_216_fu_3871_p24);

    surfDetector_mux_eOg_U87 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q0,
        din1 => sumBuf_1_q0,
        din2 => sumBuf_2_q0,
        din3 => sumBuf_3_q0,
        din4 => sumBuf_4_q0,
        din5 => sumBuf_5_q0,
        din6 => sumBuf_6_q0,
        din7 => sumBuf_7_q0,
        din8 => sumBuf_8_q0,
        din9 => sumBuf_9_q0,
        din10 => sumBuf_10_q0,
        din11 => sumBuf_11_q0,
        din12 => sumBuf_12_q0,
        din13 => sumBuf_13_q0,
        din14 => sumBuf_14_q0,
        din15 => sumBuf_15_q0,
        din16 => sumBuf_16_q0,
        din17 => sumBuf_17_q0,
        din18 => sumBuf_18_q0,
        din19 => sumBuf_19_q0,
        din20 => sumBuf_20_q0,
        din21 => sumBuf_21_q0,
        din22 => tmp_399_fu_3988_p1,
        dout => tmp_217_fu_3992_p24);

    surfDetector_mux_eOg_U88 : component surfDetector_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => sumBuf_0_q1,
        din1 => sumBuf_1_q1,
        din2 => sumBuf_2_q1,
        din3 => sumBuf_3_q1,
        din4 => sumBuf_4_q1,
        din5 => sumBuf_5_q1,
        din6 => sumBuf_6_q1,
        din7 => sumBuf_7_q1,
        din8 => sumBuf_8_q1,
        din9 => sumBuf_9_q1,
        din10 => sumBuf_10_q1,
        din11 => sumBuf_11_q1,
        din12 => sumBuf_12_q1,
        din13 => sumBuf_13_q1,
        din14 => sumBuf_14_q1,
        din15 => sumBuf_15_q1,
        din16 => sumBuf_16_q1,
        din17 => sumBuf_17_q1,
        din18 => sumBuf_18_q1,
        din19 => sumBuf_19_q1,
        din20 => sumBuf_20_q1,
        din21 => sumBuf_21_q1,
        din22 => tmp_399_fu_3988_p1,
        dout => tmp_218_fu_4042_p24);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_box_0_4_read <= box_0_4_read;
                ap_port_reg_box_1_0_read <= box_1_0_read;
                ap_port_reg_box_1_1_read <= box_1_1_read;
                ap_port_reg_box_1_2_read <= box_1_2_read;
                ap_port_reg_box_1_3_read <= box_1_3_read;
                ap_port_reg_box_1_4_read <= box_1_4_read;
                ap_port_reg_box_2_0_read <= box_2_0_read;
                ap_port_reg_box_2_1_read <= box_2_1_read;
                ap_port_reg_box_2_2_read <= box_2_2_read;
                ap_port_reg_box_2_3_read <= box_2_3_read;
                ap_port_reg_box_2_4_read <= box_2_4_read;
                ap_port_reg_box_3_0_read <= box_3_0_read;
                ap_port_reg_box_3_1_read <= box_3_1_read;
                ap_port_reg_box_3_2_read <= box_3_2_read;
                ap_port_reg_box_3_3_read <= box_3_3_read;
                ap_port_reg_box_3_4_read <= box_3_4_read;
                ap_port_reg_cOffset <= cOffset;
                ap_port_reg_rOffset <= rOffset;
                ap_port_reg_sumBufIndex_V <= sumBufIndex_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                box_0_4_read_1_reg_4759 <= ap_port_reg_box_0_4_read;
                box_0_4_read_1_reg_4759_pp0_iter1_reg <= box_0_4_read_1_reg_4759;
                box_1_4_read_1_reg_4754 <= ap_port_reg_box_1_4_read;
                box_1_4_read_1_reg_4754_pp0_iter1_reg <= box_1_4_read_1_reg_4754;
                box_2_4_read_1_reg_4749 <= ap_port_reg_box_2_4_read;
                box_2_4_read_1_reg_4749_pp0_iter1_reg <= box_2_4_read_1_reg_4749;
                box_3_4_read_1_reg_4744 <= ap_port_reg_box_3_4_read;
                box_3_4_read_1_reg_4744_pp0_iter1_reg <= box_3_4_read_1_reg_4744;
                tmp_150_1_reg_5421_pp0_iter3_reg <= tmp_150_1_reg_5421;
                tmp_207_reg_4769 <= tmp_207_fu_2765_p24;
                tmp_208_reg_4774 <= tmp_208_fu_2815_p24;
                tmp_209_reg_4779 <= tmp_209_fu_2936_p24;
                tmp_210_reg_4784 <= tmp_210_fu_2986_p24;
                tmp_326_reg_4789 <= tmp_326_fu_3096_p2;
                    tmp_327_reg_4796(7 downto 3) <= tmp_327_fu_3102_p3(7 downto 3);
                    tmp_328_reg_4803(7 downto 3) <= tmp_328_fu_3110_p1(7 downto 3);
                    tmp_331_reg_4809(7 downto 3) <= tmp_331_fu_3114_p2(7 downto 3);
                tmp_345_reg_5034 <= tmp_345_fu_3180_p2;
                    tmp_346_reg_5041(7 downto 3) <= tmp_346_fu_3186_p3(7 downto 3);
                    tmp_347_reg_5048(7 downto 3) <= tmp_347_fu_3194_p1(7 downto 3);
                    tmp_350_reg_5054(7 downto 3) <= tmp_350_fu_3198_p2(7 downto 3);
                tmp_362_reg_5059 <= tmp_362_fu_3204_p1;
                tmp_381_reg_5065 <= tmp_381_fu_3208_p1;
                tmp_70_reg_4764 <= tmp_70_fu_2689_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    cOffset_cast_reg_4118(10 downto 0) <= cOffset_cast_fu_1954_p1(10 downto 0);
                tmp_148_2_reg_5366 <= tmp_148_2_fu_3745_p2;
                tmp_150_3_reg_5431_pp0_iter4_reg <= tmp_150_3_reg_5431;
                tmp_150_3_reg_5431_pp0_iter5_reg <= tmp_150_3_reg_5431_pp0_iter4_reg;
                tmp_150_3_reg_5431_pp0_iter6_reg <= tmp_150_3_reg_5431_pp0_iter5_reg;
                tmp_215_reg_5371 <= tmp_215_fu_3821_p24;
                tmp_216_reg_5376 <= tmp_216_fu_3871_p24;
                tmp_217_reg_5381 <= tmp_217_fu_3992_p24;
                tmp_218_reg_5386 <= tmp_218_fu_4042_p24;
                tmp_250_reg_4144 <= tmp_250_fu_2040_p2;
                    tmp_251_reg_4151(7 downto 3) <= tmp_251_fu_2046_p3(7 downto 3);
                    tmp_252_reg_4158(7 downto 3) <= tmp_252_fu_2054_p1(7 downto 3);
                    tmp_255_reg_4164(7 downto 3) <= tmp_255_fu_2058_p2(7 downto 3);
                tmp_269_reg_4389 <= tmp_269_fu_2126_p2;
                    tmp_270_reg_4396(7 downto 3) <= tmp_270_fu_2132_p3(7 downto 3);
                    tmp_271_reg_4403(7 downto 3) <= tmp_271_fu_2140_p1(7 downto 3);
                    tmp_274_reg_4409(7 downto 3) <= tmp_274_fu_2144_p2(7 downto 3);
                tmp_286_reg_4414 <= tmp_286_fu_2150_p1;
                tmp_305_reg_4420 <= tmp_305_fu_2154_p1;
                    tmp_49_cast_reg_4134(10 downto 0) <= tmp_49_cast_fu_2000_p1(10 downto 0);
                    tmp_reg_4124(9 downto 0) <= tmp_fu_1960_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                d_1_1_reg_5441 <= grp_fu_1912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_1_2_reg_5446 <= grp_fu_1912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d_1_reg_5436 <= grp_fu_1912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_1924 <= grp_p_hls_fptosi_float_i_fu_1876_ap_return;
                reg_1928 <= grp_p_hls_fptosi_float_i_fu_1888_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sumBufIndex_V_read_reg_4426 <= ap_port_reg_sumBufIndex_V;
                tmp_148_3_reg_5391 <= tmp_148_3_fu_4101_p2;
                tmp_203_reg_4442 <= tmp_203_fu_2231_p24;
                tmp_204_reg_4447 <= tmp_204_fu_2281_p24;
                tmp_205_reg_4452 <= tmp_205_fu_2404_p24;
                tmp_206_reg_4457 <= tmp_206_fu_2454_p24;
                tmp_288_reg_4462 <= tmp_288_fu_2564_p2;
                    tmp_289_reg_4469(7 downto 3) <= tmp_289_fu_2570_p3(7 downto 3);
                    tmp_290_reg_4476(7 downto 3) <= tmp_290_fu_2578_p1(7 downto 3);
                    tmp_293_reg_4482(7 downto 3) <= tmp_293_fu_2582_p2(7 downto 3);
                tmp_307_reg_4707 <= tmp_307_fu_2648_p2;
                    tmp_308_reg_4714(7 downto 3) <= tmp_308_fu_2654_p3(7 downto 3);
                    tmp_309_reg_4721(7 downto 3) <= tmp_309_fu_2662_p1(7 downto 3);
                    tmp_312_reg_4727(7 downto 3) <= tmp_312_fu_2666_p2(7 downto 3);
                tmp_324_reg_4732 <= tmp_324_fu_2672_p1;
                tmp_343_reg_4738 <= tmp_343_fu_2676_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_148_1_reg_5071 <= tmp_148_1_fu_3221_p2;
                tmp_150_2_reg_5426_pp0_iter4_reg <= tmp_150_2_reg_5426;
                tmp_150_2_reg_5426_pp0_iter5_reg <= tmp_150_2_reg_5426_pp0_iter4_reg;
                tmp_211_reg_5076 <= tmp_211_fu_3297_p24;
                tmp_212_reg_5081 <= tmp_212_fu_3347_p24;
                tmp_213_reg_5086 <= tmp_213_fu_3468_p24;
                tmp_214_reg_5091 <= tmp_214_fu_3518_p24;
                tmp_248_reg_4106 <= tmp_248_fu_1942_p1;
                tmp_267_reg_4112 <= tmp_267_fu_1946_p1;
                tmp_364_reg_5096 <= tmp_364_fu_3628_p2;
                    tmp_365_reg_5103(7 downto 3) <= tmp_365_fu_3634_p3(7 downto 3);
                    tmp_366_reg_5110(7 downto 3) <= tmp_366_fu_3642_p1(7 downto 3);
                    tmp_369_reg_5116(7 downto 3) <= tmp_369_fu_3646_p2(7 downto 3);
                tmp_383_reg_5341 <= tmp_383_fu_3712_p2;
                    tmp_384_reg_5348(7 downto 3) <= tmp_384_fu_3718_p3(7 downto 3);
                    tmp_385_reg_5355(7 downto 3) <= tmp_385_fu_3726_p1(7 downto 3);
                    tmp_388_reg_5361(7 downto 3) <= tmp_388_fu_3730_p2(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_149_1_reg_5401 <= grp_fu_1921_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_149_2_reg_5406 <= grp_fu_1921_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_149_3_reg_5416 <= grp_fu_1921_p1;
                tmp_72_reg_5411 <= grp_fu_1917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                tmp_150_1_reg_5421 <= grp_fu_1917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_150_2_reg_5426 <= grp_fu_1917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_150_3_reg_5431 <= grp_fu_1917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                tmp_71_reg_5396 <= grp_fu_1921_p1;
            end if;
        end if;
    end process;
    cOffset_cast_reg_4118(31 downto 11) <= "000000000000000000000";
    tmp_reg_4124(28 downto 10) <= "0000000000000000000";
    tmp_49_cast_reg_4134(28 downto 11) <= "000000000000000000";
    tmp_251_reg_4151(2 downto 0) <= "000";
    tmp_252_reg_4158(2 downto 0) <= "111";
    tmp_255_reg_4164(2 downto 0) <= "111";
    tmp_270_reg_4396(2 downto 0) <= "000";
    tmp_271_reg_4403(2 downto 0) <= "111";
    tmp_274_reg_4409(2 downto 0) <= "111";
    tmp_289_reg_4469(2 downto 0) <= "000";
    tmp_290_reg_4476(2 downto 0) <= "111";
    tmp_293_reg_4482(2 downto 0) <= "111";
    tmp_308_reg_4714(2 downto 0) <= "000";
    tmp_309_reg_4721(2 downto 0) <= "111";
    tmp_312_reg_4727(2 downto 0) <= "111";
    tmp_327_reg_4796(2 downto 0) <= "000";
    tmp_328_reg_4803(2 downto 0) <= "111";
    tmp_331_reg_4809(2 downto 0) <= "111";
    tmp_346_reg_5041(2 downto 0) <= "000";
    tmp_347_reg_5048(2 downto 0) <= "111";
    tmp_350_reg_5054(2 downto 0) <= "111";
    tmp_365_reg_5103(2 downto 0) <= "000";
    tmp_366_reg_5110(2 downto 0) <= "111";
    tmp_369_reg_5116(2 downto 0) <= "111";
    tmp_384_reg_5348(2 downto 0) <= "000";
    tmp_385_reg_5355(2 downto 0) <= "111";
    tmp_388_reg_5361(2 downto 0) <= "111";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_reset_idle_pp0, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    Hi_assign_2_1_fu_2626_p2 <= std_logic_vector(unsigned(tmp_133_1_fu_2618_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_2_2_fu_3158_p2 <= std_logic_vector(unsigned(tmp_133_2_fu_3150_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_2_3_fu_3690_p2 <= std_logic_vector(unsigned(tmp_133_3_fu_3682_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_2_fu_2103_p2 <= std_logic_vector(unsigned(tmp_65_fu_2095_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_4_fu_3074_p2 <= std_logic_vector(unsigned(tmp_115_2_fu_3066_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_5_fu_3606_p2 <= std_logic_vector(unsigned(tmp_115_3_fu_3598_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_fu_2017_p2 <= std_logic_vector(unsigned(tmp_55_fu_2009_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Hi_assign_s_fu_2542_p2 <= std_logic_vector(unsigned(tmp_115_1_fu_2534_p3) + unsigned(ap_const_lv32_FFFFFFFF));
    Lo_assign_2_1_fu_2640_p3 <= (tmp_13515_1_fu_2632_p2 & ap_const_lv3_0);
    Lo_assign_2_2_fu_3172_p3 <= (tmp_13515_2_fu_3164_p2 & ap_const_lv3_0);
    Lo_assign_2_3_fu_3704_p3 <= (tmp_13515_3_fu_3696_p2 & ap_const_lv3_0);
    Lo_assign_2_fu_2118_p3 <= (tmp_66_fu_2109_p2 & ap_const_lv3_0);
    Lo_assign_4_fu_3088_p3 <= (tmp_11723_2_fu_3080_p2 & ap_const_lv3_0);
    Lo_assign_5_fu_3620_p3 <= (tmp_11723_3_fu_3612_p2 & ap_const_lv3_0);
    Lo_assign_fu_2032_p3 <= (tmp_56_fu_2023_p2 & ap_const_lv3_0);
    Lo_assign_s_fu_2556_p3 <= (tmp_11723_1_fu_2548_p2 & ap_const_lv3_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter7, ap_ce, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to6)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to6 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= grp_fu_1912_p2;
    cOffset_cast_fu_1954_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_port_reg_cOffset),32));

    grp_fu_1912_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1912_ce <= ap_const_logic_1;
        else 
            grp_fu_1912_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1912_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_72_reg_5411, d_1_reg_5436, d_1_1_reg_5441, d_1_2_reg_5446, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1912_p0 <= d_1_2_reg_5446;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1912_p0 <= d_1_1_reg_5441;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1912_p0 <= d_1_reg_5436;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_1912_p0 <= tmp_72_reg_5411;
        else 
            grp_fu_1912_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1912_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_150_1_reg_5421_pp0_iter3_reg, tmp_150_2_reg_5426_pp0_iter5_reg, tmp_150_3_reg_5431_pp0_iter6_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1912_p1 <= tmp_150_3_reg_5431_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1912_p1 <= tmp_150_2_reg_5426_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1912_p1 <= tmp_150_1_reg_5421_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_1912_p1 <= ap_const_lv32_0;
        else 
            grp_fu_1912_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1917_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1917_ce <= ap_const_logic_1;
        else 
            grp_fu_1917_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1917_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_71_reg_5396, tmp_149_1_reg_5401, tmp_149_2_reg_5406, tmp_149_3_reg_5416, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_1917_p0 <= tmp_149_3_reg_5416;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1917_p0 <= tmp_149_2_reg_5406;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1917_p0 <= tmp_149_1_reg_5401;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1917_p0 <= tmp_71_reg_5396;
            else 
                grp_fu_1917_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1917_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1917_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, box_3_4_read_1_reg_4744_pp0_iter1_reg, box_2_4_read_1_reg_4749_pp0_iter1_reg, box_1_4_read_1_reg_4754_pp0_iter1_reg, box_0_4_read_1_reg_4759_pp0_iter1_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_1917_p1 <= box_3_4_read_1_reg_4744_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1917_p1 <= box_2_4_read_1_reg_4749_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1917_p1 <= box_1_4_read_1_reg_4754_pp0_iter1_reg;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1917_p1 <= box_0_4_read_1_reg_4759_pp0_iter1_reg;
            else 
                grp_fu_1917_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1917_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1921_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_1921_ce <= ap_const_logic_1;
        else 
            grp_fu_1921_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1921_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, tmp_70_reg_4764, tmp_148_1_reg_5071, tmp_148_2_reg_5366, tmp_148_3_reg_5391, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_1921_p0 <= tmp_148_3_reg_5391;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1921_p0 <= tmp_148_2_reg_5366;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_1921_p0 <= tmp_148_1_reg_5071;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_fu_1921_p0 <= tmp_70_reg_4764;
            else 
                grp_fu_1921_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1921_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1932_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, cOffset_cast_fu_1954_p1, cOffset_cast_reg_4118, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1932_p0 <= cOffset_cast_reg_4118;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1932_p0 <= cOffset_cast_fu_1954_p1;
        else 
            grp_fu_1932_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1932_p2 <= std_logic_vector(unsigned(grp_fu_1932_p0) + unsigned(reg_1924));

    grp_fu_1937_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, cOffset_cast_fu_1954_p1, cOffset_cast_reg_4118, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1937_p0 <= cOffset_cast_reg_4118;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_1937_p0 <= cOffset_cast_fu_1954_p1;
        else 
            grp_fu_1937_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1937_p2 <= std_logic_vector(unsigned(grp_fu_1937_p0) + unsigned(reg_1928));

    grp_p_hls_fptosi_float_i_fu_1876_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, box_0_2_read, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_port_reg_box_1_2_read, ap_port_reg_box_2_2_read, ap_port_reg_box_3_2_read, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_p_hls_fptosi_float_i_fu_1876_x <= ap_port_reg_box_3_2_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1876_x <= ap_port_reg_box_2_2_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1876_x <= ap_port_reg_box_1_2_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1876_x <= box_0_2_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1876_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1876_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1882_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, box_0_3_read, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_port_reg_box_1_3_read, ap_port_reg_box_2_3_read, ap_port_reg_box_3_3_read, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_p_hls_fptosi_float_i_fu_1882_x <= ap_port_reg_box_3_3_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1882_x <= ap_port_reg_box_2_3_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1882_x <= ap_port_reg_box_1_3_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1882_x <= box_0_3_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1882_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1882_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1888_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, box_0_0_read, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_port_reg_box_1_0_read, ap_port_reg_box_2_0_read, ap_port_reg_box_3_0_read, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_p_hls_fptosi_float_i_fu_1888_x <= ap_port_reg_box_3_0_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1888_x <= ap_port_reg_box_2_0_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1888_x <= ap_port_reg_box_1_0_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1888_x <= box_0_0_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1888_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1888_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_p_hls_fptosi_float_i_fu_1894_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage3, box_0_1_read, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_port_reg_box_1_1_read, ap_port_reg_box_2_1_read, ap_port_reg_box_3_1_read, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_p_hls_fptosi_float_i_fu_1894_x <= ap_port_reg_box_3_1_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_p_hls_fptosi_float_i_fu_1894_x <= ap_port_reg_box_2_1_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_p_hls_fptosi_float_i_fu_1894_x <= ap_port_reg_box_1_1_read;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                grp_p_hls_fptosi_float_i_fu_1894_x <= box_0_1_read;
            else 
                grp_p_hls_fptosi_float_i_fu_1894_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_p_hls_fptosi_float_i_fu_1894_x <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

        rOffset_cast_fu_1950_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_port_reg_rOffset),10));


    sumBuf_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_0_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_0_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_0_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_0_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_0_ce0 <= ap_const_logic_1;
        else 
            sumBuf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_0_ce1 <= ap_const_logic_1;
        else 
            sumBuf_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_10_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_10_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_10_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_10_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_10_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_10_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_10_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_10_ce0 <= ap_const_logic_1;
        else 
            sumBuf_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_10_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_10_ce1 <= ap_const_logic_1;
        else 
            sumBuf_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_11_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_11_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_11_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_11_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_11_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_11_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_11_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_11_ce0 <= ap_const_logic_1;
        else 
            sumBuf_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_11_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_11_ce1 <= ap_const_logic_1;
        else 
            sumBuf_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_12_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_12_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_12_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_12_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_12_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_12_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_12_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_12_ce0 <= ap_const_logic_1;
        else 
            sumBuf_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_12_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_12_ce1 <= ap_const_logic_1;
        else 
            sumBuf_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_13_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_13_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_13_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_13_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_13_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_13_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_13_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_13_ce0 <= ap_const_logic_1;
        else 
            sumBuf_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_13_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_13_ce1 <= ap_const_logic_1;
        else 
            sumBuf_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_14_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_14_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_14_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_14_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_14_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_14_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_14_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_14_ce0 <= ap_const_logic_1;
        else 
            sumBuf_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_14_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_14_ce1 <= ap_const_logic_1;
        else 
            sumBuf_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_15_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_15_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_15_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_15_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_15_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_15_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_15_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_15_ce0 <= ap_const_logic_1;
        else 
            sumBuf_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_15_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_15_ce1 <= ap_const_logic_1;
        else 
            sumBuf_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_16_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_16_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_16_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_16_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_16_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_16_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_16_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_16_ce0 <= ap_const_logic_1;
        else 
            sumBuf_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_16_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_16_ce1 <= ap_const_logic_1;
        else 
            sumBuf_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_17_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_17_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_17_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_17_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_17_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_17_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_17_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_17_ce0 <= ap_const_logic_1;
        else 
            sumBuf_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_17_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_17_ce1 <= ap_const_logic_1;
        else 
            sumBuf_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_18_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_18_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_18_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_18_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_18_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_18_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_18_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_18_ce0 <= ap_const_logic_1;
        else 
            sumBuf_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_18_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_18_ce1 <= ap_const_logic_1;
        else 
            sumBuf_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_19_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_19_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_19_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_19_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_19_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_19_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_19_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_19_ce0 <= ap_const_logic_1;
        else 
            sumBuf_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_19_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_19_ce1 <= ap_const_logic_1;
        else 
            sumBuf_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_1_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_1_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_1_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_1_ce0 <= ap_const_logic_1;
        else 
            sumBuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_1_ce1 <= ap_const_logic_1;
        else 
            sumBuf_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_20_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_20_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_20_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_20_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_20_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_20_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_20_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_20_ce0 <= ap_const_logic_1;
        else 
            sumBuf_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_20_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_20_ce1 <= ap_const_logic_1;
        else 
            sumBuf_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_21_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_21_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_21_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_21_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_21_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_21_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_21_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_21_ce0 <= ap_const_logic_1;
        else 
            sumBuf_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_21_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_21_ce1 <= ap_const_logic_1;
        else 
            sumBuf_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_2_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_2_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_2_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_2_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_2_ce0 <= ap_const_logic_1;
        else 
            sumBuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_2_ce1 <= ap_const_logic_1;
        else 
            sumBuf_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_3_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_3_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_3_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_3_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_3_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_3_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_3_ce0 <= ap_const_logic_1;
        else 
            sumBuf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_3_ce1 <= ap_const_logic_1;
        else 
            sumBuf_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_4_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_4_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_4_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_4_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_4_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_4_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_4_ce0 <= ap_const_logic_1;
        else 
            sumBuf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_4_ce1 <= ap_const_logic_1;
        else 
            sumBuf_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_5_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_5_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_5_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_5_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_5_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_5_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_5_ce0 <= ap_const_logic_1;
        else 
            sumBuf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_5_ce1 <= ap_const_logic_1;
        else 
            sumBuf_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_6_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_6_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_6_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_6_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_6_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_6_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_6_ce0 <= ap_const_logic_1;
        else 
            sumBuf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_6_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_6_ce1 <= ap_const_logic_1;
        else 
            sumBuf_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_7_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_7_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_7_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_7_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_7_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_7_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_7_ce0 <= ap_const_logic_1;
        else 
            sumBuf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_7_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_7_ce1 <= ap_const_logic_1;
        else 
            sumBuf_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_8_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_8_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_8_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_8_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_8_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_8_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_8_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_8_ce0 <= ap_const_logic_1;
        else 
            sumBuf_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_8_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_8_ce1 <= ap_const_logic_1;
        else 
            sumBuf_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_9_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_51_fu_1968_p1, tmp_112_1_fu_2504_p1, tmp_112_2_fu_3036_p1, tmp_112_3_fu_3568_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_9_address0 <= tmp_112_3_fu_3568_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address0 <= tmp_112_2_fu_3036_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address0 <= tmp_112_1_fu_2504_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address0 <= tmp_51_fu_1968_p1(10 - 1 downto 0);
        else 
            sumBuf_9_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_9_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, tmp_60_fu_2064_p1, tmp_121_1_fu_2588_p1, tmp_121_2_fu_3120_p1, tmp_121_3_fu_3652_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sumBuf_9_address1 <= tmp_121_3_fu_3652_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address1 <= tmp_121_2_fu_3120_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address1 <= tmp_121_1_fu_2588_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            sumBuf_9_address1 <= tmp_60_fu_2064_p1(10 - 1 downto 0);
        else 
            sumBuf_9_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    sumBuf_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_9_ce0 <= ap_const_logic_1;
        else 
            sumBuf_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sumBuf_9_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            sumBuf_9_ce1 <= ap_const_logic_1;
        else 
            sumBuf_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_112_1_fu_2504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1932_p2),64));

        tmp_112_2_fu_3036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1932_p2),64));

        tmp_112_3_fu_3568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1932_p2),64));

    tmp_11425_1_fu_2530_p2 <= std_logic_vector(unsigned(tmp_286_reg_4414) + unsigned(tmp_49_cast_reg_4134));
    tmp_11425_2_fu_3062_p2 <= std_logic_vector(unsigned(tmp_324_reg_4732) + unsigned(tmp_49_cast_reg_4134));
    tmp_11425_3_fu_3594_p2 <= std_logic_vector(unsigned(tmp_362_reg_5059) + unsigned(tmp_49_cast_reg_4134));
    tmp_115_1_fu_2534_p3 <= (tmp_11425_1_fu_2530_p2 & ap_const_lv3_0);
    tmp_115_2_fu_3066_p3 <= (tmp_11425_2_fu_3062_p2 & ap_const_lv3_0);
    tmp_115_3_fu_3598_p3 <= (tmp_11425_3_fu_3594_p2 & ap_const_lv3_0);
    tmp_11723_1_fu_2548_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_286_reg_4414));
    tmp_11723_2_fu_3080_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_324_reg_4732));
    tmp_11723_3_fu_3612_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_362_reg_5059));
        tmp_121_1_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1937_p2),64));

        tmp_121_2_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1937_p2),64));

        tmp_121_3_fu_3652_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1937_p2),64));

    tmp_13217_1_fu_2614_p2 <= std_logic_vector(unsigned(tmp_305_reg_4420) + unsigned(tmp_49_cast_reg_4134));
    tmp_13217_2_fu_3146_p2 <= std_logic_vector(unsigned(tmp_343_reg_4738) + unsigned(tmp_49_cast_reg_4134));
    tmp_13217_3_fu_3678_p2 <= std_logic_vector(unsigned(tmp_381_reg_5065) + unsigned(tmp_49_cast_reg_4134));
    tmp_133_1_fu_2618_p3 <= (tmp_13217_1_fu_2614_p2 & ap_const_lv3_0);
    tmp_133_2_fu_3150_p3 <= (tmp_13217_2_fu_3146_p2 & ap_const_lv3_0);
    tmp_133_3_fu_3682_p3 <= (tmp_13217_3_fu_3678_p2 & ap_const_lv3_0);
    tmp_13515_1_fu_2632_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_305_reg_4420));
    tmp_13515_2_fu_3164_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_343_reg_4738));
    tmp_13515_3_fu_3696_p2 <= std_logic_vector(unsigned(tmp_reg_4124) + unsigned(tmp_381_reg_5065));
    tmp_146_1_fu_3212_p2 <= std_logic_vector(unsigned(tmp_207_reg_4769) - unsigned(tmp_208_reg_4774));
    tmp_146_2_fu_3736_p2 <= std_logic_vector(unsigned(tmp_211_reg_5076) - unsigned(tmp_212_reg_5081));
    tmp_146_3_fu_4092_p2 <= std_logic_vector(unsigned(tmp_215_reg_5371) - unsigned(tmp_216_reg_5376));
    tmp_147_1_fu_3216_p2 <= std_logic_vector(unsigned(tmp_146_1_fu_3212_p2) - unsigned(tmp_209_reg_4779));
    tmp_147_2_fu_3740_p2 <= std_logic_vector(unsigned(tmp_146_2_fu_3736_p2) - unsigned(tmp_213_reg_5086));
    tmp_147_3_fu_4096_p2 <= std_logic_vector(unsigned(tmp_146_3_fu_4092_p2) - unsigned(tmp_217_reg_5381));
    tmp_148_1_fu_3221_p2 <= std_logic_vector(unsigned(tmp_210_reg_4784) + unsigned(tmp_147_1_fu_3216_p2));
    tmp_148_2_fu_3745_p2 <= std_logic_vector(unsigned(tmp_214_reg_5091) + unsigned(tmp_147_2_fu_3740_p2));
    tmp_148_3_fu_4101_p2 <= std_logic_vector(unsigned(tmp_218_reg_5386) + unsigned(tmp_147_3_fu_4096_p2));
    tmp_248_fu_1942_p1 <= grp_p_hls_fptosi_float_i_fu_1882_ap_return(29 - 1 downto 0);
    tmp_249_fu_2028_p1 <= tmp_56_fu_2023_p2(5 - 1 downto 0);
    tmp_250_fu_2040_p2 <= "1" when (unsigned(Lo_assign_fu_2032_p3) > unsigned(Hi_assign_fu_2017_p2)) else "0";
    tmp_251_fu_2046_p3 <= (tmp_249_fu_2028_p1 & ap_const_lv3_0);
    tmp_252_fu_2054_p1 <= Hi_assign_fu_2017_p2(8 - 1 downto 0);
    
    tmp_253_fu_2158_p4_proc : process(ap_port_reg_sumBufIndex_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_253_fu_2158_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := ap_port_reg_sumBufIndex_V;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_253_fu_2158_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_253_fu_2158_p4_i) := ap_port_reg_sumBufIndex_V(176-1-tmp_253_fu_2158_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_253_fu_2158_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_254_fu_2168_p2 <= std_logic_vector(unsigned(tmp_251_reg_4151) - unsigned(tmp_252_reg_4158));
    tmp_255_fu_2058_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_251_fu_2046_p3));
    tmp_256_fu_2172_p2 <= std_logic_vector(unsigned(tmp_252_reg_4158) - unsigned(tmp_251_reg_4151));
    tmp_257_fu_2176_p3 <= 
        tmp_254_fu_2168_p2 when (tmp_250_reg_4144(0) = '1') else 
        tmp_256_fu_2172_p2;
    tmp_258_fu_2183_p3 <= 
        tmp_253_fu_2158_p4 when (tmp_250_reg_4144(0) = '1') else 
        ap_port_reg_sumBufIndex_V;
    tmp_259_fu_2190_p3 <= 
        tmp_255_reg_4164 when (tmp_250_reg_4144(0) = '1') else 
        tmp_251_reg_4151;
    tmp_260_fu_2195_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_257_fu_2176_p3));
    tmp_261_fu_2201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_259_fu_2190_p3),176));
    tmp_262_fu_2205_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_260_fu_2195_p2),176));
    tmp_263_fu_2209_p2 <= std_logic_vector(shift_right(unsigned(tmp_258_fu_2183_p3),to_integer(unsigned('0' & tmp_261_fu_2201_p1(31-1 downto 0)))));
    tmp_264_fu_2215_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_262_fu_2205_p1(31-1 downto 0)))));
    tmp_265_fu_2221_p2 <= (tmp_264_fu_2215_p2 and tmp_263_fu_2209_p2);
    tmp_266_fu_2227_p1 <= tmp_265_fu_2221_p2(5 - 1 downto 0);
    tmp_267_fu_1946_p1 <= grp_p_hls_fptosi_float_i_fu_1894_ap_return(29 - 1 downto 0);
    tmp_268_fu_2114_p1 <= tmp_66_fu_2109_p2(5 - 1 downto 0);
    tmp_269_fu_2126_p2 <= "1" when (unsigned(Lo_assign_2_fu_2118_p3) > unsigned(Hi_assign_2_fu_2103_p2)) else "0";
    tmp_270_fu_2132_p3 <= (tmp_268_fu_2114_p1 & ap_const_lv3_0);
    tmp_271_fu_2140_p1 <= Hi_assign_2_fu_2103_p2(8 - 1 downto 0);
    
    tmp_272_fu_2331_p4_proc : process(ap_port_reg_sumBufIndex_V)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_272_fu_2331_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := ap_port_reg_sumBufIndex_V;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_272_fu_2331_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_272_fu_2331_p4_i) := ap_port_reg_sumBufIndex_V(176-1-tmp_272_fu_2331_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_272_fu_2331_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_273_fu_2341_p2 <= std_logic_vector(unsigned(tmp_270_reg_4396) - unsigned(tmp_271_reg_4403));
    tmp_274_fu_2144_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_270_fu_2132_p3));
    tmp_275_fu_2345_p2 <= std_logic_vector(unsigned(tmp_271_reg_4403) - unsigned(tmp_270_reg_4396));
    tmp_276_fu_2349_p3 <= 
        tmp_273_fu_2341_p2 when (tmp_269_reg_4389(0) = '1') else 
        tmp_275_fu_2345_p2;
    tmp_277_fu_2356_p3 <= 
        tmp_272_fu_2331_p4 when (tmp_269_reg_4389(0) = '1') else 
        ap_port_reg_sumBufIndex_V;
    tmp_278_fu_2363_p3 <= 
        tmp_274_reg_4409 when (tmp_269_reg_4389(0) = '1') else 
        tmp_270_reg_4396;
    tmp_279_fu_2368_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_276_fu_2349_p3));
    tmp_280_fu_2374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_278_fu_2363_p3),176));
    tmp_281_fu_2378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_279_fu_2368_p2),176));
    tmp_282_fu_2382_p2 <= std_logic_vector(shift_right(unsigned(tmp_277_fu_2356_p3),to_integer(unsigned('0' & tmp_280_fu_2374_p1(31-1 downto 0)))));
    tmp_283_fu_2388_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_281_fu_2378_p1(31-1 downto 0)))));
    tmp_284_fu_2394_p2 <= (tmp_283_fu_2388_p2 and tmp_282_fu_2382_p2);
    tmp_285_fu_2400_p1 <= tmp_284_fu_2394_p2(5 - 1 downto 0);
    tmp_286_fu_2150_p1 <= grp_p_hls_fptosi_float_i_fu_1882_ap_return(29 - 1 downto 0);
    tmp_287_fu_2552_p1 <= tmp_11723_1_fu_2548_p2(5 - 1 downto 0);
    tmp_288_fu_2564_p2 <= "1" when (unsigned(Lo_assign_s_fu_2556_p3) > unsigned(Hi_assign_s_fu_2542_p2)) else "0";
    tmp_289_fu_2570_p3 <= (tmp_287_fu_2552_p1 & ap_const_lv3_0);
    tmp_290_fu_2578_p1 <= Hi_assign_s_fu_2542_p2(8 - 1 downto 0);
    
    tmp_291_fu_2694_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_291_fu_2694_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_291_fu_2694_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_291_fu_2694_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_291_fu_2694_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_291_fu_2694_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_292_fu_2703_p2 <= std_logic_vector(unsigned(tmp_289_reg_4469) - unsigned(tmp_290_reg_4476));
    tmp_293_fu_2582_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_289_fu_2570_p3));
    tmp_294_fu_2707_p2 <= std_logic_vector(unsigned(tmp_290_reg_4476) - unsigned(tmp_289_reg_4469));
    tmp_295_fu_2711_p3 <= 
        tmp_292_fu_2703_p2 when (tmp_288_reg_4462(0) = '1') else 
        tmp_294_fu_2707_p2;
    tmp_296_fu_2718_p3 <= 
        tmp_291_fu_2694_p4 when (tmp_288_reg_4462(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_297_fu_2724_p3 <= 
        tmp_293_reg_4482 when (tmp_288_reg_4462(0) = '1') else 
        tmp_289_reg_4469;
    tmp_298_fu_2729_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_295_fu_2711_p3));
    tmp_299_fu_2735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_297_fu_2724_p3),176));
    tmp_300_fu_2739_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_298_fu_2729_p2),176));
    tmp_301_fu_2743_p2 <= std_logic_vector(shift_right(unsigned(tmp_296_fu_2718_p3),to_integer(unsigned('0' & tmp_299_fu_2735_p1(31-1 downto 0)))));
    tmp_302_fu_2749_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_300_fu_2739_p1(31-1 downto 0)))));
    tmp_303_fu_2755_p2 <= (tmp_302_fu_2749_p2 and tmp_301_fu_2743_p2);
    tmp_304_fu_2761_p1 <= tmp_303_fu_2755_p2(5 - 1 downto 0);
    tmp_305_fu_2154_p1 <= grp_p_hls_fptosi_float_i_fu_1894_ap_return(29 - 1 downto 0);
    tmp_306_fu_2636_p1 <= tmp_13515_1_fu_2632_p2(5 - 1 downto 0);
    tmp_307_fu_2648_p2 <= "1" when (unsigned(Lo_assign_2_1_fu_2640_p3) > unsigned(Hi_assign_2_1_fu_2626_p2)) else "0";
    tmp_308_fu_2654_p3 <= (tmp_306_fu_2636_p1 & ap_const_lv3_0);
    tmp_309_fu_2662_p1 <= Hi_assign_2_1_fu_2626_p2(8 - 1 downto 0);
    
    tmp_310_fu_2865_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_310_fu_2865_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_310_fu_2865_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_310_fu_2865_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_310_fu_2865_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_310_fu_2865_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_311_fu_2874_p2 <= std_logic_vector(unsigned(tmp_308_reg_4714) - unsigned(tmp_309_reg_4721));
    tmp_312_fu_2666_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_308_fu_2654_p3));
    tmp_313_fu_2878_p2 <= std_logic_vector(unsigned(tmp_309_reg_4721) - unsigned(tmp_308_reg_4714));
    tmp_314_fu_2882_p3 <= 
        tmp_311_fu_2874_p2 when (tmp_307_reg_4707(0) = '1') else 
        tmp_313_fu_2878_p2;
    tmp_315_fu_2889_p3 <= 
        tmp_310_fu_2865_p4 when (tmp_307_reg_4707(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_316_fu_2895_p3 <= 
        tmp_312_reg_4727 when (tmp_307_reg_4707(0) = '1') else 
        tmp_308_reg_4714;
    tmp_317_fu_2900_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_314_fu_2882_p3));
    tmp_318_fu_2906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_316_fu_2895_p3),176));
    tmp_319_fu_2910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_317_fu_2900_p2),176));
    tmp_320_fu_2914_p2 <= std_logic_vector(shift_right(unsigned(tmp_315_fu_2889_p3),to_integer(unsigned('0' & tmp_318_fu_2906_p1(31-1 downto 0)))));
    tmp_321_fu_2920_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_319_fu_2910_p1(31-1 downto 0)))));
    tmp_322_fu_2926_p2 <= (tmp_321_fu_2920_p2 and tmp_320_fu_2914_p2);
    tmp_323_fu_2932_p1 <= tmp_322_fu_2926_p2(5 - 1 downto 0);
    tmp_324_fu_2672_p1 <= grp_p_hls_fptosi_float_i_fu_1882_ap_return(29 - 1 downto 0);
    tmp_325_fu_3084_p1 <= tmp_11723_2_fu_3080_p2(5 - 1 downto 0);
    tmp_326_fu_3096_p2 <= "1" when (unsigned(Lo_assign_4_fu_3088_p3) > unsigned(Hi_assign_4_fu_3074_p2)) else "0";
    tmp_327_fu_3102_p3 <= (tmp_325_fu_3084_p1 & ap_const_lv3_0);
    tmp_328_fu_3110_p1 <= Hi_assign_4_fu_3074_p2(8 - 1 downto 0);
    
    tmp_329_fu_3226_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_329_fu_3226_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_329_fu_3226_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_329_fu_3226_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_329_fu_3226_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_329_fu_3226_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_330_fu_3235_p2 <= std_logic_vector(unsigned(tmp_327_reg_4796) - unsigned(tmp_328_reg_4803));
    tmp_331_fu_3114_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_327_fu_3102_p3));
    tmp_332_fu_3239_p2 <= std_logic_vector(unsigned(tmp_328_reg_4803) - unsigned(tmp_327_reg_4796));
    tmp_333_fu_3243_p3 <= 
        tmp_330_fu_3235_p2 when (tmp_326_reg_4789(0) = '1') else 
        tmp_332_fu_3239_p2;
    tmp_334_fu_3250_p3 <= 
        tmp_329_fu_3226_p4 when (tmp_326_reg_4789(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_335_fu_3256_p3 <= 
        tmp_331_reg_4809 when (tmp_326_reg_4789(0) = '1') else 
        tmp_327_reg_4796;
    tmp_336_fu_3261_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_333_fu_3243_p3));
    tmp_337_fu_3267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_335_fu_3256_p3),176));
    tmp_338_fu_3271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_336_fu_3261_p2),176));
    tmp_339_fu_3275_p2 <= std_logic_vector(shift_right(unsigned(tmp_334_fu_3250_p3),to_integer(unsigned('0' & tmp_337_fu_3267_p1(31-1 downto 0)))));
    tmp_340_fu_3281_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_338_fu_3271_p1(31-1 downto 0)))));
    tmp_341_fu_3287_p2 <= (tmp_340_fu_3281_p2 and tmp_339_fu_3275_p2);
    tmp_342_fu_3293_p1 <= tmp_341_fu_3287_p2(5 - 1 downto 0);
    tmp_343_fu_2676_p1 <= grp_p_hls_fptosi_float_i_fu_1894_ap_return(29 - 1 downto 0);
    tmp_344_fu_3168_p1 <= tmp_13515_2_fu_3164_p2(5 - 1 downto 0);
    tmp_345_fu_3180_p2 <= "1" when (unsigned(Lo_assign_2_2_fu_3172_p3) > unsigned(Hi_assign_2_2_fu_3158_p2)) else "0";
    tmp_346_fu_3186_p3 <= (tmp_344_fu_3168_p1 & ap_const_lv3_0);
    tmp_347_fu_3194_p1 <= Hi_assign_2_2_fu_3158_p2(8 - 1 downto 0);
    
    tmp_348_fu_3397_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_348_fu_3397_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_348_fu_3397_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_348_fu_3397_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_348_fu_3397_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_348_fu_3397_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_349_fu_3406_p2 <= std_logic_vector(unsigned(tmp_346_reg_5041) - unsigned(tmp_347_reg_5048));
    tmp_350_fu_3198_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_346_fu_3186_p3));
    tmp_351_fu_3410_p2 <= std_logic_vector(unsigned(tmp_347_reg_5048) - unsigned(tmp_346_reg_5041));
    tmp_352_fu_3414_p3 <= 
        tmp_349_fu_3406_p2 when (tmp_345_reg_5034(0) = '1') else 
        tmp_351_fu_3410_p2;
    tmp_353_fu_3421_p3 <= 
        tmp_348_fu_3397_p4 when (tmp_345_reg_5034(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_354_fu_3427_p3 <= 
        tmp_350_reg_5054 when (tmp_345_reg_5034(0) = '1') else 
        tmp_346_reg_5041;
    tmp_355_fu_3432_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_352_fu_3414_p3));
    tmp_356_fu_3438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_354_fu_3427_p3),176));
    tmp_357_fu_3442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_355_fu_3432_p2),176));
    tmp_358_fu_3446_p2 <= std_logic_vector(shift_right(unsigned(tmp_353_fu_3421_p3),to_integer(unsigned('0' & tmp_356_fu_3438_p1(31-1 downto 0)))));
    tmp_359_fu_3452_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_357_fu_3442_p1(31-1 downto 0)))));
    tmp_360_fu_3458_p2 <= (tmp_359_fu_3452_p2 and tmp_358_fu_3446_p2);
    tmp_361_fu_3464_p1 <= tmp_360_fu_3458_p2(5 - 1 downto 0);
    tmp_362_fu_3204_p1 <= grp_p_hls_fptosi_float_i_fu_1882_ap_return(29 - 1 downto 0);
    tmp_363_fu_3616_p1 <= tmp_11723_3_fu_3612_p2(5 - 1 downto 0);
    tmp_364_fu_3628_p2 <= "1" when (unsigned(Lo_assign_5_fu_3620_p3) > unsigned(Hi_assign_5_fu_3606_p2)) else "0";
    tmp_365_fu_3634_p3 <= (tmp_363_fu_3616_p1 & ap_const_lv3_0);
    tmp_366_fu_3642_p1 <= Hi_assign_5_fu_3606_p2(8 - 1 downto 0);
    
    tmp_367_fu_3750_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_367_fu_3750_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_367_fu_3750_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_367_fu_3750_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_367_fu_3750_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_367_fu_3750_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_368_fu_3759_p2 <= std_logic_vector(unsigned(tmp_365_reg_5103) - unsigned(tmp_366_reg_5110));
    tmp_369_fu_3646_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_365_fu_3634_p3));
    tmp_370_fu_3763_p2 <= std_logic_vector(unsigned(tmp_366_reg_5110) - unsigned(tmp_365_reg_5103));
    tmp_371_fu_3767_p3 <= 
        tmp_368_fu_3759_p2 when (tmp_364_reg_5096(0) = '1') else 
        tmp_370_fu_3763_p2;
    tmp_372_fu_3774_p3 <= 
        tmp_367_fu_3750_p4 when (tmp_364_reg_5096(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_373_fu_3780_p3 <= 
        tmp_369_reg_5116 when (tmp_364_reg_5096(0) = '1') else 
        tmp_365_reg_5103;
    tmp_374_fu_3785_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_371_fu_3767_p3));
    tmp_375_fu_3791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_373_fu_3780_p3),176));
    tmp_376_fu_3795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_374_fu_3785_p2),176));
    tmp_377_fu_3799_p2 <= std_logic_vector(shift_right(unsigned(tmp_372_fu_3774_p3),to_integer(unsigned('0' & tmp_375_fu_3791_p1(31-1 downto 0)))));
    tmp_378_fu_3805_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_376_fu_3795_p1(31-1 downto 0)))));
    tmp_379_fu_3811_p2 <= (tmp_378_fu_3805_p2 and tmp_377_fu_3799_p2);
    tmp_380_fu_3817_p1 <= tmp_379_fu_3811_p2(5 - 1 downto 0);
    tmp_381_fu_3208_p1 <= grp_p_hls_fptosi_float_i_fu_1894_ap_return(29 - 1 downto 0);
    tmp_382_fu_3700_p1 <= tmp_13515_3_fu_3696_p2(5 - 1 downto 0);
    tmp_383_fu_3712_p2 <= "1" when (unsigned(Lo_assign_2_3_fu_3704_p3) > unsigned(Hi_assign_2_3_fu_3690_p2)) else "0";
    tmp_384_fu_3718_p3 <= (tmp_382_fu_3700_p1 & ap_const_lv3_0);
    tmp_385_fu_3726_p1 <= Hi_assign_2_3_fu_3690_p2(8 - 1 downto 0);
    
    tmp_386_fu_3921_p4_proc : process(sumBufIndex_V_read_reg_4426)
    variable vlo_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(176+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_386_fu_3921_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(176 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_AF(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := sumBufIndex_V_read_reg_4426;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(176-1-unsigned(ap_const_lv32_AF(8-1 downto 0)));
            for tmp_386_fu_3921_p4_i in 0 to 176-1 loop
                v0_cpy(tmp_386_fu_3921_p4_i) := sumBufIndex_V_read_reg_4426(176-1-tmp_386_fu_3921_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(176-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_386_fu_3921_p4 <= resvalue(176-1 downto 0);
    end process;

    tmp_387_fu_3930_p2 <= std_logic_vector(unsigned(tmp_384_reg_5348) - unsigned(tmp_385_reg_5355));
    tmp_388_fu_3730_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_384_fu_3718_p3));
    tmp_389_fu_3934_p2 <= std_logic_vector(unsigned(tmp_385_reg_5355) - unsigned(tmp_384_reg_5348));
    tmp_390_fu_3938_p3 <= 
        tmp_387_fu_3930_p2 when (tmp_383_reg_5341(0) = '1') else 
        tmp_389_fu_3934_p2;
    tmp_391_fu_3945_p3 <= 
        tmp_386_fu_3921_p4 when (tmp_383_reg_5341(0) = '1') else 
        sumBufIndex_V_read_reg_4426;
    tmp_392_fu_3951_p3 <= 
        tmp_388_reg_5361 when (tmp_383_reg_5341(0) = '1') else 
        tmp_384_reg_5348;
    tmp_393_fu_3956_p2 <= std_logic_vector(signed(ap_const_lv8_AF) - signed(tmp_390_fu_3938_p3));
    tmp_394_fu_3962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_392_fu_3951_p3),176));
    tmp_395_fu_3966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_393_fu_3956_p2),176));
    tmp_396_fu_3970_p2 <= std_logic_vector(shift_right(unsigned(tmp_391_fu_3945_p3),to_integer(unsigned('0' & tmp_394_fu_3962_p1(31-1 downto 0)))));
    tmp_397_fu_3976_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv176_lc_1),to_integer(unsigned('0' & tmp_395_fu_3966_p1(31-1 downto 0)))));
    tmp_398_fu_3982_p2 <= (tmp_397_fu_3976_p2 and tmp_396_fu_3970_p2);
    tmp_399_fu_3988_p1 <= tmp_398_fu_3982_p2(5 - 1 downto 0);
    tmp_49_cast_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_1994_p2),29));
    tmp_49_fu_1994_p2 <= std_logic_vector(unsigned(tmp_cast_fu_1964_p1) + unsigned(ap_const_lv11_1));
        tmp_51_fu_1968_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1932_p2),64));

    tmp_53_fu_2004_p2 <= std_logic_vector(unsigned(tmp_248_reg_4106) + unsigned(tmp_49_cast_fu_2000_p1));
    tmp_55_fu_2009_p3 <= (tmp_53_fu_2004_p2 & ap_const_lv3_0);
    tmp_56_fu_2023_p2 <= std_logic_vector(unsigned(tmp_fu_1960_p1) + unsigned(tmp_248_reg_4106));
        tmp_60_fu_2064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1937_p2),64));

    tmp_63_fu_2090_p2 <= std_logic_vector(unsigned(tmp_267_reg_4112) + unsigned(tmp_49_cast_fu_2000_p1));
    tmp_65_fu_2095_p3 <= (tmp_63_fu_2090_p2 & ap_const_lv3_0);
    tmp_66_fu_2109_p2 <= std_logic_vector(unsigned(tmp_fu_1960_p1) + unsigned(tmp_267_reg_4112));
    tmp_68_fu_2680_p2 <= std_logic_vector(unsigned(tmp_203_reg_4442) - unsigned(tmp_204_reg_4447));
    tmp_69_fu_2684_p2 <= std_logic_vector(unsigned(tmp_68_fu_2680_p2) - unsigned(tmp_205_reg_4452));
    tmp_70_fu_2689_p2 <= std_logic_vector(unsigned(tmp_206_reg_4457) + unsigned(tmp_69_fu_2684_p2));
    tmp_cast_fu_1964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rOffset_cast_fu_1950_p1),11));
    tmp_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rOffset_cast_fu_1950_p1),29));
end behav;
