// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_hls_fptosi_float_i.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic p_hls_fptosi_float_i::ap_const_logic_1 = sc_dt::Log_1;
const bool p_hls_fptosi_float_i::ap_const_boolean_1 = true;
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_1F = "11111";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_17 = "10111";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_1E = "11110";
const sc_lv<1> p_hls_fptosi_float_i::ap_const_lv1_1 = "1";
const sc_lv<1> p_hls_fptosi_float_i::ap_const_lv1_0 = "0";
const sc_lv<9> p_hls_fptosi_float_i::ap_const_lv9_181 = "110000001";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_8 = "1000";
const sc_lv<8> p_hls_fptosi_float_i::ap_const_lv8_7F = "1111111";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_18 = "11000";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_37 = "110111";
const sc_lv<32> p_hls_fptosi_float_i::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_logic p_hls_fptosi_float_i::ap_const_logic_0 = sc_dt::Log_0;

p_hls_fptosi_float_i::p_hls_fptosi_float_i(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( p_Val2_6_fu_166_p3 );
    sensitive << ( p_Result_s_fu_48_p3 );
    sensitive << ( result_V_1_fu_174_p2 );

    SC_METHOD(thread_isNeg_fu_94_p3);
    sensitive << ( sh_assign_fu_88_p2 );

    SC_METHOD(thread_mantissa_V_1_i_i_cas_fu_80_p1);
    sensitive << ( mantissa_V_fu_70_p4 );

    SC_METHOD(thread_mantissa_V_fu_70_p4);
    sensitive << ( tmp_V_1_fu_66_p1 );

    SC_METHOD(thread_p_Result_s_fu_48_p3);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_p_Val2_6_fu_166_p3);
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_132_fu_152_p1 );
    sensitive << ( tmp_133_fu_156_p4 );

    SC_METHOD(thread_p_Val2_s_fu_44_p1);
    sensitive << ( x );

    SC_METHOD(thread_r_V_3_fu_138_p2);
    sensitive << ( mantissa_V_1_i_i_cas_fu_80_p1 );
    sensitive << ( tmp_i_i_83_fu_128_p1 );

    SC_METHOD(thread_r_V_fu_132_p2);
    sensitive << ( mantissa_V_fu_70_p4 );
    sensitive << ( sh_assign_2_i_i_cast_1_fu_124_p1 );

    SC_METHOD(thread_result_V_1_fu_174_p2);
    sensitive << ( p_Val2_6_fu_166_p3 );

    SC_METHOD(thread_sh_assign_2_i_i_cast_1_fu_124_p1);
    sensitive << ( ush_fu_112_p3 );

    SC_METHOD(thread_sh_assign_2_i_i_cast_fu_120_p1);
    sensitive << ( ush_fu_112_p3 );

    SC_METHOD(thread_sh_assign_fu_88_p2);
    sensitive << ( tmp_i_i_i_cast_fu_84_p1 );

    SC_METHOD(thread_tmp_132_fu_152_p1);
    sensitive << ( tmp_fu_144_p3 );

    SC_METHOD(thread_tmp_133_fu_156_p4);
    sensitive << ( r_V_3_fu_138_p2 );

    SC_METHOD(thread_tmp_V_1_fu_66_p1);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_V_fu_56_p4);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( r_V_fu_132_p2 );

    SC_METHOD(thread_tmp_i_i_83_fu_128_p1);
    sensitive << ( sh_assign_2_i_i_cast_fu_120_p1 );

    SC_METHOD(thread_tmp_i_i_cast_fu_108_p1);
    sensitive << ( tmp_i_i_fu_102_p2 );

    SC_METHOD(thread_tmp_i_i_fu_102_p2);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_84_p1);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_ush_fu_112_p3);
    sensitive << ( sh_assign_fu_88_p2 );
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_i_i_cast_fu_108_p1 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_hls_fptosi_float_i_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, p_Val2_s_fu_44_p1, "p_Val2_s_fu_44_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_66_p1, "tmp_V_1_fu_66_p1");
    sc_trace(mVcdFile, mantissa_V_fu_70_p4, "mantissa_V_fu_70_p4");
    sc_trace(mVcdFile, tmp_V_fu_56_p4, "tmp_V_fu_56_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_84_p1, "tmp_i_i_i_cast_fu_84_p1");
    sc_trace(mVcdFile, sh_assign_fu_88_p2, "sh_assign_fu_88_p2");
    sc_trace(mVcdFile, tmp_i_i_fu_102_p2, "tmp_i_i_fu_102_p2");
    sc_trace(mVcdFile, isNeg_fu_94_p3, "isNeg_fu_94_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_108_p1, "tmp_i_i_cast_fu_108_p1");
    sc_trace(mVcdFile, ush_fu_112_p3, "ush_fu_112_p3");
    sc_trace(mVcdFile, sh_assign_2_i_i_cast_fu_120_p1, "sh_assign_2_i_i_cast_fu_120_p1");
    sc_trace(mVcdFile, sh_assign_2_i_i_cast_1_fu_124_p1, "sh_assign_2_i_i_cast_1_fu_124_p1");
    sc_trace(mVcdFile, mantissa_V_1_i_i_cas_fu_80_p1, "mantissa_V_1_i_i_cas_fu_80_p1");
    sc_trace(mVcdFile, tmp_i_i_83_fu_128_p1, "tmp_i_i_83_fu_128_p1");
    sc_trace(mVcdFile, r_V_fu_132_p2, "r_V_fu_132_p2");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, r_V_3_fu_138_p2, "r_V_3_fu_138_p2");
    sc_trace(mVcdFile, tmp_132_fu_152_p1, "tmp_132_fu_152_p1");
    sc_trace(mVcdFile, tmp_133_fu_156_p4, "tmp_133_fu_156_p4");
    sc_trace(mVcdFile, p_Val2_6_fu_166_p3, "p_Val2_6_fu_166_p3");
    sc_trace(mVcdFile, p_Result_s_fu_48_p3, "p_Result_s_fu_48_p3");
    sc_trace(mVcdFile, result_V_1_fu_174_p2, "result_V_1_fu_174_p2");
#endif

    }
}

p_hls_fptosi_float_i::~p_hls_fptosi_float_i() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void p_hls_fptosi_float_i::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void p_hls_fptosi_float_i::thread_ap_return() {
    ap_return = (!p_Result_s_fu_48_p3.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_fu_48_p3.read()[0].to_bool())? result_V_1_fu_174_p2.read(): p_Val2_6_fu_166_p3.read());
}

void p_hls_fptosi_float_i::thread_isNeg_fu_94_p3() {
    isNeg_fu_94_p3 = sh_assign_fu_88_p2.read().range(8, 8);
}

void p_hls_fptosi_float_i::thread_mantissa_V_1_i_i_cas_fu_80_p1() {
    mantissa_V_1_i_i_cas_fu_80_p1 = esl_zext<79,25>(mantissa_V_fu_70_p4.read());
}

void p_hls_fptosi_float_i::thread_mantissa_V_fu_70_p4() {
    mantissa_V_fu_70_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_fu_66_p1.read()), ap_const_lv1_0);
}

void p_hls_fptosi_float_i::thread_p_Result_s_fu_48_p3() {
    p_Result_s_fu_48_p3 = p_Val2_s_fu_44_p1.read().range(31, 31);
}

void p_hls_fptosi_float_i::thread_p_Val2_6_fu_166_p3() {
    p_Val2_6_fu_166_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_132_fu_152_p1.read(): tmp_133_fu_156_p4.read());
}

void p_hls_fptosi_float_i::thread_p_Val2_s_fu_44_p1() {
    p_Val2_s_fu_44_p1 = x.read();
}

void p_hls_fptosi_float_i::thread_r_V_3_fu_138_p2() {
    r_V_3_fu_138_p2 = (!tmp_i_i_83_fu_128_p1.read().is_01())? sc_lv<79>(): mantissa_V_1_i_i_cas_fu_80_p1.read() << (unsigned short)tmp_i_i_83_fu_128_p1.read().to_uint();
}

void p_hls_fptosi_float_i::thread_r_V_fu_132_p2() {
    r_V_fu_132_p2 = (!sh_assign_2_i_i_cast_1_fu_124_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_70_p4.read() >> (unsigned short)sh_assign_2_i_i_cast_1_fu_124_p1.read().to_uint();
}

void p_hls_fptosi_float_i::thread_result_V_1_fu_174_p2() {
    result_V_1_fu_174_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_6_fu_166_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_6_fu_166_p3.read()));
}

void p_hls_fptosi_float_i::thread_sh_assign_2_i_i_cast_1_fu_124_p1() {
    sh_assign_2_i_i_cast_1_fu_124_p1 = esl_sext<25,9>(ush_fu_112_p3.read());
}

void p_hls_fptosi_float_i::thread_sh_assign_2_i_i_cast_fu_120_p1() {
    sh_assign_2_i_i_cast_fu_120_p1 = esl_sext<32,9>(ush_fu_112_p3.read());
}

void p_hls_fptosi_float_i::thread_sh_assign_fu_88_p2() {
    sh_assign_fu_88_p2 = (!ap_const_lv9_181.is_01() || !tmp_i_i_i_cast_fu_84_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_i_i_i_cast_fu_84_p1.read()));
}

void p_hls_fptosi_float_i::thread_tmp_132_fu_152_p1() {
    tmp_132_fu_152_p1 = esl_zext<32,1>(tmp_fu_144_p3.read());
}

void p_hls_fptosi_float_i::thread_tmp_133_fu_156_p4() {
    tmp_133_fu_156_p4 = r_V_3_fu_138_p2.read().range(55, 24);
}

void p_hls_fptosi_float_i::thread_tmp_V_1_fu_66_p1() {
    tmp_V_1_fu_66_p1 = p_Val2_s_fu_44_p1.read().range(23-1, 0);
}

void p_hls_fptosi_float_i::thread_tmp_V_fu_56_p4() {
    tmp_V_fu_56_p4 = p_Val2_s_fu_44_p1.read().range(30, 23);
}

void p_hls_fptosi_float_i::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = r_V_fu_132_p2.read().range(24, 24);
}

void p_hls_fptosi_float_i::thread_tmp_i_i_83_fu_128_p1() {
    tmp_i_i_83_fu_128_p1 = esl_zext<79,32>(sh_assign_2_i_i_cast_fu_120_p1.read());
}

void p_hls_fptosi_float_i::thread_tmp_i_i_cast_fu_108_p1() {
    tmp_i_i_cast_fu_108_p1 = esl_sext<9,8>(tmp_i_i_fu_102_p2.read());
}

void p_hls_fptosi_float_i::thread_tmp_i_i_fu_102_p2() {
    tmp_i_i_fu_102_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_56_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_56_p4.read()));
}

void p_hls_fptosi_float_i::thread_tmp_i_i_i_cast_fu_84_p1() {
    tmp_i_i_i_cast_fu_84_p1 = esl_zext<9,8>(tmp_V_fu_56_p4.read());
}

void p_hls_fptosi_float_i::thread_ush_fu_112_p3() {
    ush_fu_112_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_i_i_cast_fu_108_p1.read(): sh_assign_fu_88_p2.read());
}

}

